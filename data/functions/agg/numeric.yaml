functions:
  - id: agg.sum
    kind: reduce
    params: [{ name: source_value }]
    dtype:
      rule: same_as
      param: source_value
    reduction_strategy: identity # This function has a true identity value.
    aliases: ["sum"]

  - id: agg.count
    kind: reduce
    params: [{ name: source_value }]
    dtype:
      rule: scalar
      kind: integer
    reduction_strategy: identity # This function has a true identity value.
    aliases: ["count"]

  - id: agg.min
    kind: reduce
    params: [{ name: source_value }]
    dtype:
      rule: element_of
      param: source_value
    reduction_strategy: first_element
    aliases: ["min"]

  - id: agg.max
    kind: reduce
    params: [{ name: source_value }]
    dtype:
      rule: element_of
      param: source_value
    reduction_strategy: first_element
    aliases: ["max"]

  - id: agg.mean
    kind: reduce
    params: [{ name: source_value }]
    dtype:
      rule: scalar
      kind: float
    aliases: ["mean", "avg"]
    expand:
      fn: div
      args:
        - fn: sum
          args: ["$1"] # $1 is source_value
        - fn: count
          args: ["$1"]

  - id: agg.sum_if
    kind: reduce
    params: [{ name: source_value }, { name: condition }]
    dtype:
      rule: same_as
      param: source_value
    aliases: ["sum_if"]
    expand:
      fn: sum
      args:
        - fn: __select__
          args: ["$2", "$1", { const: 0 }] # $1=source_value, $2=condition

  - id: agg.count_if
    kind: reduce
    params: [{ name: condition }, { name: source_value }]
    dtype:
      rule: scalar
      kind: integer
    aliases: ["count_if"]
    expand:
      fn: sum # Summing 1s and 0s is equivalent to a conditional count
      args:
        - fn: __select__
          args:
            - fn: eq
              args: ["$1", "$2"]
            - { const: 1 }
            - { const: 0 }

  - id: agg.mean_if
    kind: reduce
    params: [{ name: source_value }, { name: condition }]
    dtype:
      rule: scalar
      kind: float
    aliases: ["avg_if", "mean_if"]
    expand:
      fn: div
      args:
        - fn: sum_if
          args: ["$1", "$2"] # Sum the values where the condition is true
        - fn: count_if
          args: ["$1", "$2"] # Count the values where the condition is true
