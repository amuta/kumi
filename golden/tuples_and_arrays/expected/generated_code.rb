# Autogenerated by Kumi Codegen
module SchemaModule
  def self.from(input_data)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def [](name)
    case name
    when :x_is_large then _x_is_large
    when :selected_value then _selected_value
    when :final_value_per_point then _final_value_per_point
    when :grand_total then _grand_total
    else raise KeyError, "Unknown declaration"
    end
  end

  def _x_is_large
    out = []
    t1 = @input["points"]
    t1.each_with_index do |points_el_2, _points_i_3|
      t4 = points_el_2["x"]
      t6 = t4 > 100
      out << t6
    end
    out
  end

  def _selected_value
    out = []
    t7 = @input["points"]
    t7.each_with_index do |points_el_8, _points_i_9|
      t28 = points_el_8["x"]
      t30 = t28 > 100
      t12 = points_el_8["y"]
      t13 = t30 ? t28 : t12
      out << t13
    end
    out
  end

  def _final_value_per_point
    out = []
    t14 = @input["points"]
    t14.each_with_index do |points_el_15, _points_i_16|
      t42 = points_el_15["x"]
      t44 = t42 > 100
      t34 = points_el_15["y"]
      t35 = t44 ? t42 : t34
      t19 = [t35, t42]
      t20 = t19.max
      out << t20
    end
    out
  end

  def _grand_total
    acc_21 = 0
    t22 = @input["points"]
    t22.each_with_index do |points_el_23, _points_i_24|
      t47 = points_el_23["x"]
      t49 = t47 > 100
      t51 = points_el_23["y"]
      t52 = t49 ? t47 : t51
      t39 = [t52, t47]
      t40 = t39.max
      acc_21 += t40
    end
    acc_21
  end
end
