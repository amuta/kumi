# Autogenerated by Kumi Codegen
module SchemaModule
  def self.from(input_data)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def [](name)
    case name
    when :max_y then _max_y
    when :tuple then _tuple
    when :max_1 then _max_1
    when :max_2 then _max_2
    when :min_1 then _min_1
    when :min_2 then _min_2
    else raise KeyError, "Unknown declaration"
    end
  end

  def _max_y
    acc_1 = nil
    t2 = @input["x"]
    t2.each_with_index do |x_el_3, _x_i_4|
      acc_1 ||= x_el_3
      acc_1 = x_el_3 if x_el_3 > acc_1
    end
    acc_1
  end

  def _tuple
    t29 = nil
    t31 = @input["x"]
    t31.each_with_index do |x_el_3, _x_i_4|
      t29 ||= x_el_3
      t29 = x_el_3 if x_el_3 > t29
    end
    t32 = t29
    [1, 2, 3, t32]
  end

  def _max_1
    t51 = nil
    t53 = @input["x"]
    t53.each_with_index do |x_el_3, _x_i_4|
      t51 ||= x_el_3
      t51 = x_el_3 if x_el_3 > t51
    end
    t54 = t51
    t37 = [1, 2, 3, t54]
    t37.max
  end

  def _max_2
    t38 = nil
    t40 = @input["x"]
    t40.each_with_index do |x_el_3, _x_i_4|
      t38 ||= x_el_3
      t38 = x_el_3 if x_el_3 > t38
    end
    t41 = t38
    t18 = [1, 2, 3, t41, 1000]
    t18.max
  end

  def _min_1
    t55 = nil
    t57 = @input["x"]
    t57.each_with_index do |x_el_3, _x_i_4|
      t55 ||= x_el_3
      t55 = x_el_3 if x_el_3 > t55
    end
    t58 = t55
    t46 = [1, 2, 3, t58]
    t46.min
  end

  def _min_2
    t47 = nil
    t49 = @input["x"]
    t49.each_with_index do |x_el_3, _x_i_4|
      t47 ||= x_el_3
      t47 = x_el_3 if x_el_3 > t47
    end
    t50 = t47
    t27 = [1, 2, 3, t50, -100]
    t27.min
  end
end
