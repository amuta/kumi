(Root
  inputs: [
    (InputDeclaration :points :array
      [
        (InputDeclaration :point :hash
          [
            (InputDeclaration :x :integer)
            (InputDeclaration :y :integer)
          ]
        )
      ]
    )
  ]
  values: [
    (ValueDeclaration :selected_value
      (CallExpression :select
        (DeclarationReference :x_is_large)
        (InputElementReference points.point.x)
        (InputElementReference points.point.y)
      )
    )
    (ValueDeclaration :final_value_per_point
      (CallExpression :max
        (ArrayExpression
          (DeclarationReference :selected_value)
          (InputElementReference points.point.x)
        )
      )
    )
    (ValueDeclaration :grand_total
      (CallExpression :sum
        (DeclarationReference :final_value_per_point)
      )
    )
  ]
  traits: [
    (TraitDeclaration :x_is_large
      (CallExpression :>
        (InputElementReference points.point.x)
        (Literal 100)
      )
    )
  ]
)