# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_20d1d441d90a6d3f82885cad1f864329c5ff19cbd4e74a20b0e2248815f1ec56
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :numbers_mult_10 then _numbers_mult_10
    when :sum_of_nums then _sum_of_nums
    else raise KeyError, "Unknown declaration"
    end
  end

  def _numbers_mult_10(input = @input)
    out = []
    t1 = input["a1"] || input[:a1]
    t13 = 10
    t1.each_with_index do |a1_el_2, a1_i_3|
      out_1 = []
      a1_el_2.each_with_index do |ea1_el_4, ea1_i_5|
        out_2 = []
        t6 = ea1_el_4["a2"] || ea1_el_4[:a2]
        t6.each_with_index do |a2_el_7, a2_i_8|
          out_3 = []
          t9 = a2_el_7["h1"] || a2_el_7[:h1]
          t10 = t9["ea2"] || t9[:ea2]
          t10.each_with_index do |ea2_el_11, ea2_i_12|
            t14 = ea2_el_11 * t13
            out_3 << t14
          end
          out_2 << out_3
        end
        out_1 << out_2
      end
      out << out_1
    end
    out
  end

  def _sum_of_nums(input = @input)
    out = []
    t15 = input["a1"] || input[:a1]
    t34 = 10
    t15.each_with_index do |a1_el_16, a1_i_17|
      out_1 = []
      a1_el_16.each_with_index do |ea1_el_18, ea1_i_19|
        out_2 = []
        t20 = ea1_el_18["a2"] || ea1_el_18[:a2]
        t20.each_with_index do |a2_el_21, a2_i_22|
          acc_23 = 0
          t24 = a2_el_21["h1"] || a2_el_21[:h1]
          t25 = t24["ea2"] || t24[:ea2]
          t25.each_with_index do |ea2_el_26, ea2_i_27|
            t35 = ea2_el_26 * t34
            acc_23 += t35
          end
          t29 = acc_23
          out_2 << t29
        end
        out_1 << out_2
      end
      out << out_1
    end
    out
  end
end
