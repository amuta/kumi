# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_3b536ea2bf7ca9e6c04944af342a531cabee5381be8d99860075a0c1ba3e3603
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :numbers_mult_10 then _numbers_mult_10
    when :sum_of_nums then _sum_of_nums
    else raise KeyError, "Unknown declaration"
    end
  end

  def _numbers_mult_10(input = @input)
    out = []
    t1 = input["a1"] || input[:a1]
    t11 = 10
    t1.each_with_index do |a1_el_2, a1_i_3|
      out_1 = []
      a1_el_2.each_with_index do |ea1_el_4, ea1_i_5|
        out_2 = []
        ea1_el_4.each_with_index do |a2_el_6, a2_i_7|
          out_3 = []
          t8 = a2_el_6["ea2"] || a2_el_6[:ea2]
          t8.each_with_index do |ea2_el_9, ea2_i_10|
            t12 = ea2_el_9 * t11
            out_3 << t12
          end
          out_2 << out_3
        end
        out_1 << out_2
      end
      out << out_1
    end
    out
  end

  def _sum_of_nums(input = @input)
    out = []
    t13 = input["a1"] || input[:a1]
    t28 = 10
    t13.each_with_index do |a1_el_14, a1_i_15|
      out_1 = []
      a1_el_14.each_with_index do |ea1_el_16, ea1_i_17|
        out_2 = []
        ea1_el_16.each_with_index do |a2_el_18, a2_i_19|
          acc_20 = 0
          t21 = a2_el_18["ea2"] || a2_el_18[:ea2]
          t21.each_with_index do |ea2_el_22, ea2_i_23|
            t29 = ea2_el_22 * t28
            acc_20 += t29
          end
          t25 = acc_20
          out_2 << t25
        end
        out_1 << out_2
      end
      out << out_1
    end
    out
  end
end
