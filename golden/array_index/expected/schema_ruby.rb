# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_045c4888923226ccaa83f46e8cbb54fb076042110dd637c5df35f0717b18886d
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :box then _box
    when :col_major then _col_major
    when :sum_ij then _sum_ij
    else raise KeyError, "Unknown declaration"
    end
  end

  def _box(input = @input)
    out = []
    t5 = input["x"] || input[:x]
    t5.each_with_index do |x_el_6, x_i_7|
      out_1 = []
      t29 = x_el_6.length
      t11 = x_i_7 * t29
      x_el_6.each_with_index do |y_el_8, y_i_9|
        t12 = t11 + y_i_9
        out_1 << t12
      end
      out << out_1
    end
    out
  end

  def _col_major(input = @input)
    out = []
    t13 = input["x"] || input[:x]
    t19 = t13.length
    t13.each_with_index do |x_el_14, x_i_15|
      out_1 = []
      x_el_14.each_with_index do |y_el_16, y_i_17|
        t20 = y_i_17 * t19
        t21 = t20 + x_i_15
        out_1 << t21
      end
      out << out_1
    end
    out
  end

  def _sum_ij(input = @input)
    out = []
    t22 = input["x"] || input[:x]
    t22.each_with_index do |x_el_23, x_i_24|
      out_1 = []
      x_el_23.each_with_index do |y_el_25, y_i_26|
        t27 = x_i_24 + y_i_26
        out_1 << t27
      end
      out << out_1
    end
    out
  end
end
