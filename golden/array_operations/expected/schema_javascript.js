// Autogenerated by Kumi Codegen for schema KUMI_0965d9ff86a01261eb534989f344ce563bab0877b42638be668fef5dda2c3db1
export class KumiCompiledModule {
  _subtotals(input) {
    let out = [];
    let t1 = input["items"];
    t1.forEach((items_el_2, items_i_3) => {
      let t4 = items_el_2.price;
      let t5 = items_el_2.quantity;
      let t6 = t4 * t5;
      out.push(t6);
    });
    return out;
  }

  _discounted_price(input) {
    let out = [];
    let t7 = input["items"];
    const t11 = 0.9;
    t7.forEach((items_el_8, items_i_9) => {
      let t10 = items_el_8.price;
      let t12 = t10 * t11;
      out.push(t12);
    });
    return out;
  }

  _is_valid_quantity(input) {
    let out = [];
    let t13 = input["items"];
    const t17 = 0;
    t13.forEach((items_el_14, items_i_15) => {
      let t16 = items_el_14.quantity;
      let t18 = t16 > t17;
      out.push(t18);
    });
    return out;
  }

  _expensive_items(input) {
    let out = [];
    let t19 = input["items"];
    const t23 = 100.0;
    t19.forEach((items_el_20, items_i_21) => {
      let t22 = items_el_20.price;
      let t24 = t22 > t23;
      out.push(t24);
    });
    return out;
  }

  _electronics(input) {
    let out = [];
    let t25 = input["items"];
    const t29 = "electronics";
    t25.forEach((items_el_26, items_i_27) => {
      let t28 = items_el_26.category;
      let t30 = t28 == t29;
      out.push(t30);
    });
    return out;
  }

}
