(Root
  inputs: [
    (InputDeclaration :items :array
      [
        (InputDeclaration :item :hash
          [
            (InputDeclaration :price :float)
            (InputDeclaration :quantity :integer)
            (InputDeclaration :category :string)
          ]
        )
      ]
    )
    (InputDeclaration :tax_rate :float)
  ]
  values: [
    (ValueDeclaration :subtotals
      (CallExpression :multiply
        (InputElementReference items.item.price)
        (InputElementReference items.item.quantity)
      )
    )
    (ValueDeclaration :discounted_price
      (CallExpression :multiply
        (InputElementReference items.item.price)
        (Literal 0.9)
      )
    )
    (ValueDeclaration :is_valid_quantity
      (CallExpression :>
        (InputElementReference items.item.quantity)
        (Literal 0)
      )
    )
  ]
  traits: [
    (TraitDeclaration :expensive_items
      (CallExpression :>
        (InputElementReference items.item.price)
        (Literal 100.0)
      )
    )
    (TraitDeclaration :electronics
      (CallExpression :==
        (InputElementReference items.item.category)
        (Literal "electronics")
      )
    )
  ]
)