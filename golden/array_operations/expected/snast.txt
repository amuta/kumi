(SNAST
  (VALUE subtotals
    (Call :core.mul
      (InputRef items.price key_chain=[price]) :: [items] -> float
      (InputRef items.quantity key_chain=[quantity]) :: [items] -> integer
    ) :: [items] -> float
  ) :: [items] -> float
  (VALUE discounted_price
    (Call :core.mul
      (InputRef items.price key_chain=[price]) :: [items] -> float
      (Const 0.9) :: [] -> float
    ) :: [items] -> float
  ) :: [items] -> float
  (TRAIT is_valid_quantity
    (Call :core.gt
      (InputRef items.quantity key_chain=[quantity]) :: [items] -> integer
      (Const 0) :: [] -> integer
    ) :: [items] -> boolean
  ) :: [items] -> boolean
  (TRAIT expensive_items
    (Call :core.gt
      (InputRef items.price key_chain=[price]) :: [items] -> float
      (Const 100.0) :: [] -> float
    ) :: [items] -> boolean
  ) :: [items] -> boolean
  (TRAIT electronics
    (Call :core.eq
      (InputRef items.category key_chain=[category]) :: [items] -> string
      (Const "electronics") :: [] -> string
    ) :: [items] -> boolean
  ) :: [items] -> boolean
)