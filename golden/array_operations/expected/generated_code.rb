# Autogenerated by Kumi Codegen
module SchemaModule
  def self.from(input_data)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def [](name)
    case name
    when :subtotals then _subtotals
    when :discounted_price then _discounted_price
    when :is_valid_quantity then _is_valid_quantity
    when :expensive_items then _expensive_items
    when :electronics then _electronics
    else raise KeyError, "Unknown declaration"
    end
  end

  def _subtotals
    out = []
    t1 = @input["items"]
    t1.each_with_index do |items_el_2, _items_i_3|
      t4 = items_el_2["price"]
      t5 = items_el_2["quantity"]
      t6 = t4 * t5
      out << t6
    end
    out
  end

  def _discounted_price
    out = []
    t7 = @input["items"]
    t7.each_with_index do |items_el_8, _items_i_9|
      t10 = items_el_8["price"]
      t12 = t10 * 0.9
      out << t12
    end
    out
  end

  def _is_valid_quantity
    out = []
    t13 = @input["items"]
    t13.each_with_index do |items_el_14, _items_i_15|
      t16 = items_el_14["quantity"]
      t18 = t16 > 0
      out << t18
    end
    out
  end

  def _expensive_items
    out = []
    t19 = @input["items"]
    t19.each_with_index do |items_el_20, _items_i_21|
      t22 = items_el_20["price"]
      t24 = t22 > 100.0
      out << t24
    end
    out
  end

  def _electronics
    out = []
    t25 = @input["items"]
    t25.each_with_index do |items_el_26, _items_i_27|
      t28 = items_el_26["category"]
      t30 = t28 == "electronics"
      out << t30
    end
    out
  end
end
