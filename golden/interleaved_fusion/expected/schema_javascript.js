// Autogenerated by Kumi Codegen for schema KUMI_99e3727d16b5f3eb933f3c0ac60f984750365a15f0aa742a356254230c015682
export class KumiCompiledModule {
  constructor(inputData = {}) {
    this.input = inputData;
  }

  static from(inputData = {}) {
    return new KumiCompiledModule(inputData);
  }

  update(inputData) {
    this.input = { ...this.input, ...inputData };
    return this;
  }

  get(name) {
    switch (name) {
      case 'total_payroll': return this._total_payroll();
      case 'payroll_tax': return this._payroll_tax();
      case 'manager_count': return this._manager_count();
      case 'department_summary': return this._department_summary();
      default: throw new Error(`Unknown declaration: ${name}`);
    }
  }

  _total_payroll(input = this.input) {
    let out = [];
    let t1 = input["departments"];
    t1?.forEach((departments_el_2, departments_i_3) => {
      let acc_4 = 0;
      let t5 = departments_el_2?.employees;
      t5?.forEach((employees_el_6, employees_i_7) => {
        let t8 = employees_el_6?.salary;
        acc_4 += t8;
      });
      out.push(acc_4);
    });
    return out;
  }

  _payroll_tax(input = this.input) {
    let out = [];
    let t10 = input["departments"];
    t10?.forEach((departments_el_11, departments_i_12) => {
      let acc40 = 0;
      let t41 = departments_el_11?.employees;
      t41?.forEach((employees_el_6, employees_i_7) => {
        let t42 = employees_el_6?.salary;
        acc40 += t42;
      });
      let t15 = acc40 * 0.15;
      out.push(t15);
    });
    return out;
  }

  _manager_count(input = this.input) {
    let out = [];
    let t16 = input["departments"];
    t16?.forEach((departments_el_17, departments_i_18) => {
      let acc_19 = 0;
      let t20 = departments_el_17?.employees;
      t20?.forEach((employees_el_21, employees_i_22) => {
        let t23 = employees_el_21?.role;
        let t25 = t23 == "manager";
        let t28 = t25 ? 1 : 0;
        acc_19 += t28;
      });
      out.push(acc_19);
    });
    return out;
  }

  _department_summary(input = this.input) {
    let out = [];
    let t30 = input["departments"];
    t30?.forEach((departments_el_31, departments_i_32) => {
      let t33 = departments_el_31?.name;
      let acc46 = 0;
      let t47 = departments_el_31?.employees;
      let acc67 = 0;
      let acc56 = 0;
      t47?.forEach((employees_el_6, employees_i_7) => {
        let t48 = employees_el_6?.salary;
        acc46 += t48;
        let t58 = employees_el_6?.role;
        let t60 = t58 == "manager";
        let t63 = t60 ? 1 : 0;
        acc56 += t63;
        acc67 += t48;
      });
      let t53 = acc67 * 0.15;
      let t37 = {
        "name": t33,
        "payroll": acc46,
        "tax": t53,
        "managers": acc56
      };
      out.push(t37);
    });
    return out;
  }

}
