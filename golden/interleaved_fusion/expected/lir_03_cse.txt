(LIR
  (Declaration total_payroll
    %t1 = load_input "departments" :: array
    loop departments id=L1 in %t1 as el=%departments_el_2, idx=%departments_i_3
      %acc_4 = decl_acc :: integer
      %t5 = load_field departments_el_2["employees"] :: any
      loop employees id=L2 in %t5 as el=%employees_el_6, idx=%employees_i_7
        %t8 = load_field employees_el_6["salary"] :: integer
        %acc_4 = acc_add agg.sum(%acc_4, %t8) :: integer
      end_loop
      %t9 = acc_load %acc_4 :: integer
      yield %t9
    end_loop
  )
  (Declaration payroll_tax
    %t10 = load_input "departments" :: array
    loop departments id=L3 in %t10 as el=%departments_el_11, idx=%departments_i_12
      %acc40 = decl_acc :: integer
      %t41 = load_field departments_el_11["employees"] :: any
      %t14 = const 0.15 :: float
      loop employees id=L7 in %t41 as el=%t42, idx=%t43
        %t44 = load_field t42["salary"] :: integer
        %acc40 = acc_add agg.sum(%acc40, %t44) :: integer
      end_loop
      %t45 = acc_load %acc40 :: integer
      %t15 = call core.mul(%t45, %t14) :: float
      yield %t15
    end_loop
  )
  (Declaration manager_count
    %t16 = load_input "departments" :: array
    loop departments id=L4 in %t16 as el=%departments_el_17, idx=%departments_i_18
      %acc_19 = decl_acc :: integer
      %t20 = load_field departments_el_17["employees"] :: any
      loop employees id=L5 in %t20 as el=%employees_el_21, idx=%employees_i_22
        %t23 = load_field employees_el_21["role"] :: string
        %t24 = const "manager" :: string
        %t25 = call core.eq(%t23, %t24) :: boolean
        %t26 = const 1 :: integer
        %t27 = const 0 :: integer
        %t28 = select %t25, %t26, %t27 :: integer
        %acc_19 = acc_add agg.sum(%acc_19, %t28) :: integer
      end_loop
      %t29 = acc_load %acc_19 :: integer
      yield %t29
    end_loop
  )
  (Declaration department_summary
    %t30 = load_input "departments" :: array
    loop departments id=L6 in %t30 as el=%departments_el_31, idx=%departments_i_32
      %t33 = load_field departments_el_31["name"] :: string
      %acc48 = decl_acc :: integer
      %t49 = load_field departments_el_31["employees"] :: any
      %acc60 = decl_acc :: integer
      %t56 = const 0.15 :: float
      %acc68 = decl_acc :: integer
      loop employees id=L8 in %t49 as el=%t50, idx=%t51
        %t52 = load_field t50["salary"] :: integer
        %acc48 = acc_add agg.sum(%acc48, %t52) :: integer
        %acc60 = acc_add agg.sum(%acc60, %t52) :: integer
        %t72 = load_field t50["role"] :: string
        %t73 = const "manager" :: string
        %t74 = call core.eq(%t72, %t73) :: boolean
        %t75 = const 1 :: integer
        %t76 = const 0 :: integer
        %t77 = select %t74, %t75, %t76 :: integer
        %acc68 = acc_add agg.sum(%acc68, %t77) :: integer
      end_loop
      %t53 = acc_load %acc48 :: integer
      %t65 = acc_load %acc60 :: integer
      %t78 = acc_load %acc68 :: integer
      %t57 = call core.mul(%t65, %t56) :: float
      %t37 = make_object{name: %t33, payroll: %t53, tax: %t57, managers: %t78} :: object
      yield %t37
    end_loop
  )
)
