; â€” Module: Declaration-Based IR

Declaration y_positive {
  params:
    in_y : View(integer, axes=[])
  operations: [
    %0 = LoadInput [:y]                               ; [], boolean
    %1 = Const(0)                                     ; [], boolean
    %2 = Map(core.gt, %0, %1)                         ; [], boolean
  ]
  result: %2
}

Declaration x_positive {
  params:
    in_x : View(integer, axes=[])
  operations: [
    %0 = LoadInput [:x]                               ; [], boolean
    %1 = Const(0)                                     ; [], boolean
    %2 = Map(core.gt, %0, %1)                         ; [], boolean
  ]
  result: %2
}

Declaration status {
  params:
    dep_y_positive : View(boolean, axes=[])  ; y_positive
    dep_x_positive : View(boolean, axes=[])  ; x_positive
  operations: [
    %0 = LoadParam :y_positive                        ; [], boolean
    %1 = LoadParam :x_positive                        ; [], boolean
    %2 = Map(core.and, %0, %1)                        ; [], boolean
    %3 = Const("both positive")                       ; [], string
    %5 = Const("x positive")                          ; [], string
    %7 = Const("y positive")                          ; [], string
    %8 = Const("neither positive")                    ; [], string
    %9 = Map(core.select, %0, %7, %8)                 ; [], string
    %10 = Map(core.select, %1, %5, %9)                ; [], string
    %11 = Map(core.select, %2, %3, %10)               ; [], string
  ]
  result: %11
}
