(SNAST
  (VALUE items_subtotal
    (Call :core.mul
      (InputRef items.price) :: [items] -> float
      (InputRef items.qty) :: [items] -> integer
    ) :: [items] -> float
  ) :: [items] -> float
  (VALUE items_discounted
    (Call :core.mul
      (InputRef items.price) :: [items] -> float
      (Call :core.sub
        (Const 1.0) :: [] -> float
        (InputRef discount) :: [] -> float
      ) :: [] -> float
    ) :: [items] -> float
  ) :: [items] -> float
  (TRAIT items_is_big
    (Call :core.gt
      (InputRef items.price) :: [items] -> float
      (Const 100.0) :: [] -> float
    ) :: [items] -> boolean
  ) :: [items] -> boolean
  (VALUE items_effective
    (Call :__select__
      (Ref items_is_big) :: [items] -> boolean
      (Call :core.mul
        (Ref items_subtotal) :: [items] -> float
        (Const 0.9) :: [] -> float
      ) :: [items] -> float
      (Ref items_subtotal) :: [items] -> float
    ) :: [items] -> float
  ) :: [items] -> float
  (VALUE total_qty
    (Call :agg.sum
      (InputRef items.qty) :: [items] -> integer
    ) :: [] -> integer
  ) :: [] -> integer
  (VALUE cart_total
    (Call :agg.sum
      (Ref items_subtotal) :: [items] -> float
    ) :: [] -> float
  ) :: [] -> float
  (VALUE cart_total_effective
    (Call :agg.sum
      (Ref items_effective) :: [items] -> float
    ) :: [] -> float
  ) :: [] -> float
)