# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_ab5095ff65347e715e158fac0f8baa864bf96c953ee33be671467d16a6202958
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :items_subtotal then _items_subtotal
    when :items_discounted then _items_discounted
    when :items_is_big then _items_is_big
    when :items_effective then _items_effective
    when :total_qty then _total_qty
    when :cart_total then _cart_total
    when :cart_total_effective then _cart_total_effective
    else raise KeyError, "Unknown declaration"
    end
  end

  def _items_subtotal(input = @input)
    out = []
    t1 = input["items"] || input[:items]
    t1.each_with_index do |items_el_2, _items_i_3|
      t4 = items_el_2["price"] || items_el_2[:price]
      t5 = items_el_2["qty"] || items_el_2[:qty]
      t6 = t4 * t5
      out << t6
    end
    out
  end

  def _items_discounted(input = @input)
    out = []
    t7 = input["items"] || input[:items]
    t12 = input["discount"] || input[:discount]
    t13 = 1.0 - t12
    t7.each_with_index do |items_el_8, _items_i_9|
      t10 = items_el_8["price"] || items_el_8[:price]
      t14 = t10 * t13
      out << t14
    end
    out
  end

  def _items_is_big(input = @input)
    out = []
    t15 = input["items"] || input[:items]
    t15.each_with_index do |items_el_16, _items_i_17|
      t18 = items_el_16["price"] || items_el_16[:price]
      t20 = t18 > 100.0
      out << t20
    end
    out
  end

  def _items_effective(input = @input)
    out = []
    t21 = input["items"] || input[:items]
    t21.each_with_index do |items_el_22, _items_i_23|
      t49 = items_el_22["price"] || items_el_22[:price]
      t54 = items_el_22["qty"] || items_el_22[:qty]
      t51 = t49 > 100.0
      t55 = t49 * t54
      t27 = t55 * 0.9
      t29 = t51 ? t27 : t55
      out << t29
    end
    out
  end

  def _total_qty(input = @input)
    acc_30 = 0.0
    t31 = input["items"] || input[:items]
    t31.each_with_index do |items_el_32, _items_i_33|
      t34 = items_el_32["qty"] || items_el_32[:qty]
      acc_30 += t34
    end
    acc_30
  end

  def _cart_total(input = @input)
    acc_36 = 0.0
    t37 = input["items"] || input[:items]
    t37.each_with_index do |items_el_38, _items_i_39|
      t57 = items_el_38["price"] || items_el_38[:price]
      t58 = items_el_38["qty"] || items_el_38[:qty]
      t59 = t57 * t58
      acc_36 += t59
    end
    acc_36
  end

  def _cart_total_effective(input = @input)
    acc_42 = 0.0
    t43 = input["items"] || input[:items]
    t43.each_with_index do |items_el_44, _items_i_45|
      t68 = items_el_44["price"] || items_el_44[:price]
      t73 = items_el_44["qty"] || items_el_44[:qty]
      t70 = t68 > 100.0
      t74 = t68 * t73
      t64 = t74 * 0.9
      t66 = t70 ? t64 : t74
      acc_42 += t66
    end
    acc_42
  end
end
