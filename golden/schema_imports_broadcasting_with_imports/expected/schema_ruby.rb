# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_c35d17b75791ed5a62bfa3700e066dd16047a18a0bc2de3d0b208a6eb39d86f2
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :item_taxes then _item_taxes
    when :total_tax then _total_tax
    else raise KeyError, "Unknown declaration"
    end
  end

  def _item_taxes(input = @input)
    out = []
    t1 = input["items"] || input[:items]
    t5 = 0.15
    t1.each_with_index do |items_el_2, items_i_3|
      t4 = items_el_2["amount"] || items_el_2[:amount]
      t6 = t4 * t5
      out << t6
    end
    out
  end

  def _total_tax(input = @input)
    acc_7 = 0.0
    t8 = input["items"] || input[:items]
    t15 = 0.15
    t8.each_with_index do |items_el_9, items_i_10|
      t14 = items_el_9["amount"] || items_el_9[:amount]
      t16 = t14 * t15
      acc_7 += t16
    end
    acc_7
  end
end
