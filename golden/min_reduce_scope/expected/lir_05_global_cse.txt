(LIR
  (Declaration dept_total
    %t1 = load_input "depts" :: array
    loop depts id=L1 in %t1 as el=%depts_el_2, idx=%depts_i_3
      %acc_4 = decl_acc :: integer
      %t5 = load_field depts_el_2["teams"] :: array
      loop teams id=L2 in %t5 as el=%teams_el_6, idx=%teams_i_7
        %t8 = load_field teams_el_6["headcount"] :: integer
        %acc_4 = acc_add agg.sum(%acc_4, %t8) :: integer
      end_loop
      %t9 = acc_load %acc_4 :: integer
      yield %t9
    end_loop
  )
  (Declaration company_total
    %acc_10 = decl_acc :: integer
    %t11 = load_input "depts" :: array
    loop depts id=L3 in %t11 as el=%depts_el_12, idx=%depts_i_13
      %acc_14 = decl_acc :: integer
      %t15 = load_field depts_el_12["teams"] :: array
      loop teams id=L4 in %t15 as el=%teams_el_16, idx=%teams_i_17
        %t18 = load_field teams_el_16["headcount"] :: integer
        %acc_14 = acc_add agg.sum(%acc_14, %t18) :: integer
      end_loop
      %t19 = acc_load %acc_14 :: integer
      %acc_10 = acc_add agg.sum(%acc_10, %t19) :: integer
    end_loop
    %t20 = acc_load %acc_10 :: integer
    yield %t20
  )
  (Declaration big_team
    %t21 = load_input "depts" :: array
    %t28 = const 10 :: integer
    loop depts id=L5 in %t21 as el=%depts_el_22, idx=%depts_i_23
      %t24 = load_field depts_el_22["teams"] :: array
      loop teams id=L6 in %t24 as el=%teams_el_25, idx=%teams_i_26
        %t27 = load_field teams_el_25["headcount"] :: integer
        %t29 = call core.gt(%t27, %t28) :: boolean
        yield %t29
      end_loop
    end_loop
  )
  (Declaration dept_total_masked
    %t30 = load_input "depts" :: array
    %t45 = const 10 :: integer
    %t39 = const 0 :: integer
    loop depts id=L7 in %t30 as el=%depts_el_31, idx=%depts_i_32
      %acc_33 = decl_acc :: integer
      %t34 = load_field depts_el_31["teams"] :: array
      loop teams id=L8 in %t34 as el=%teams_el_35, idx=%teams_i_36
        %t44 = load_field teams_el_35["headcount"] :: integer
        %t46 = call core.gt(%t44, %t45) :: boolean
        %t40 = select %t46, %t44, %t39 :: integer
        %acc_33 = acc_add agg.sum(%acc_33, %t40) :: integer
      end_loop
      %t41 = acc_load %acc_33 :: integer
      yield %t41
    end_loop
  )
)
