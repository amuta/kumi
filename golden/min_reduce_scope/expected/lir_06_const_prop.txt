(LIR
  (Declaration dept_total
    %t1 = load_input "depts" :: array
    loop depts id=L1 in %t1 as el=%depts_el_2, idx=%depts_i_3
      %acc_4 = decl_acc :: integer
      loop teams id=L2 in %depts_el_2 as el=%teams_el_5, idx=%teams_i_6
        %acc_4 = acc_add agg.sum(%acc_4, %teams_el_5) :: integer
      end_loop
      %t7 = acc_load %acc_4 :: integer
      yield %t7
    end_loop
  )
  (Declaration company_total
    %acc_8 = decl_acc :: integer
    %t9 = load_input "depts" :: array
    loop depts id=L3 in %t9 as el=%depts_el_10, idx=%depts_i_11
      %acc_12 = decl_acc :: integer
      loop teams id=L4 in %depts_el_10 as el=%teams_el_13, idx=%teams_i_14
        %acc_12 = acc_add agg.sum(%acc_12, %teams_el_13) :: integer
      end_loop
      %t15 = acc_load %acc_12 :: integer
      %acc_8 = acc_add agg.sum(%acc_8, %t15) :: integer
    end_loop
    %t16 = acc_load %acc_8 :: integer
    yield %t16
  )
  (Declaration big_team
    %t17 = load_input "depts" :: array
    %t22 = const 10 :: integer
    loop depts id=L5 in %t17 as el=%depts_el_18, idx=%depts_i_19
      loop teams id=L6 in %depts_el_18 as el=%teams_el_20, idx=%teams_i_21
        %t23 = call core.gt(%teams_el_20, %t22) :: boolean
        yield %t23
      end_loop
    end_loop
  )
  (Declaration dept_total_masked
    %t24 = load_input "depts" :: array
    %t35 = const 10 :: integer
    %t31 = const 0 :: integer
    loop depts id=L7 in %t24 as el=%depts_el_25, idx=%depts_i_26
      %acc_27 = decl_acc :: integer
      loop teams id=L8 in %depts_el_25 as el=%teams_el_28, idx=%teams_i_29
        %t36 = call core.gt(%teams_el_28, %t35) :: boolean
        %t32 = select %t36, %teams_el_28, %t31 :: integer
        %acc_27 = acc_add agg.sum(%acc_27, %t32) :: integer
      end_loop
      %t33 = acc_load %acc_27 :: integer
      yield %t33
    end_loop
  )
)
