(SNAST
  (VALUE dept_total
    (Reduce :agg.sum over [teams]
      (InputRef depts.dept.teams.team.headcount key_chain=[]) :: [depts, teams] -> integer
    ) :: [depts] -> integer
  ) :: [depts] -> integer
  (VALUE company_total
    (Reduce :agg.sum over [depts]
      (Reduce :agg.sum over [teams]
        (InputRef depts.dept.teams.team.headcount key_chain=[]) :: [depts, teams] -> integer
      ) :: [depts] -> integer
    ) :: [] -> integer
  ) :: [] -> integer
  (TRAIT big_team
    (Call :core.gt
      (InputRef depts.dept.teams.team.headcount key_chain=[]) :: [depts, teams] -> integer
      (Const 10) :: [] -> integer
    ) :: [depts, teams] -> boolean
  ) :: [depts, teams] -> boolean
  (VALUE dept_total_masked
    (Reduce :agg.sum over [teams]
      (Select
        (Ref big_team) :: [depts, teams] -> boolean
        (InputRef depts.dept.teams.team.headcount key_chain=[]) :: [depts, teams] -> integer
        (Const 0) :: [] -> integer
      ) :: [depts, teams] -> integer
    ) :: [depts] -> integer
  ) :: [depts] -> integer
)