# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_486957279ce7c3c3d8a6d605966cc567d40aab662ca4eec4e256b1eddf422cb0
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :sum_numbers then _sum_numbers
    when :matrix_sums then _matrix_sums
    when :mixed_array then _mixed_array
    when :constant then _constant
    else raise KeyError, "Unknown declaration"
    end
  end

  def _sum_numbers(input = @input)
    acc_1 = 0
    t2 = input["numbers"] || input[:numbers]
    t2.each_with_index do |numbers_el_3, _numbers_i_4|
      t5 = numbers_el_3["value"] || numbers_el_3[:value]
      acc_1 += t5
    end
    acc_1
  end

  def _matrix_sums(input = @input)
    out = []
    t7 = input["matrix"] || input[:matrix]
    t7.each_with_index do |matrix_el_8, _matrix_i_9|
      acc_10 = 0
      t11 = matrix_el_8["row"] || matrix_el_8[:row]
      t11.each_with_index do |row_el_12, _row_i_13|
        t14 = row_el_12["cell"] || row_el_12[:cell]
        acc_10 += t14
      end
      t15 = acc_10
      out << t15
    end
    out
  end

  def _mixed_array(input = @input)
    out = []
    t16 = input["matrix"] || input[:matrix]
    acc28 = 0
    t29 = input["numbers"] || input[:numbers]
    t29.each_with_index do |numbers_el_3, _numbers_i_4|
      t30 = numbers_el_3["value"] || numbers_el_3[:value]
      acc28 += t30
    end
    t31 = acc28
    t22 = input["scalar_val"] || input[:scalar_val]
    t16.each_with_index do |matrix_el_17, _matrix_i_18|
      out_1 = []
      t19 = matrix_el_17["row"] || matrix_el_17[:row]
      t19.each_with_index do |row_el_20, _row_i_21|
        t24 = row_el_20["cell"] || row_el_20[:cell]
        t25 = [t22, t31, t24]
        out_1 << t25
      end
      out << out_1
    end
    out
  end

  def _constant(input = @input)
    42
  end
end
