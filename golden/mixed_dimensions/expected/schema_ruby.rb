# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_ac4cd74ecdad66d1950894488be3a208183667a17fab2adc023eb6bedf7a27db
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :sum_numbers then _sum_numbers
    when :matrix_sums then _matrix_sums
    when :mixed_array then _mixed_array
    when :constant then _constant
    else raise KeyError, "Unknown declaration"
    end
  end

  def _sum_numbers(input = @input)
    acc_1 = 0
    t2 = input["numbers"] || input[:numbers]
    t2.each_with_index do |numbers_el_3, numbers_i_4|
      acc_1 += numbers_el_3
    end
    acc_1
  end

  def _matrix_sums(input = @input)
    out = []
    t6 = input["matrix"] || input[:matrix]
    t6.each_with_index do |matrix_el_7, matrix_i_8|
      acc_9 = 0
      matrix_el_7.each_with_index do |row_el_10, row_i_11|
        acc_9 += row_el_10
      end
      t12 = acc_9
      out << t12
    end
    out
  end

  def _mixed_array(input = @input)
    out = []
    t13 = input["matrix"] || input[:matrix]
    acc23 = 0
    t24 = input["numbers"] || input[:numbers]
    t24.each_with_index do |numbers_el_3, numbers_i_4|
      acc23 += numbers_el_3
    end
    t25 = acc23
    t18 = input["scalar_val"] || input[:scalar_val]
    t13.each_with_index do |matrix_el_14, matrix_i_15|
      out_1 = []
      matrix_el_14.each_with_index do |row_el_16, row_i_17|
        t20 = [t18, t25, row_el_16]
        out_1 << t20
      end
      out << out_1
    end
    out
  end

  def _constant(input = @input)
    42
  end
end
