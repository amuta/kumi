// Autogenerated by Kumi Codegen for schema KUMI_6586cfcddbaa53269e4fd5829e40e6ef1b33aca19cbbafb5552fd0f40ef413f6
export class KumiCompiledModule {
  constructor(inputData = {}) {
    this.input = inputData;
  }

  static from(inputData = {}) {
    return new KumiCompiledModule(inputData);
  }

  update(inputData) {
    this.input = { ...this.input, ...inputData };
    return this;
  }

  get(name) {
    switch (name) {
      case 'sum_numbers': return this._sum_numbers();
      case 'matrix_sums': return this._matrix_sums();
      case 'mixed_array': return this._mixed_array();
      case 'constant': return this._constant();
      default: throw new Error(`Unknown declaration: ${name}`);
    }
  }

  _sum_numbers(input = this.input) {
    let acc_1 = 0;
    let t2 = input["numbers"];
    t2?.forEach((numbers_el_3, numbers_i_4) => {
      let t5 = numbers_el_3?.value;
      acc_1 += t5;
    });
    return acc_1;
  }

  _matrix_sums(input = this.input) {
    let out = [];
    let t7 = input["matrix"];
    t7?.forEach((matrix_el_8, matrix_i_9) => {
      let acc_10 = 0;
      let t11 = matrix_el_8?.row;
      t11?.forEach((row_el_12, row_i_13) => {
        let t14 = row_el_12?.cell;
        acc_10 += t14;
      });
      out.push(acc_10);
    });
    return out;
  }

  _mixed_array(input = this.input) {
    let out = [];
    let t16 = input["matrix"];
    let acc28 = 0;
    let t29 = input["numbers"];
    t29?.forEach((numbers_el_3, numbers_i_4) => {
      let t30 = numbers_el_3?.value;
      acc28 += t30;
    });
    let t22 = input["scalar_val"];
    t16?.forEach((matrix_el_17, matrix_i_18) => {
      let out_1 = [];
      let t19 = matrix_el_17?.row;
      t19?.forEach((row_el_20, row_i_21) => {
        let t24 = row_el_20?.cell;
        let t25 = [t22, acc28, t24];
        out_1.push(t25);
      });
      out.push(out_1);
    });
    return out;
  }

  _constant(input = this.input) {
    return 42;
  }

}
