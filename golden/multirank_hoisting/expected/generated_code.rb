# Autogenerated by Kumi Codegen
module SchemaModule
  def self.from(input_data)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def [](name)
    case name
    when :global_offset_plus then _global_offset_plus
    when :batch_bias then _batch_bias
    when :row_scale2 then _row_scale2
    when :elem_affine then _elem_affine
    when :row_sum_affine then _row_sum_affine
    when :batch_total_affine then _batch_total_affine
    else raise KeyError, "Unknown declaration"
    end
  end

  def _global_offset_plus
    t1 = @input["global_offset"]
    t1 + 1.0
  end

  def _batch_bias
    out = []
    t4 = @input["batch"]
    t54 = @input["global_offset"]
    t56 = t54 + 1.0
    t4.each_with_index do |batch_el_5, _batch_i_6|
      t7 = batch_el_5["mean"]
      t9 = t7 + t56
      out << t9
    end
    out
  end

  def _row_scale2
    out = []
    t10 = @input["batch"]
    t10.each_with_index do |batch_el_11, _batch_i_12|
      out_1 = []
      t13 = batch_el_11["row"]
      t13.each_with_index do |row_el_14, _row_i_15|
        t16 = row_el_14["scale"]
        t18 = t16 * 2.0
        out_1 << t18
      end
      out << out_1
    end
    out
  end

  def _elem_affine
    out = []
    t19 = @input["batch"]
    t81 = @input["global_offset"]
    t83 = t81 + 1.0
    t19.each_with_index do |batch_el_20, _batch_i_21|
      out_1 = []
      t22 = batch_el_20["row"]
      t64 = batch_el_20["mean"]
      t65 = t64 + t83
      t22.each_with_index do |row_el_23, _row_i_24|
        out_2 = []
        t25 = row_el_23["col"]
        t59 = row_el_23["scale"]
        t61 = t59 * 2.0
        t25.each_with_index do |col_el_26, _col_i_27|
          t28 = col_el_26["val"]
          t30 = t28 * t61
          t32 = t30 + t65
          out_2 << t32
        end
        out_1 << out_2
      end
      out << out_1
    end
    out
  end

  def _row_sum_affine
    out = []
    t33 = @input["batch"]
    t90 = @input["global_offset"]
    t92 = t90 + 1.0
    t33.each_with_index do |batch_el_34, _batch_i_35|
      out_1 = []
      t36 = batch_el_34["row"]
      t93 = batch_el_34["mean"]
      t94 = t93 + t92
      t36.each_with_index do |row_el_37, _row_i_38|
        acc_39 = 0.0
        t40 = row_el_37["col"]
        t86 = row_el_37["scale"]
        t88 = t86 * 2.0
        t40.each_with_index do |col_el_41, _col_i_42|
          t69 = col_el_41["val"]
          t71 = t69 * t88
          t73 = t71 + t94
          acc_39 += t73
        end
        t44 = acc_39
        out_1 << t44
      end
      out << out_1
    end
    out
  end

  def _batch_total_affine
    out = []
    t45 = @input["batch"]
    t110 = @input["global_offset"]
    t112 = t110 + 1.0
    t45.each_with_index do |batch_el_46, _batch_i_47|
      acc_48 = 0.0
      t49 = batch_el_46["row"]
      t107 = batch_el_46["mean"]
      t108 = t107 + t112
      t49.each_with_index do |row_el_50, _row_i_51|
        t76 = 0.0
        t78 = row_el_50["col"]
        t101 = row_el_50["scale"]
        t103 = t101 * 2.0
        t78.each_with_index do |col_el_41, _col_i_42|
          t98 = col_el_41["val"]
          t104 = t98 * t103
          t109 = t104 + t108
          t76 += t109
        end
        t80 = t76
        acc_48 += t80
      end
      t53 = acc_48
      out << t53
    end
    out
  end
end
