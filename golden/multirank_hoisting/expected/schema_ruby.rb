# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_eb3b4d06e6af40ce1803535148d7d8e97065abfc8e4186fd66437ebb384ab54f
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :global_offset_plus then _global_offset_plus
    when :batch_bias then _batch_bias
    when :row_scale2 then _row_scale2
    when :elem_affine then _elem_affine
    when :row_sum_affine then _row_sum_affine
    when :batch_total_affine then _batch_total_affine
    else raise KeyError, "Unknown declaration"
    end
  end

  def _global_offset_plus(input = @input)
    t1 = input["global_offset"] || input[:global_offset]
    t2 = 1.0
    t1 + t2
  end

  def _batch_bias(input = @input)
    out = []
    t4 = input["batch"] || input[:batch]
    t54 = input["global_offset"] || input[:global_offset]
    t55 = 1.0
    t56 = t54 + t55
    t4.each_with_index do |batch_el_5, batch_i_6|
      t7 = batch_el_5["mean"] || batch_el_5[:mean]
      t9 = t7 + t56
      out << t9
    end
    out
  end

  def _row_scale2(input = @input)
    out = []
    t10 = input["batch"] || input[:batch]
    t17 = 2.0
    t10.each_with_index do |batch_el_11, batch_i_12|
      out_1 = []
      t13 = batch_el_11["row"] || batch_el_11[:row]
      t13.each_with_index do |row_el_14, row_i_15|
        t16 = row_el_14["scale"] || row_el_14[:scale]
        t18 = t16 * t17
        out_1 << t18
      end
      out << out_1
    end
    out
  end

  def _elem_affine(input = @input)
    out = []
    t66 = input["global_offset"] || input[:global_offset]
    t67 = 1.0
    t68 = t66 + t67
    t19 = input["batch"] || input[:batch]
    t60 = 2.0
    t19.each_with_index do |batch_el_20, batch_i_21|
      out_1 = []
      t64 = batch_el_20["mean"] || batch_el_20[:mean]
      t22 = batch_el_20["row"] || batch_el_20[:row]
      t65 = t64 + t68
      t22.each_with_index do |row_el_23, row_i_24|
        out_2 = []
        t59 = row_el_23["scale"] || row_el_23[:scale]
        t61 = t59 * t60
        t25 = row_el_23["col"] || row_el_23[:col]
        t25.each_with_index do |col_el_26, col_i_27|
          t28 = col_el_26["val"] || col_el_26[:val]
          t30 = t28 * t61
          t32 = t30 + t65
          out_2 << t32
        end
        out_1 << out_2
      end
      out << out_1
    end
    out
  end

  def _row_sum_affine(input = @input)
    out = []
    t86 = input["global_offset"] || input[:global_offset]
    t87 = 1.0
    t88 = t86 + t87
    t33 = input["batch"] || input[:batch]
    t80 = 2.0
    t33.each_with_index do |batch_el_34, batch_i_35|
      out_1 = []
      t84 = batch_el_34["mean"] || batch_el_34[:mean]
      t36 = batch_el_34["row"] || batch_el_34[:row]
      t85 = t84 + t88
      t36.each_with_index do |row_el_37, row_i_38|
        t79 = row_el_37["scale"] || row_el_37[:scale]
        t81 = t79 * t80
        acc_39 = 0.0
        t40 = row_el_37["col"] || row_el_37[:col]
        t40.each_with_index do |col_el_41, col_i_42|
          t72 = col_el_41["val"] || col_el_41[:val]
          t74 = t72 * t81
          t76 = t74 + t85
          acc_39 += t76
        end
        t44 = acc_39
        out_1 << t44
      end
      out << out_1
    end
    out
  end

  def _batch_total_affine(input = @input)
    out = []
    t115 = input["global_offset"] || input[:global_offset]
    t116 = 1.0
    t117 = t115 + t116
    t45 = input["batch"] || input[:batch]
    t109 = 2.0
    t45.each_with_index do |batch_el_46, batch_i_47|
      t113 = batch_el_46["mean"] || batch_el_46[:mean]
      acc_48 = 0.0
      t49 = batch_el_46["row"] || batch_el_46[:row]
      t114 = t113 + t117
      t49.each_with_index do |row_el_50, row_i_51|
        t108 = row_el_50["scale"] || row_el_50[:scale]
        t110 = t108 * t109
        acc92 = 0.0
        t93 = row_el_50["col"] || row_el_50[:col]
        t93.each_with_index do |t94, t95|
          t101 = t94["val"] || t94[:val]
          t103 = t101 * t110
          t105 = t103 + t114
          acc92 += t105
        end
        t97 = acc92
        acc_48 += t97
      end
      t53 = acc_48
      out << t53
    end
    out
  end
end
