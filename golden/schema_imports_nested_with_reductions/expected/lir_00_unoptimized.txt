(LIR
  (Declaration order_subtotals
    %t1 = load_input "orders" :: array
    loop orders id=L1 in %t1 as el=%orders_el_2, idx=%orders_i_3
      %t4 = load_field orders_el_2["items"] :: array
      %t5 = importschemacall %t4 fn_name="subtotal" source_module="GoldenSchemas::Subtotal" input_mapping_keys=["items"] :: integer
      yield %t5
    end_loop
  )
  (Declaration total_before_tax
    %acc_6 = decl_acc :: integer
    %t7 = load_input "orders" :: array
    loop orders id=L2 in %t7 as el=%orders_el_8, idx=%orders_i_9
      %t10 = load_decl order_subtotals axes=[orders] :: integer
      %acc_6 = acc_add agg.sum(%acc_6, %t10) :: integer
    end_loop
    %t11 = acc_load %acc_6 :: integer
    yield %t11
  )
  (Declaration tax_for_all
    %t12 = load_decl total_before_tax :: integer
    %t13 = importschemacall %t12 fn_name="tax" source_module="GoldenSchemas::Tax" input_mapping_keys=["amount"] :: float
    yield %t13
  )
  (Declaration grand_total
    %t14 = load_decl total_before_tax :: integer
    %t15 = load_decl tax_for_all :: float
    %t16 = call core.add(%t14, %t15) :: float
    yield %t16
  )
)
