# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_7641ca6a6871b5a7e6ee332deae79610a0da32cb6807efc9744922037dc00870
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :users then _users
    when :is_john then _is_john
    when :john_user then _john_user
    else raise KeyError, "Unknown declaration"
    end
  end

  def _users(input = @input)
    out = []
    t1 = input["users"] || input[:users]
    t1.each_with_index do |users_el_2, _users_i_3|
      t4 = users_el_2["name"] || users_el_2[:name]
      t5 = users_el_2["state"] || users_el_2[:state]
      t6 = {
        "name" => t4,
        "state" => t5
      }
      out << t6
    end
    out
  end

  def _is_john(input = @input)
    out = []
    t7 = input["users"] || input[:users]
    t7.each_with_index do |users_el_8, _users_i_9|
      t10 = users_el_8["name"] || users_el_8[:name]
      t12 = t10 == "John"
      out << t12
    end
    out
  end

  def _john_user(input = @input)
    out = []
    t13 = input["users"] || input[:users]
    t13.each_with_index do |users_el_14, _users_i_15|
      t21 = users_el_14["name"] || users_el_14[:name]
      t26 = users_el_14["state"] || users_el_14[:state]
      t23 = t21 == "John"
      t27 = {
        "name" => t21,
        "state" => t26
      }
      t19 = t23 ? t27 : "NOT_JOHN"
      out << t19
    end
    out
  end
end
