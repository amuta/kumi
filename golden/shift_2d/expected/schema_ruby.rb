# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_6fdf019c4927ac72bbf49d09261f8162d74babc6d6f40926c1976974a4888190
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :shift_cols_right_zero then _shift_cols_right_zero
    when :shift_cols_right_clamp then _shift_cols_right_clamp
    when :shift_cols_right_wrap then _shift_cols_right_wrap
    when :shift_cols_left_zero then _shift_cols_left_zero
    when :shift_cols_left_clamp then _shift_cols_left_clamp
    when :shift_cols_left_wrap then _shift_cols_left_wrap
    when :shift_rows_down_zero then _shift_rows_down_zero
    when :shift_rows_down_clamp then _shift_rows_down_clamp
    when :shift_rows_down_wrap then _shift_rows_down_wrap
    when :shift_rows_up_zero then _shift_rows_up_zero
    when :shift_rows_up_clamp then _shift_rows_up_clamp
    when :shift_rows_up_wrap then _shift_rows_up_wrap
    else raise KeyError, "Unknown declaration"
    end
  end

  def _shift_cols_right_zero(input = @input)
    out = []
    t1 = input["rows"] || input[:rows]
    t8 = 1
    t10 = 0
    t1.each_with_index do |rows_el_2, rows_i_3|
      out_1 = []
      t4 = rows_el_2["col"] || rows_el_2[:col]
      t7 = t4.length
      t15 = t7 - t8
      t4.each_with_index do |col_el_5, col_i_6|
        t9 = col_i_6 - t8
        t11 = t9 >= t10
        t12 = t9 < t7
        t13 = t11 && t12
        t17 = [[ t9, t10 ].max, t15 ].min
        t18 = t4[t17]
        t20 = t13 ? t18 : t10
        out_1 << t20
      end
      out << out_1
    end
    out
  end

  def _shift_cols_right_clamp(input = @input)
    out = []
    t21 = input["rows"] || input[:rows]
    t28 = 1
    t32 = 0
    t21.each_with_index do |rows_el_22, rows_i_23|
      out_1 = []
      t24 = rows_el_22["col"] || rows_el_22[:col]
      t27 = t24.length
      t31 = t27 - t28
      t24.each_with_index do |col_el_25, col_i_26|
        t29 = col_i_26 - t28
        t33 = [[ t29, t32 ].max, t31 ].min
        t34 = t24[t33]
        out_1 << t34
      end
      out << out_1
    end
    out
  end

  def _shift_cols_right_wrap(input = @input)
    out = []
    t35 = input["rows"] || input[:rows]
    t42 = 1
    t35.each_with_index do |rows_el_36, rows_i_37|
      out_1 = []
      t38 = rows_el_36["col"] || rows_el_36[:col]
      t41 = t38.length
      t38.each_with_index do |col_el_39, col_i_40|
        t43 = col_i_40 - t42
        t44 = t43 % t41
        t45 = t44 + t41
        t46 = t45 % t41
        t47 = t38[t46]
        out_1 << t47
      end
      out << out_1
    end
    out
  end

  def _shift_cols_left_zero(input = @input)
    out = []
    t48 = input["rows"] || input[:rows]
    t55 = -1
    t57 = 0
    t61 = 1
    t48.each_with_index do |rows_el_49, rows_i_50|
      out_1 = []
      t51 = rows_el_49["col"] || rows_el_49[:col]
      t54 = t51.length
      t62 = t54 - t61
      t51.each_with_index do |col_el_52, col_i_53|
        t56 = col_i_53 - t55
        t58 = t56 >= t57
        t59 = t56 < t54
        t60 = t58 && t59
        t64 = [[ t56, t57 ].max, t62 ].min
        t65 = t51[t64]
        t67 = t60 ? t65 : t57
        out_1 << t67
      end
      out << out_1
    end
    out
  end

  def _shift_cols_left_clamp(input = @input)
    out = []
    t68 = input["rows"] || input[:rows]
    t75 = -1
    t77 = 1
    t79 = 0
    t68.each_with_index do |rows_el_69, rows_i_70|
      out_1 = []
      t71 = rows_el_69["col"] || rows_el_69[:col]
      t74 = t71.length
      t78 = t74 - t77
      t71.each_with_index do |col_el_72, col_i_73|
        t76 = col_i_73 - t75
        t80 = [[ t76, t79 ].max, t78 ].min
        t81 = t71[t80]
        out_1 << t81
      end
      out << out_1
    end
    out
  end

  def _shift_cols_left_wrap(input = @input)
    out = []
    t82 = input["rows"] || input[:rows]
    t89 = -1
    t82.each_with_index do |rows_el_83, rows_i_84|
      out_1 = []
      t85 = rows_el_83["col"] || rows_el_83[:col]
      t88 = t85.length
      t85.each_with_index do |col_el_86, col_i_87|
        t90 = col_i_87 - t89
        t91 = t90 % t88
        t92 = t91 + t88
        t93 = t92 % t88
        t94 = t85[t93]
        out_1 << t94
      end
      out << out_1
    end
    out
  end

  def _shift_rows_down_zero(input = @input)
    out = []
    t95 = input["rows"] || input[:rows]
    t101 = t95.length
    t102 = 1
    t104 = 0
    t109 = t101 - t102
    t95.each_with_index do |rows_el_96, rows_i_97|
      out_1 = []
      t98 = rows_el_96["col"] || rows_el_96[:col]
      t103 = rows_i_97 - t102
      t105 = t103 >= t104
      t106 = t103 < t101
      t111 = [[ t103, t104 ].max, t109 ].min
      t107 = t105 && t106
      t112 = t95[t111]
      t113 = t112["col"] || t112[:col]
      t114 = t113.length
      t116 = t114 - t102
      t98.each_with_index do |col_el_99, col_i_100|
        t118 = [[ col_i_100, t104 ].max, t116 ].min
        t119 = t113[t118]
        t121 = t107 ? t119 : t104
        out_1 << t121
      end
      out << out_1
    end
    out
  end

  def _shift_rows_down_clamp(input = @input)
    out = []
    t122 = input["rows"] || input[:rows]
    t128 = t122.length
    t129 = 1
    t133 = 0
    t132 = t128 - t129
    t122.each_with_index do |rows_el_123, rows_i_124|
      out_1 = []
      t125 = rows_el_123["col"] || rows_el_123[:col]
      t130 = rows_i_124 - t129
      t134 = [[ t130, t133 ].max, t132 ].min
      t135 = t122[t134]
      t136 = t135["col"] || t135[:col]
      t137 = t136.length
      t139 = t137 - t129
      t125.each_with_index do |col_el_126, col_i_127|
        t141 = [[ col_i_127, t133 ].max, t139 ].min
        t142 = t136[t141]
        out_1 << t142
      end
      out << out_1
    end
    out
  end

  def _shift_rows_down_wrap(input = @input)
    out = []
    t143 = input["rows"] || input[:rows]
    t149 = t143.length
    t150 = 1
    t160 = 0
    t143.each_with_index do |rows_el_144, rows_i_145|
      out_1 = []
      t146 = rows_el_144["col"] || rows_el_144[:col]
      t151 = rows_i_145 - t150
      t152 = t151 % t149
      t153 = t152 + t149
      t154 = t153 % t149
      t155 = t143[t154]
      t156 = t155["col"] || t155[:col]
      t157 = t156.length
      t159 = t157 - t150
      t146.each_with_index do |col_el_147, col_i_148|
        t161 = [[ col_i_148, t160 ].max, t159 ].min
        t162 = t156[t161]
        out_1 << t162
      end
      out << out_1
    end
    out
  end

  def _shift_rows_up_zero(input = @input)
    out = []
    t163 = input["rows"] || input[:rows]
    t169 = t163.length
    t170 = -1
    t172 = 0
    t176 = 1
    t177 = t169 - t176
    t163.each_with_index do |rows_el_164, rows_i_165|
      out_1 = []
      t166 = rows_el_164["col"] || rows_el_164[:col]
      t171 = rows_i_165 - t170
      t173 = t171 >= t172
      t174 = t171 < t169
      t179 = [[ t171, t172 ].max, t177 ].min
      t175 = t173 && t174
      t180 = t163[t179]
      t181 = t180["col"] || t180[:col]
      t182 = t181.length
      t184 = t182 - t176
      t166.each_with_index do |col_el_167, col_i_168|
        t186 = [[ col_i_168, t172 ].max, t184 ].min
        t187 = t181[t186]
        t189 = t175 ? t187 : t172
        out_1 << t189
      end
      out << out_1
    end
    out
  end

  def _shift_rows_up_clamp(input = @input)
    out = []
    t190 = input["rows"] || input[:rows]
    t196 = t190.length
    t197 = -1
    t199 = 1
    t201 = 0
    t200 = t196 - t199
    t190.each_with_index do |rows_el_191, rows_i_192|
      out_1 = []
      t193 = rows_el_191["col"] || rows_el_191[:col]
      t198 = rows_i_192 - t197
      t202 = [[ t198, t201 ].max, t200 ].min
      t203 = t190[t202]
      t204 = t203["col"] || t203[:col]
      t205 = t204.length
      t207 = t205 - t199
      t193.each_with_index do |col_el_194, col_i_195|
        t209 = [[ col_i_195, t201 ].max, t207 ].min
        t210 = t204[t209]
        out_1 << t210
      end
      out << out_1
    end
    out
  end

  def _shift_rows_up_wrap(input = @input)
    out = []
    t211 = input["rows"] || input[:rows]
    t217 = t211.length
    t218 = -1
    t226 = 1
    t228 = 0
    t211.each_with_index do |rows_el_212, rows_i_213|
      out_1 = []
      t214 = rows_el_212["col"] || rows_el_212[:col]
      t219 = rows_i_213 - t218
      t220 = t219 % t217
      t221 = t220 + t217
      t222 = t221 % t217
      t223 = t211[t222]
      t224 = t223["col"] || t223[:col]
      t225 = t224.length
      t227 = t225 - t226
      t214.each_with_index do |col_el_215, col_i_216|
        t229 = [[ col_i_216, t228 ].max, t227 ].min
        t230 = t224[t229]
        out_1 << t230
      end
      out << out_1
    end
    out
  end
end
