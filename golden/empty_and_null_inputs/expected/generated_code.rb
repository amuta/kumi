# Autogenerated by Kumi Codegen
module SchemaModule
  def self.from(input_data)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def [](name)
    case name
    when :regional_sales then _regional_sales
    when :total_sales then _total_sales
    when :adjusted_total then _adjusted_total
    else raise KeyError, "Unknown declaration"
    end
  end

  def _regional_sales
    out = []
    t1 = @input["regions"]
    t1.each_with_index do |regions_el_2, _regions_i_3|
      acc_4 = 0
      t5 = regions_el_2["sales"]
      t5.each_with_index do |sales_el_6, _sales_i_7|
        t8 = sales_el_6["amount"]
        acc_4 += t8
      end
      t9 = acc_4
      out << t9
    end
    out
  end

  def _total_sales
    acc_10 = 0
    t11 = @input["regions"]
    t11.each_with_index do |regions_el_12, _regions_i_13|
      t20 = 0
      t22 = regions_el_12["sales"]
      t22.each_with_index do |sales_el_6, _sales_i_7|
        t23 = sales_el_6["amount"]
        t20 += t23
      end
      t24 = t20
      acc_10 += t24
    end
    t15 = acc_10
    t15
  end

  def _adjusted_total
    t25 = 0
    t27 = @input["regions"]
    t27.each_with_index do |regions_el_12, _regions_i_13|
      t31 = 0
      t33 = regions_el_12["sales"]
      t33.each_with_index do |sales_el_6, _sales_i_7|
        t34 = sales_el_6["amount"]
        t31 += t34
      end
      t35 = t31
      t25 += t35
    end
    t29 = t25
    t17 = @input["adjustment"]
    t18 = t29 + t17
    t18
  end
end
