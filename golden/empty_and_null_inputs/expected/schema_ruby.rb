# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_5425879ccdad4b999f23a01a362327de91586cab5ea828f0f2c4069728dd352a
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :regional_sales then _regional_sales
    when :total_sales then _total_sales
    when :adjusted_total then _adjusted_total
    else raise KeyError, "Unknown declaration"
    end
  end

  def _regional_sales(input = @input)
    out = []
    t1 = input["regions"] || input[:regions]
    t1.each_with_index do |regions_el_2, regions_i_3|
      acc_4 = 0
      t5 = regions_el_2["sales"] || regions_el_2[:sales]
      t5.each_with_index do |sales_el_6, sales_i_7|
        t8 = sales_el_6["amount"] || sales_el_6[:amount]
        acc_4 += t8
      end
      t9 = acc_4
      out << t9
    end
    out
  end

  def _total_sales(input = @input)
    acc_10 = 0
    t11 = input["regions"] || input[:regions]
    t11.each_with_index do |regions_el_12, regions_i_13|
      acc21 = 0
      t22 = regions_el_12["sales"] || regions_el_12[:sales]
      t22.each_with_index do |sales_el_6, sales_i_7|
        t23 = sales_el_6["amount"] || sales_el_6[:amount]
        acc21 += t23
      end
      t24 = acc21
      acc_10 += t24
    end
    acc_10
  end

  def _adjusted_total(input = @input)
    acc26 = 0
    t27 = input["regions"] || input[:regions]
    t27.each_with_index do |regions_el_12, regions_i_13|
      acc32 = 0
      t33 = regions_el_12["sales"] || regions_el_12[:sales]
      t33.each_with_index do |sales_el_6, sales_i_7|
        t34 = sales_el_6["amount"] || sales_el_6[:amount]
        acc32 += t34
      end
      t35 = acc32
      acc26 += t35
    end
    t29 = acc26
    t17 = input["adjustment"] || input[:adjustment]
    t29 + t17
  end
end
