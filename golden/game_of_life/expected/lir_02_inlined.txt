(LIR
  (Declaration a
    %t1 = load_input "rows" :: array
    loop rows id=L1 in %t1 as el=%rows_el_2, idx=%rows_i_3
      loop col id=L2 in %rows_el_2 as el=%col_el_4, idx=%col_i_5
        yield %col_el_4
      end_loop
    end_loop
  )
  (Declaration n
    %t6 = load_input "rows" :: array
    loop rows id=L3 in %t6 as el=%rows_el_7, idx=%rows_i_8
      loop col id=L4 in %rows_el_7 as el=%col_el_9, idx=%col_i_10
        %t11 = length %t6 :: integer
        %t12 = const -1 :: integer
        %t13 = call core.sub(%rows_i_8, %t12) :: integer
        %t14 = const 0 :: integer
        %t15 = call core.gte(%t13, %t14) :: boolean
        %t16 = call core.lt(%t13, %t11) :: boolean
        %t17 = call core.and(%t15, %t16) :: boolean
        %t18 = const 1 :: integer
        %t19 = call core.sub(%t11, %t18) :: integer
        %t20 = const 0 :: integer
        %t21 = call core.clamp(%t13, %t20, %t19) :: integer
        %t22 = gather %t6, %t21 :: any
        %t23 = length %t22 :: integer
        %t24 = call core.mod(%col_i_10, %t23) :: integer
        %t25 = call core.add(%t24, %t23) :: integer
        %t26 = call core.mod(%t25, %t23) :: integer
        %t27 = gather %t22, %t26 :: integer
        %t28 = const 0 :: integer
        %t29 = select %t17, %t27, %t28 :: integer
        yield %t29
      end_loop
    end_loop
  )
  (Declaration s
    %t30 = load_input "rows" :: array
    loop rows id=L5 in %t30 as el=%rows_el_31, idx=%rows_i_32
      loop col id=L6 in %rows_el_31 as el=%col_el_33, idx=%col_i_34
        %t35 = length %t30 :: integer
        %t36 = const 1 :: integer
        %t37 = call core.sub(%rows_i_32, %t36) :: integer
        %t38 = const 0 :: integer
        %t39 = call core.gte(%t37, %t38) :: boolean
        %t40 = call core.lt(%t37, %t35) :: boolean
        %t41 = call core.and(%t39, %t40) :: boolean
        %t42 = const 1 :: integer
        %t43 = call core.sub(%t35, %t42) :: integer
        %t44 = const 0 :: integer
        %t45 = call core.clamp(%t37, %t44, %t43) :: integer
        %t46 = gather %t30, %t45 :: any
        %t47 = length %t46 :: integer
        %t48 = call core.mod(%col_i_34, %t47) :: integer
        %t49 = call core.add(%t48, %t47) :: integer
        %t50 = call core.mod(%t49, %t47) :: integer
        %t51 = gather %t46, %t50 :: integer
        %t52 = const 0 :: integer
        %t53 = select %t41, %t51, %t52 :: integer
        yield %t53
      end_loop
    end_loop
  )
  (Declaration w
    %t54 = load_input "rows" :: array
    loop rows id=L7 in %t54 as el=%rows_el_55, idx=%rows_i_56
      loop col id=L8 in %rows_el_55 as el=%col_el_57, idx=%col_i_58
        %t59 = length %t54 :: integer
        %t60 = call core.mod(%rows_i_56, %t59) :: integer
        %t61 = call core.add(%t60, %t59) :: integer
        %t62 = call core.mod(%t61, %t59) :: integer
        %t63 = gather %t54, %t62 :: any
        %t64 = length %t63 :: integer
        %t65 = const -1 :: integer
        %t66 = call core.sub(%col_i_58, %t65) :: integer
        %t67 = const 0 :: integer
        %t68 = call core.gte(%t66, %t67) :: boolean
        %t69 = call core.lt(%t66, %t64) :: boolean
        %t70 = call core.and(%t68, %t69) :: boolean
        %t71 = const 1 :: integer
        %t72 = call core.sub(%t64, %t71) :: integer
        %t73 = const 0 :: integer
        %t74 = call core.clamp(%t66, %t73, %t72) :: integer
        %t75 = gather %t63, %t74 :: integer
        %t76 = const 0 :: integer
        %t77 = select %t70, %t75, %t76 :: integer
        yield %t77
      end_loop
    end_loop
  )
  (Declaration e
    %t78 = load_input "rows" :: array
    loop rows id=L9 in %t78 as el=%rows_el_79, idx=%rows_i_80
      loop col id=L10 in %rows_el_79 as el=%col_el_81, idx=%col_i_82
        %t83 = length %t78 :: integer
        %t84 = call core.mod(%rows_i_80, %t83) :: integer
        %t85 = call core.add(%t84, %t83) :: integer
        %t86 = call core.mod(%t85, %t83) :: integer
        %t87 = gather %t78, %t86 :: any
        %t88 = length %t87 :: integer
        %t89 = const 1 :: integer
        %t90 = call core.sub(%col_i_82, %t89) :: integer
        %t91 = const 0 :: integer
        %t92 = call core.gte(%t90, %t91) :: boolean
        %t93 = call core.lt(%t90, %t88) :: boolean
        %t94 = call core.and(%t92, %t93) :: boolean
        %t95 = const 1 :: integer
        %t96 = call core.sub(%t88, %t95) :: integer
        %t97 = const 0 :: integer
        %t98 = call core.clamp(%t90, %t97, %t96) :: integer
        %t99 = gather %t87, %t98 :: integer
        %t100 = const 0 :: integer
        %t101 = select %t94, %t99, %t100 :: integer
        yield %t101
      end_loop
    end_loop
  )
  (Declaration nw
    %t102 = load_input "rows" :: array
    loop rows id=L11 in %t102 as el=%rows_el_103, idx=%rows_i_104
      loop col id=L12 in %rows_el_103 as el=%col_el_105, idx=%col_i_106
        %t107 = length %t102 :: integer
        %t108 = const -1 :: integer
        %t109 = call core.sub(%rows_i_104, %t108) :: integer
        %t110 = const 0 :: integer
        %t111 = call core.gte(%t109, %t110) :: boolean
        %t112 = call core.lt(%t109, %t107) :: boolean
        %t113 = call core.and(%t111, %t112) :: boolean
        %t114 = const 1 :: integer
        %t115 = call core.sub(%t107, %t114) :: integer
        %t116 = const 0 :: integer
        %t117 = call core.clamp(%t109, %t116, %t115) :: integer
        %t118 = gather %t102, %t117 :: any
        %t119 = length %t118 :: integer
        %t120 = const -1 :: integer
        %t121 = call core.sub(%col_i_106, %t120) :: integer
        %t122 = const 0 :: integer
        %t123 = call core.gte(%t121, %t122) :: boolean
        %t124 = call core.lt(%t121, %t119) :: boolean
        %t125 = call core.and(%t123, %t124) :: boolean
        %t126 = call core.and(%t113, %t125) :: boolean
        %t127 = const 1 :: integer
        %t128 = call core.sub(%t119, %t127) :: integer
        %t129 = const 0 :: integer
        %t130 = call core.clamp(%t121, %t129, %t128) :: integer
        %t131 = gather %t118, %t130 :: integer
        %t132 = const 0 :: integer
        %t133 = select %t126, %t131, %t132 :: integer
        yield %t133
      end_loop
    end_loop
  )
  (Declaration ne
    %t134 = load_input "rows" :: array
    loop rows id=L13 in %t134 as el=%rows_el_135, idx=%rows_i_136
      loop col id=L14 in %rows_el_135 as el=%col_el_137, idx=%col_i_138
        %t139 = length %t134 :: integer
        %t140 = const -1 :: integer
        %t141 = call core.sub(%rows_i_136, %t140) :: integer
        %t142 = const 0 :: integer
        %t143 = call core.gte(%t141, %t142) :: boolean
        %t144 = call core.lt(%t141, %t139) :: boolean
        %t145 = call core.and(%t143, %t144) :: boolean
        %t146 = const 1 :: integer
        %t147 = call core.sub(%t139, %t146) :: integer
        %t148 = const 0 :: integer
        %t149 = call core.clamp(%t141, %t148, %t147) :: integer
        %t150 = gather %t134, %t149 :: any
        %t151 = length %t150 :: integer
        %t152 = const 1 :: integer
        %t153 = call core.sub(%col_i_138, %t152) :: integer
        %t154 = const 0 :: integer
        %t155 = call core.gte(%t153, %t154) :: boolean
        %t156 = call core.lt(%t153, %t151) :: boolean
        %t157 = call core.and(%t155, %t156) :: boolean
        %t158 = call core.and(%t145, %t157) :: boolean
        %t159 = const 1 :: integer
        %t160 = call core.sub(%t151, %t159) :: integer
        %t161 = const 0 :: integer
        %t162 = call core.clamp(%t153, %t161, %t160) :: integer
        %t163 = gather %t150, %t162 :: integer
        %t164 = const 0 :: integer
        %t165 = select %t158, %t163, %t164 :: integer
        yield %t165
      end_loop
    end_loop
  )
  (Declaration sw
    %t166 = load_input "rows" :: array
    loop rows id=L15 in %t166 as el=%rows_el_167, idx=%rows_i_168
      loop col id=L16 in %rows_el_167 as el=%col_el_169, idx=%col_i_170
        %t171 = length %t166 :: integer
        %t172 = const 1 :: integer
        %t173 = call core.sub(%rows_i_168, %t172) :: integer
        %t174 = const 0 :: integer
        %t175 = call core.gte(%t173, %t174) :: boolean
        %t176 = call core.lt(%t173, %t171) :: boolean
        %t177 = call core.and(%t175, %t176) :: boolean
        %t178 = const 1 :: integer
        %t179 = call core.sub(%t171, %t178) :: integer
        %t180 = const 0 :: integer
        %t181 = call core.clamp(%t173, %t180, %t179) :: integer
        %t182 = gather %t166, %t181 :: any
        %t183 = length %t182 :: integer
        %t184 = const -1 :: integer
        %t185 = call core.sub(%col_i_170, %t184) :: integer
        %t186 = const 0 :: integer
        %t187 = call core.gte(%t185, %t186) :: boolean
        %t188 = call core.lt(%t185, %t183) :: boolean
        %t189 = call core.and(%t187, %t188) :: boolean
        %t190 = call core.and(%t177, %t189) :: boolean
        %t191 = const 1 :: integer
        %t192 = call core.sub(%t183, %t191) :: integer
        %t193 = const 0 :: integer
        %t194 = call core.clamp(%t185, %t193, %t192) :: integer
        %t195 = gather %t182, %t194 :: integer
        %t196 = const 0 :: integer
        %t197 = select %t190, %t195, %t196 :: integer
        yield %t197
      end_loop
    end_loop
  )
  (Declaration se
    %t198 = load_input "rows" :: array
    loop rows id=L17 in %t198 as el=%rows_el_199, idx=%rows_i_200
      loop col id=L18 in %rows_el_199 as el=%col_el_201, idx=%col_i_202
        %t203 = length %t198 :: integer
        %t204 = const 1 :: integer
        %t205 = call core.sub(%rows_i_200, %t204) :: integer
        %t206 = const 0 :: integer
        %t207 = call core.gte(%t205, %t206) :: boolean
        %t208 = call core.lt(%t205, %t203) :: boolean
        %t209 = call core.and(%t207, %t208) :: boolean
        %t210 = const 1 :: integer
        %t211 = call core.sub(%t203, %t210) :: integer
        %t212 = const 0 :: integer
        %t213 = call core.clamp(%t205, %t212, %t211) :: integer
        %t214 = gather %t198, %t213 :: any
        %t215 = length %t214 :: integer
        %t216 = const 1 :: integer
        %t217 = call core.sub(%col_i_202, %t216) :: integer
        %t218 = const 0 :: integer
        %t219 = call core.gte(%t217, %t218) :: boolean
        %t220 = call core.lt(%t217, %t215) :: boolean
        %t221 = call core.and(%t219, %t220) :: boolean
        %t222 = call core.and(%t209, %t221) :: boolean
        %t223 = const 1 :: integer
        %t224 = call core.sub(%t215, %t223) :: integer
        %t225 = const 0 :: integer
        %t226 = call core.clamp(%t217, %t225, %t224) :: integer
        %t227 = gather %t214, %t226 :: integer
        %t228 = const 0 :: integer
        %t229 = select %t222, %t227, %t228 :: integer
        yield %t229
      end_loop
    end_loop
  )
  (Declaration neighbors
    %t230 = load_input "rows" :: array
    loop rows id=L19 in %t230 as el=%rows_el_231, idx=%rows_i_232
      loop col id=L20 in %rows_el_231 as el=%col_el_233, idx=%col_i_234
        %t294 = load_input "rows" :: array
        %t295 = length %t294 :: integer
        %t296 = const -1 :: integer
        %t297 = call core.sub(%rows_i_232, %t296) :: integer
        %t298 = const 0 :: integer
        %t299 = call core.gte(%t297, %t298) :: boolean
        %t300 = call core.lt(%t297, %t295) :: boolean
        %t301 = call core.and(%t299, %t300) :: boolean
        %t302 = const 1 :: integer
        %t303 = call core.sub(%t295, %t302) :: integer
        %t304 = const 0 :: integer
        %t305 = call core.clamp(%t297, %t304, %t303) :: integer
        %t306 = gather %t294, %t305 :: any
        %t307 = length %t306 :: integer
        %t308 = call core.mod(%col_i_234, %t307) :: integer
        %t309 = call core.add(%t308, %t307) :: integer
        %t310 = call core.mod(%t309, %t307) :: integer
        %t311 = gather %t306, %t310 :: integer
        %t312 = const 0 :: integer
        %t313 = select %t301, %t311, %t312 :: integer
        %t314 = load_input "rows" :: array
        %t315 = length %t314 :: integer
        %t316 = const 1 :: integer
        %t317 = call core.sub(%rows_i_232, %t316) :: integer
        %t318 = const 0 :: integer
        %t319 = call core.gte(%t317, %t318) :: boolean
        %t320 = call core.lt(%t317, %t315) :: boolean
        %t321 = call core.and(%t319, %t320) :: boolean
        %t322 = const 1 :: integer
        %t323 = call core.sub(%t315, %t322) :: integer
        %t324 = const 0 :: integer
        %t325 = call core.clamp(%t317, %t324, %t323) :: integer
        %t326 = gather %t314, %t325 :: any
        %t327 = length %t326 :: integer
        %t328 = call core.mod(%col_i_234, %t327) :: integer
        %t329 = call core.add(%t328, %t327) :: integer
        %t330 = call core.mod(%t329, %t327) :: integer
        %t331 = gather %t326, %t330 :: integer
        %t332 = const 0 :: integer
        %t333 = select %t321, %t331, %t332 :: integer
        %t334 = load_input "rows" :: array
        %t335 = length %t334 :: integer
        %t336 = call core.mod(%rows_i_232, %t335) :: integer
        %t337 = call core.add(%t336, %t335) :: integer
        %t338 = call core.mod(%t337, %t335) :: integer
        %t339 = gather %t334, %t338 :: any
        %t340 = length %t339 :: integer
        %t341 = const -1 :: integer
        %t342 = call core.sub(%col_i_234, %t341) :: integer
        %t343 = const 0 :: integer
        %t344 = call core.gte(%t342, %t343) :: boolean
        %t345 = call core.lt(%t342, %t340) :: boolean
        %t346 = call core.and(%t344, %t345) :: boolean
        %t347 = const 1 :: integer
        %t348 = call core.sub(%t340, %t347) :: integer
        %t349 = const 0 :: integer
        %t350 = call core.clamp(%t342, %t349, %t348) :: integer
        %t351 = gather %t339, %t350 :: integer
        %t352 = const 0 :: integer
        %t353 = select %t346, %t351, %t352 :: integer
        %t354 = load_input "rows" :: array
        %t355 = length %t354 :: integer
        %t356 = call core.mod(%rows_i_232, %t355) :: integer
        %t357 = call core.add(%t356, %t355) :: integer
        %t358 = call core.mod(%t357, %t355) :: integer
        %t359 = gather %t354, %t358 :: any
        %t360 = length %t359 :: integer
        %t361 = const 1 :: integer
        %t362 = call core.sub(%col_i_234, %t361) :: integer
        %t363 = const 0 :: integer
        %t364 = call core.gte(%t362, %t363) :: boolean
        %t365 = call core.lt(%t362, %t360) :: boolean
        %t366 = call core.and(%t364, %t365) :: boolean
        %t367 = const 1 :: integer
        %t368 = call core.sub(%t360, %t367) :: integer
        %t369 = const 0 :: integer
        %t370 = call core.clamp(%t362, %t369, %t368) :: integer
        %t371 = gather %t359, %t370 :: integer
        %t372 = const 0 :: integer
        %t373 = select %t366, %t371, %t372 :: integer
        %t374 = load_input "rows" :: array
        %t375 = length %t374 :: integer
        %t376 = const -1 :: integer
        %t377 = call core.sub(%rows_i_232, %t376) :: integer
        %t378 = const 0 :: integer
        %t379 = call core.gte(%t377, %t378) :: boolean
        %t380 = call core.lt(%t377, %t375) :: boolean
        %t381 = call core.and(%t379, %t380) :: boolean
        %t382 = const 1 :: integer
        %t383 = call core.sub(%t375, %t382) :: integer
        %t384 = const 0 :: integer
        %t385 = call core.clamp(%t377, %t384, %t383) :: integer
        %t386 = gather %t374, %t385 :: any
        %t387 = length %t386 :: integer
        %t388 = const -1 :: integer
        %t389 = call core.sub(%col_i_234, %t388) :: integer
        %t390 = const 0 :: integer
        %t391 = call core.gte(%t389, %t390) :: boolean
        %t392 = call core.lt(%t389, %t387) :: boolean
        %t393 = call core.and(%t391, %t392) :: boolean
        %t394 = call core.and(%t381, %t393) :: boolean
        %t395 = const 1 :: integer
        %t396 = call core.sub(%t387, %t395) :: integer
        %t397 = const 0 :: integer
        %t398 = call core.clamp(%t389, %t397, %t396) :: integer
        %t399 = gather %t386, %t398 :: integer
        %t400 = const 0 :: integer
        %t401 = select %t394, %t399, %t400 :: integer
        %t402 = load_input "rows" :: array
        %t403 = length %t402 :: integer
        %t404 = const -1 :: integer
        %t405 = call core.sub(%rows_i_232, %t404) :: integer
        %t406 = const 0 :: integer
        %t407 = call core.gte(%t405, %t406) :: boolean
        %t408 = call core.lt(%t405, %t403) :: boolean
        %t409 = call core.and(%t407, %t408) :: boolean
        %t410 = const 1 :: integer
        %t411 = call core.sub(%t403, %t410) :: integer
        %t412 = const 0 :: integer
        %t413 = call core.clamp(%t405, %t412, %t411) :: integer
        %t414 = gather %t402, %t413 :: any
        %t415 = length %t414 :: integer
        %t416 = const 1 :: integer
        %t417 = call core.sub(%col_i_234, %t416) :: integer
        %t418 = const 0 :: integer
        %t419 = call core.gte(%t417, %t418) :: boolean
        %t420 = call core.lt(%t417, %t415) :: boolean
        %t421 = call core.and(%t419, %t420) :: boolean
        %t422 = call core.and(%t409, %t421) :: boolean
        %t423 = const 1 :: integer
        %t424 = call core.sub(%t415, %t423) :: integer
        %t425 = const 0 :: integer
        %t426 = call core.clamp(%t417, %t425, %t424) :: integer
        %t427 = gather %t414, %t426 :: integer
        %t428 = const 0 :: integer
        %t429 = select %t422, %t427, %t428 :: integer
        %t430 = load_input "rows" :: array
        %t431 = length %t430 :: integer
        %t432 = const 1 :: integer
        %t433 = call core.sub(%rows_i_232, %t432) :: integer
        %t434 = const 0 :: integer
        %t435 = call core.gte(%t433, %t434) :: boolean
        %t436 = call core.lt(%t433, %t431) :: boolean
        %t437 = call core.and(%t435, %t436) :: boolean
        %t438 = const 1 :: integer
        %t439 = call core.sub(%t431, %t438) :: integer
        %t440 = const 0 :: integer
        %t441 = call core.clamp(%t433, %t440, %t439) :: integer
        %t442 = gather %t430, %t441 :: any
        %t443 = length %t442 :: integer
        %t444 = const -1 :: integer
        %t445 = call core.sub(%col_i_234, %t444) :: integer
        %t446 = const 0 :: integer
        %t447 = call core.gte(%t445, %t446) :: boolean
        %t448 = call core.lt(%t445, %t443) :: boolean
        %t449 = call core.and(%t447, %t448) :: boolean
        %t450 = call core.and(%t437, %t449) :: boolean
        %t451 = const 1 :: integer
        %t452 = call core.sub(%t443, %t451) :: integer
        %t453 = const 0 :: integer
        %t454 = call core.clamp(%t445, %t453, %t452) :: integer
        %t455 = gather %t442, %t454 :: integer
        %t456 = const 0 :: integer
        %t457 = select %t450, %t455, %t456 :: integer
        %t458 = load_input "rows" :: array
        %t459 = length %t458 :: integer
        %t460 = const 1 :: integer
        %t461 = call core.sub(%rows_i_232, %t460) :: integer
        %t462 = const 0 :: integer
        %t463 = call core.gte(%t461, %t462) :: boolean
        %t464 = call core.lt(%t461, %t459) :: boolean
        %t465 = call core.and(%t463, %t464) :: boolean
        %t466 = const 1 :: integer
        %t467 = call core.sub(%t459, %t466) :: integer
        %t468 = const 0 :: integer
        %t469 = call core.clamp(%t461, %t468, %t467) :: integer
        %t470 = gather %t458, %t469 :: any
        %t471 = length %t470 :: integer
        %t472 = const 1 :: integer
        %t473 = call core.sub(%col_i_234, %t472) :: integer
        %t474 = const 0 :: integer
        %t475 = call core.gte(%t473, %t474) :: boolean
        %t476 = call core.lt(%t473, %t471) :: boolean
        %t477 = call core.and(%t475, %t476) :: boolean
        %t478 = call core.and(%t465, %t477) :: boolean
        %t479 = const 1 :: integer
        %t480 = call core.sub(%t471, %t479) :: integer
        %t481 = const 0 :: integer
        %t482 = call core.clamp(%t473, %t481, %t480) :: integer
        %t483 = gather %t470, %t482 :: integer
        %t484 = const 0 :: integer
        %t485 = select %t478, %t483, %t484 :: integer
        %t243 = make_tuple(%t313, %t333, %t353, %t373, %t401, %t429, %t457, %t485) :: tuple<integer>
        %t244 = fold %t243 fn="agg.sum" :: 
        yield %t244
      end_loop
    end_loop
  )
  (Declaration alive
    %t245 = load_input "rows" :: array
    loop rows id=L21 in %t245 as el=%rows_el_246, idx=%rows_i_247
      loop col id=L22 in %rows_el_246 as el=%col_el_248, idx=%col_i_249
        %t486 = load_input "rows" :: array
        %t251 = const 0 :: integer
        %t252 = call core.gt(%col_el_248, %t251) :: boolean
        yield %t252
      end_loop
    end_loop
  )
  (Declaration n3_alive
    %t253 = load_input "rows" :: array
    loop rows id=L23 in %t253 as el=%rows_el_254, idx=%rows_i_255
      loop col id=L24 in %rows_el_254 as el=%col_el_256, idx=%col_i_257
        %t487 = load_input "rows" :: array
        %t529 = load_input "rows" :: array
        %t530 = length %t529 :: integer
        %t531 = const -1 :: integer
        %t532 = call core.sub(%rows_i_255, %t531) :: integer
        %t533 = const 0 :: integer
        %t534 = call core.gte(%t532, %t533) :: boolean
        %t535 = call core.lt(%t532, %t530) :: boolean
        %t536 = call core.and(%t534, %t535) :: boolean
        %t537 = const 1 :: integer
        %t538 = call core.sub(%t530, %t537) :: integer
        %t539 = const 0 :: integer
        %t540 = call core.clamp(%t532, %t539, %t538) :: integer
        %t541 = gather %t529, %t540 :: any
        %t542 = length %t541 :: integer
        %t543 = call core.mod(%col_i_257, %t542) :: integer
        %t544 = call core.add(%t543, %t542) :: integer
        %t545 = call core.mod(%t544, %t542) :: integer
        %t546 = gather %t541, %t545 :: integer
        %t547 = const 0 :: integer
        %t548 = select %t536, %t546, %t547 :: integer
        %t549 = load_input "rows" :: array
        %t550 = length %t549 :: integer
        %t551 = const 1 :: integer
        %t552 = call core.sub(%rows_i_255, %t551) :: integer
        %t553 = const 0 :: integer
        %t554 = call core.gte(%t552, %t553) :: boolean
        %t555 = call core.lt(%t552, %t550) :: boolean
        %t556 = call core.and(%t554, %t555) :: boolean
        %t557 = const 1 :: integer
        %t558 = call core.sub(%t550, %t557) :: integer
        %t559 = const 0 :: integer
        %t560 = call core.clamp(%t552, %t559, %t558) :: integer
        %t561 = gather %t549, %t560 :: any
        %t562 = length %t561 :: integer
        %t563 = call core.mod(%col_i_257, %t562) :: integer
        %t564 = call core.add(%t563, %t562) :: integer
        %t565 = call core.mod(%t564, %t562) :: integer
        %t566 = gather %t561, %t565 :: integer
        %t567 = const 0 :: integer
        %t568 = select %t556, %t566, %t567 :: integer
        %t569 = load_input "rows" :: array
        %t570 = length %t569 :: integer
        %t571 = call core.mod(%rows_i_255, %t570) :: integer
        %t572 = call core.add(%t571, %t570) :: integer
        %t573 = call core.mod(%t572, %t570) :: integer
        %t574 = gather %t569, %t573 :: any
        %t575 = length %t574 :: integer
        %t576 = const -1 :: integer
        %t577 = call core.sub(%col_i_257, %t576) :: integer
        %t578 = const 0 :: integer
        %t579 = call core.gte(%t577, %t578) :: boolean
        %t580 = call core.lt(%t577, %t575) :: boolean
        %t581 = call core.and(%t579, %t580) :: boolean
        %t582 = const 1 :: integer
        %t583 = call core.sub(%t575, %t582) :: integer
        %t584 = const 0 :: integer
        %t585 = call core.clamp(%t577, %t584, %t583) :: integer
        %t586 = gather %t574, %t585 :: integer
        %t587 = const 0 :: integer
        %t588 = select %t581, %t586, %t587 :: integer
        %t589 = load_input "rows" :: array
        %t590 = length %t589 :: integer
        %t591 = call core.mod(%rows_i_255, %t590) :: integer
        %t592 = call core.add(%t591, %t590) :: integer
        %t593 = call core.mod(%t592, %t590) :: integer
        %t594 = gather %t589, %t593 :: any
        %t595 = length %t594 :: integer
        %t596 = const 1 :: integer
        %t597 = call core.sub(%col_i_257, %t596) :: integer
        %t598 = const 0 :: integer
        %t599 = call core.gte(%t597, %t598) :: boolean
        %t600 = call core.lt(%t597, %t595) :: boolean
        %t601 = call core.and(%t599, %t600) :: boolean
        %t602 = const 1 :: integer
        %t603 = call core.sub(%t595, %t602) :: integer
        %t604 = const 0 :: integer
        %t605 = call core.clamp(%t597, %t604, %t603) :: integer
        %t606 = gather %t594, %t605 :: integer
        %t607 = const 0 :: integer
        %t608 = select %t601, %t606, %t607 :: integer
        %t609 = load_input "rows" :: array
        %t610 = length %t609 :: integer
        %t611 = const -1 :: integer
        %t612 = call core.sub(%rows_i_255, %t611) :: integer
        %t613 = const 0 :: integer
        %t614 = call core.gte(%t612, %t613) :: boolean
        %t615 = call core.lt(%t612, %t610) :: boolean
        %t616 = call core.and(%t614, %t615) :: boolean
        %t617 = const 1 :: integer
        %t618 = call core.sub(%t610, %t617) :: integer
        %t619 = const 0 :: integer
        %t620 = call core.clamp(%t612, %t619, %t618) :: integer
        %t621 = gather %t609, %t620 :: any
        %t622 = length %t621 :: integer
        %t623 = const -1 :: integer
        %t624 = call core.sub(%col_i_257, %t623) :: integer
        %t625 = const 0 :: integer
        %t626 = call core.gte(%t624, %t625) :: boolean
        %t627 = call core.lt(%t624, %t622) :: boolean
        %t628 = call core.and(%t626, %t627) :: boolean
        %t629 = call core.and(%t616, %t628) :: boolean
        %t630 = const 1 :: integer
        %t631 = call core.sub(%t622, %t630) :: integer
        %t632 = const 0 :: integer
        %t633 = call core.clamp(%t624, %t632, %t631) :: integer
        %t634 = gather %t621, %t633 :: integer
        %t635 = const 0 :: integer
        %t636 = select %t629, %t634, %t635 :: integer
        %t637 = load_input "rows" :: array
        %t638 = length %t637 :: integer
        %t639 = const -1 :: integer
        %t640 = call core.sub(%rows_i_255, %t639) :: integer
        %t641 = const 0 :: integer
        %t642 = call core.gte(%t640, %t641) :: boolean
        %t643 = call core.lt(%t640, %t638) :: boolean
        %t644 = call core.and(%t642, %t643) :: boolean
        %t645 = const 1 :: integer
        %t646 = call core.sub(%t638, %t645) :: integer
        %t647 = const 0 :: integer
        %t648 = call core.clamp(%t640, %t647, %t646) :: integer
        %t649 = gather %t637, %t648 :: any
        %t650 = length %t649 :: integer
        %t651 = const 1 :: integer
        %t652 = call core.sub(%col_i_257, %t651) :: integer
        %t653 = const 0 :: integer
        %t654 = call core.gte(%t652, %t653) :: boolean
        %t655 = call core.lt(%t652, %t650) :: boolean
        %t656 = call core.and(%t654, %t655) :: boolean
        %t657 = call core.and(%t644, %t656) :: boolean
        %t658 = const 1 :: integer
        %t659 = call core.sub(%t650, %t658) :: integer
        %t660 = const 0 :: integer
        %t661 = call core.clamp(%t652, %t660, %t659) :: integer
        %t662 = gather %t649, %t661 :: integer
        %t663 = const 0 :: integer
        %t664 = select %t657, %t662, %t663 :: integer
        %t665 = load_input "rows" :: array
        %t666 = length %t665 :: integer
        %t667 = const 1 :: integer
        %t668 = call core.sub(%rows_i_255, %t667) :: integer
        %t669 = const 0 :: integer
        %t670 = call core.gte(%t668, %t669) :: boolean
        %t671 = call core.lt(%t668, %t666) :: boolean
        %t672 = call core.and(%t670, %t671) :: boolean
        %t673 = const 1 :: integer
        %t674 = call core.sub(%t666, %t673) :: integer
        %t675 = const 0 :: integer
        %t676 = call core.clamp(%t668, %t675, %t674) :: integer
        %t677 = gather %t665, %t676 :: any
        %t678 = length %t677 :: integer
        %t679 = const -1 :: integer
        %t680 = call core.sub(%col_i_257, %t679) :: integer
        %t681 = const 0 :: integer
        %t682 = call core.gte(%t680, %t681) :: boolean
        %t683 = call core.lt(%t680, %t678) :: boolean
        %t684 = call core.and(%t682, %t683) :: boolean
        %t685 = call core.and(%t672, %t684) :: boolean
        %t686 = const 1 :: integer
        %t687 = call core.sub(%t678, %t686) :: integer
        %t688 = const 0 :: integer
        %t689 = call core.clamp(%t680, %t688, %t687) :: integer
        %t690 = gather %t677, %t689 :: integer
        %t691 = const 0 :: integer
        %t692 = select %t685, %t690, %t691 :: integer
        %t693 = load_input "rows" :: array
        %t694 = length %t693 :: integer
        %t695 = const 1 :: integer
        %t696 = call core.sub(%rows_i_255, %t695) :: integer
        %t697 = const 0 :: integer
        %t698 = call core.gte(%t696, %t697) :: boolean
        %t699 = call core.lt(%t696, %t694) :: boolean
        %t700 = call core.and(%t698, %t699) :: boolean
        %t701 = const 1 :: integer
        %t702 = call core.sub(%t694, %t701) :: integer
        %t703 = const 0 :: integer
        %t704 = call core.clamp(%t696, %t703, %t702) :: integer
        %t705 = gather %t693, %t704 :: any
        %t706 = length %t705 :: integer
        %t707 = const 1 :: integer
        %t708 = call core.sub(%col_i_257, %t707) :: integer
        %t709 = const 0 :: integer
        %t710 = call core.gte(%t708, %t709) :: boolean
        %t711 = call core.lt(%t708, %t706) :: boolean
        %t712 = call core.and(%t710, %t711) :: boolean
        %t713 = call core.and(%t700, %t712) :: boolean
        %t714 = const 1 :: integer
        %t715 = call core.sub(%t706, %t714) :: integer
        %t716 = const 0 :: integer
        %t717 = call core.clamp(%t708, %t716, %t715) :: integer
        %t718 = gather %t705, %t717 :: integer
        %t719 = const 0 :: integer
        %t720 = select %t713, %t718, %t719 :: integer
        %t496 = make_tuple(%t548, %t568, %t588, %t608, %t636, %t664, %t692, %t720) :: tuple<integer>
        %t497 = fold %t496 fn="agg.sum" :: 
        %t259 = const 3 :: integer
        %t260 = call core.eq(%t497, %t259) :: boolean
        yield %t260
      end_loop
    end_loop
  )
  (Declaration n2_alive
    %t261 = load_input "rows" :: array
    loop rows id=L25 in %t261 as el=%rows_el_262, idx=%rows_i_263
      loop col id=L26 in %rows_el_262 as el=%col_el_264, idx=%col_i_265
        %t498 = load_input "rows" :: array
        %t721 = load_input "rows" :: array
        %t722 = length %t721 :: integer
        %t723 = const -1 :: integer
        %t724 = call core.sub(%rows_i_263, %t723) :: integer
        %t725 = const 0 :: integer
        %t726 = call core.gte(%t724, %t725) :: boolean
        %t727 = call core.lt(%t724, %t722) :: boolean
        %t728 = call core.and(%t726, %t727) :: boolean
        %t729 = const 1 :: integer
        %t730 = call core.sub(%t722, %t729) :: integer
        %t731 = const 0 :: integer
        %t732 = call core.clamp(%t724, %t731, %t730) :: integer
        %t733 = gather %t721, %t732 :: any
        %t734 = length %t733 :: integer
        %t735 = call core.mod(%col_i_265, %t734) :: integer
        %t736 = call core.add(%t735, %t734) :: integer
        %t737 = call core.mod(%t736, %t734) :: integer
        %t738 = gather %t733, %t737 :: integer
        %t739 = const 0 :: integer
        %t740 = select %t728, %t738, %t739 :: integer
        %t741 = load_input "rows" :: array
        %t742 = length %t741 :: integer
        %t743 = const 1 :: integer
        %t744 = call core.sub(%rows_i_263, %t743) :: integer
        %t745 = const 0 :: integer
        %t746 = call core.gte(%t744, %t745) :: boolean
        %t747 = call core.lt(%t744, %t742) :: boolean
        %t748 = call core.and(%t746, %t747) :: boolean
        %t749 = const 1 :: integer
        %t750 = call core.sub(%t742, %t749) :: integer
        %t751 = const 0 :: integer
        %t752 = call core.clamp(%t744, %t751, %t750) :: integer
        %t753 = gather %t741, %t752 :: any
        %t754 = length %t753 :: integer
        %t755 = call core.mod(%col_i_265, %t754) :: integer
        %t756 = call core.add(%t755, %t754) :: integer
        %t757 = call core.mod(%t756, %t754) :: integer
        %t758 = gather %t753, %t757 :: integer
        %t759 = const 0 :: integer
        %t760 = select %t748, %t758, %t759 :: integer
        %t761 = load_input "rows" :: array
        %t762 = length %t761 :: integer
        %t763 = call core.mod(%rows_i_263, %t762) :: integer
        %t764 = call core.add(%t763, %t762) :: integer
        %t765 = call core.mod(%t764, %t762) :: integer
        %t766 = gather %t761, %t765 :: any
        %t767 = length %t766 :: integer
        %t768 = const -1 :: integer
        %t769 = call core.sub(%col_i_265, %t768) :: integer
        %t770 = const 0 :: integer
        %t771 = call core.gte(%t769, %t770) :: boolean
        %t772 = call core.lt(%t769, %t767) :: boolean
        %t773 = call core.and(%t771, %t772) :: boolean
        %t774 = const 1 :: integer
        %t775 = call core.sub(%t767, %t774) :: integer
        %t776 = const 0 :: integer
        %t777 = call core.clamp(%t769, %t776, %t775) :: integer
        %t778 = gather %t766, %t777 :: integer
        %t779 = const 0 :: integer
        %t780 = select %t773, %t778, %t779 :: integer
        %t781 = load_input "rows" :: array
        %t782 = length %t781 :: integer
        %t783 = call core.mod(%rows_i_263, %t782) :: integer
        %t784 = call core.add(%t783, %t782) :: integer
        %t785 = call core.mod(%t784, %t782) :: integer
        %t786 = gather %t781, %t785 :: any
        %t787 = length %t786 :: integer
        %t788 = const 1 :: integer
        %t789 = call core.sub(%col_i_265, %t788) :: integer
        %t790 = const 0 :: integer
        %t791 = call core.gte(%t789, %t790) :: boolean
        %t792 = call core.lt(%t789, %t787) :: boolean
        %t793 = call core.and(%t791, %t792) :: boolean
        %t794 = const 1 :: integer
        %t795 = call core.sub(%t787, %t794) :: integer
        %t796 = const 0 :: integer
        %t797 = call core.clamp(%t789, %t796, %t795) :: integer
        %t798 = gather %t786, %t797 :: integer
        %t799 = const 0 :: integer
        %t800 = select %t793, %t798, %t799 :: integer
        %t801 = load_input "rows" :: array
        %t802 = length %t801 :: integer
        %t803 = const -1 :: integer
        %t804 = call core.sub(%rows_i_263, %t803) :: integer
        %t805 = const 0 :: integer
        %t806 = call core.gte(%t804, %t805) :: boolean
        %t807 = call core.lt(%t804, %t802) :: boolean
        %t808 = call core.and(%t806, %t807) :: boolean
        %t809 = const 1 :: integer
        %t810 = call core.sub(%t802, %t809) :: integer
        %t811 = const 0 :: integer
        %t812 = call core.clamp(%t804, %t811, %t810) :: integer
        %t813 = gather %t801, %t812 :: any
        %t814 = length %t813 :: integer
        %t815 = const -1 :: integer
        %t816 = call core.sub(%col_i_265, %t815) :: integer
        %t817 = const 0 :: integer
        %t818 = call core.gte(%t816, %t817) :: boolean
        %t819 = call core.lt(%t816, %t814) :: boolean
        %t820 = call core.and(%t818, %t819) :: boolean
        %t821 = call core.and(%t808, %t820) :: boolean
        %t822 = const 1 :: integer
        %t823 = call core.sub(%t814, %t822) :: integer
        %t824 = const 0 :: integer
        %t825 = call core.clamp(%t816, %t824, %t823) :: integer
        %t826 = gather %t813, %t825 :: integer
        %t827 = const 0 :: integer
        %t828 = select %t821, %t826, %t827 :: integer
        %t829 = load_input "rows" :: array
        %t830 = length %t829 :: integer
        %t831 = const -1 :: integer
        %t832 = call core.sub(%rows_i_263, %t831) :: integer
        %t833 = const 0 :: integer
        %t834 = call core.gte(%t832, %t833) :: boolean
        %t835 = call core.lt(%t832, %t830) :: boolean
        %t836 = call core.and(%t834, %t835) :: boolean
        %t837 = const 1 :: integer
        %t838 = call core.sub(%t830, %t837) :: integer
        %t839 = const 0 :: integer
        %t840 = call core.clamp(%t832, %t839, %t838) :: integer
        %t841 = gather %t829, %t840 :: any
        %t842 = length %t841 :: integer
        %t843 = const 1 :: integer
        %t844 = call core.sub(%col_i_265, %t843) :: integer
        %t845 = const 0 :: integer
        %t846 = call core.gte(%t844, %t845) :: boolean
        %t847 = call core.lt(%t844, %t842) :: boolean
        %t848 = call core.and(%t846, %t847) :: boolean
        %t849 = call core.and(%t836, %t848) :: boolean
        %t850 = const 1 :: integer
        %t851 = call core.sub(%t842, %t850) :: integer
        %t852 = const 0 :: integer
        %t853 = call core.clamp(%t844, %t852, %t851) :: integer
        %t854 = gather %t841, %t853 :: integer
        %t855 = const 0 :: integer
        %t856 = select %t849, %t854, %t855 :: integer
        %t857 = load_input "rows" :: array
        %t858 = length %t857 :: integer
        %t859 = const 1 :: integer
        %t860 = call core.sub(%rows_i_263, %t859) :: integer
        %t861 = const 0 :: integer
        %t862 = call core.gte(%t860, %t861) :: boolean
        %t863 = call core.lt(%t860, %t858) :: boolean
        %t864 = call core.and(%t862, %t863) :: boolean
        %t865 = const 1 :: integer
        %t866 = call core.sub(%t858, %t865) :: integer
        %t867 = const 0 :: integer
        %t868 = call core.clamp(%t860, %t867, %t866) :: integer
        %t869 = gather %t857, %t868 :: any
        %t870 = length %t869 :: integer
        %t871 = const -1 :: integer
        %t872 = call core.sub(%col_i_265, %t871) :: integer
        %t873 = const 0 :: integer
        %t874 = call core.gte(%t872, %t873) :: boolean
        %t875 = call core.lt(%t872, %t870) :: boolean
        %t876 = call core.and(%t874, %t875) :: boolean
        %t877 = call core.and(%t864, %t876) :: boolean
        %t878 = const 1 :: integer
        %t879 = call core.sub(%t870, %t878) :: integer
        %t880 = const 0 :: integer
        %t881 = call core.clamp(%t872, %t880, %t879) :: integer
        %t882 = gather %t869, %t881 :: integer
        %t883 = const 0 :: integer
        %t884 = select %t877, %t882, %t883 :: integer
        %t885 = load_input "rows" :: array
        %t886 = length %t885 :: integer
        %t887 = const 1 :: integer
        %t888 = call core.sub(%rows_i_263, %t887) :: integer
        %t889 = const 0 :: integer
        %t890 = call core.gte(%t888, %t889) :: boolean
        %t891 = call core.lt(%t888, %t886) :: boolean
        %t892 = call core.and(%t890, %t891) :: boolean
        %t893 = const 1 :: integer
        %t894 = call core.sub(%t886, %t893) :: integer
        %t895 = const 0 :: integer
        %t896 = call core.clamp(%t888, %t895, %t894) :: integer
        %t897 = gather %t885, %t896 :: any
        %t898 = length %t897 :: integer
        %t899 = const 1 :: integer
        %t900 = call core.sub(%col_i_265, %t899) :: integer
        %t901 = const 0 :: integer
        %t902 = call core.gte(%t900, %t901) :: boolean
        %t903 = call core.lt(%t900, %t898) :: boolean
        %t904 = call core.and(%t902, %t903) :: boolean
        %t905 = call core.and(%t892, %t904) :: boolean
        %t906 = const 1 :: integer
        %t907 = call core.sub(%t898, %t906) :: integer
        %t908 = const 0 :: integer
        %t909 = call core.clamp(%t900, %t908, %t907) :: integer
        %t910 = gather %t897, %t909 :: integer
        %t911 = const 0 :: integer
        %t912 = select %t905, %t910, %t911 :: integer
        %t507 = make_tuple(%t740, %t760, %t780, %t800, %t828, %t856, %t884, %t912) :: tuple<integer>
        %t508 = fold %t507 fn="agg.sum" :: 
        %t267 = const 2 :: integer
        %t268 = call core.eq(%t508, %t267) :: boolean
        yield %t268
      end_loop
    end_loop
  )
  (Declaration keep_alive
    %t269 = load_input "rows" :: array
    loop rows id=L27 in %t269 as el=%rows_el_270, idx=%rows_i_271
      loop col id=L28 in %rows_el_270 as el=%col_el_272, idx=%col_i_273
        %t509 = load_input "rows" :: array
        %t913 = load_input "rows" :: array
        %t914 = load_input "rows" :: array
        %t915 = length %t914 :: integer
        %t916 = const -1 :: integer
        %t917 = call core.sub(%rows_i_271, %t916) :: integer
        %t918 = const 0 :: integer
        %t919 = call core.gte(%t917, %t918) :: boolean
        %t920 = call core.lt(%t917, %t915) :: boolean
        %t921 = call core.and(%t919, %t920) :: boolean
        %t922 = const 1 :: integer
        %t923 = call core.sub(%t915, %t922) :: integer
        %t924 = const 0 :: integer
        %t925 = call core.clamp(%t917, %t924, %t923) :: integer
        %t926 = gather %t914, %t925 :: any
        %t927 = length %t926 :: integer
        %t928 = call core.mod(%col_i_273, %t927) :: integer
        %t929 = call core.add(%t928, %t927) :: integer
        %t930 = call core.mod(%t929, %t927) :: integer
        %t931 = gather %t926, %t930 :: integer
        %t932 = const 0 :: integer
        %t933 = select %t921, %t931, %t932 :: integer
        %t934 = load_input "rows" :: array
        %t935 = length %t934 :: integer
        %t936 = const 1 :: integer
        %t937 = call core.sub(%rows_i_271, %t936) :: integer
        %t938 = const 0 :: integer
        %t939 = call core.gte(%t937, %t938) :: boolean
        %t940 = call core.lt(%t937, %t935) :: boolean
        %t941 = call core.and(%t939, %t940) :: boolean
        %t942 = const 1 :: integer
        %t943 = call core.sub(%t935, %t942) :: integer
        %t944 = const 0 :: integer
        %t945 = call core.clamp(%t937, %t944, %t943) :: integer
        %t946 = gather %t934, %t945 :: any
        %t947 = length %t946 :: integer
        %t948 = call core.mod(%col_i_273, %t947) :: integer
        %t949 = call core.add(%t948, %t947) :: integer
        %t950 = call core.mod(%t949, %t947) :: integer
        %t951 = gather %t946, %t950 :: integer
        %t952 = const 0 :: integer
        %t953 = select %t941, %t951, %t952 :: integer
        %t954 = load_input "rows" :: array
        %t955 = length %t954 :: integer
        %t956 = call core.mod(%rows_i_271, %t955) :: integer
        %t957 = call core.add(%t956, %t955) :: integer
        %t958 = call core.mod(%t957, %t955) :: integer
        %t959 = gather %t954, %t958 :: any
        %t960 = length %t959 :: integer
        %t961 = const -1 :: integer
        %t962 = call core.sub(%col_i_273, %t961) :: integer
        %t963 = const 0 :: integer
        %t964 = call core.gte(%t962, %t963) :: boolean
        %t965 = call core.lt(%t962, %t960) :: boolean
        %t966 = call core.and(%t964, %t965) :: boolean
        %t967 = const 1 :: integer
        %t968 = call core.sub(%t960, %t967) :: integer
        %t969 = const 0 :: integer
        %t970 = call core.clamp(%t962, %t969, %t968) :: integer
        %t971 = gather %t959, %t970 :: integer
        %t972 = const 0 :: integer
        %t973 = select %t966, %t971, %t972 :: integer
        %t974 = load_input "rows" :: array
        %t975 = length %t974 :: integer
        %t976 = call core.mod(%rows_i_271, %t975) :: integer
        %t977 = call core.add(%t976, %t975) :: integer
        %t978 = call core.mod(%t977, %t975) :: integer
        %t979 = gather %t974, %t978 :: any
        %t980 = length %t979 :: integer
        %t981 = const 1 :: integer
        %t982 = call core.sub(%col_i_273, %t981) :: integer
        %t983 = const 0 :: integer
        %t984 = call core.gte(%t982, %t983) :: boolean
        %t985 = call core.lt(%t982, %t980) :: boolean
        %t986 = call core.and(%t984, %t985) :: boolean
        %t987 = const 1 :: integer
        %t988 = call core.sub(%t980, %t987) :: integer
        %t989 = const 0 :: integer
        %t990 = call core.clamp(%t982, %t989, %t988) :: integer
        %t991 = gather %t979, %t990 :: integer
        %t992 = const 0 :: integer
        %t993 = select %t986, %t991, %t992 :: integer
        %t994 = load_input "rows" :: array
        %t995 = length %t994 :: integer
        %t996 = const -1 :: integer
        %t997 = call core.sub(%rows_i_271, %t996) :: integer
        %t998 = const 0 :: integer
        %t999 = call core.gte(%t997, %t998) :: boolean
        %t1000 = call core.lt(%t997, %t995) :: boolean
        %t1001 = call core.and(%t999, %t1000) :: boolean
        %t1002 = const 1 :: integer
        %t1003 = call core.sub(%t995, %t1002) :: integer
        %t1004 = const 0 :: integer
        %t1005 = call core.clamp(%t997, %t1004, %t1003) :: integer
        %t1006 = gather %t994, %t1005 :: any
        %t1007 = length %t1006 :: integer
        %t1008 = const -1 :: integer
        %t1009 = call core.sub(%col_i_273, %t1008) :: integer
        %t1010 = const 0 :: integer
        %t1011 = call core.gte(%t1009, %t1010) :: boolean
        %t1012 = call core.lt(%t1009, %t1007) :: boolean
        %t1013 = call core.and(%t1011, %t1012) :: boolean
        %t1014 = call core.and(%t1001, %t1013) :: boolean
        %t1015 = const 1 :: integer
        %t1016 = call core.sub(%t1007, %t1015) :: integer
        %t1017 = const 0 :: integer
        %t1018 = call core.clamp(%t1009, %t1017, %t1016) :: integer
        %t1019 = gather %t1006, %t1018 :: integer
        %t1020 = const 0 :: integer
        %t1021 = select %t1014, %t1019, %t1020 :: integer
        %t1022 = load_input "rows" :: array
        %t1023 = length %t1022 :: integer
        %t1024 = const -1 :: integer
        %t1025 = call core.sub(%rows_i_271, %t1024) :: integer
        %t1026 = const 0 :: integer
        %t1027 = call core.gte(%t1025, %t1026) :: boolean
        %t1028 = call core.lt(%t1025, %t1023) :: boolean
        %t1029 = call core.and(%t1027, %t1028) :: boolean
        %t1030 = const 1 :: integer
        %t1031 = call core.sub(%t1023, %t1030) :: integer
        %t1032 = const 0 :: integer
        %t1033 = call core.clamp(%t1025, %t1032, %t1031) :: integer
        %t1034 = gather %t1022, %t1033 :: any
        %t1035 = length %t1034 :: integer
        %t1036 = const 1 :: integer
        %t1037 = call core.sub(%col_i_273, %t1036) :: integer
        %t1038 = const 0 :: integer
        %t1039 = call core.gte(%t1037, %t1038) :: boolean
        %t1040 = call core.lt(%t1037, %t1035) :: boolean
        %t1041 = call core.and(%t1039, %t1040) :: boolean
        %t1042 = call core.and(%t1029, %t1041) :: boolean
        %t1043 = const 1 :: integer
        %t1044 = call core.sub(%t1035, %t1043) :: integer
        %t1045 = const 0 :: integer
        %t1046 = call core.clamp(%t1037, %t1045, %t1044) :: integer
        %t1047 = gather %t1034, %t1046 :: integer
        %t1048 = const 0 :: integer
        %t1049 = select %t1042, %t1047, %t1048 :: integer
        %t1050 = load_input "rows" :: array
        %t1051 = length %t1050 :: integer
        %t1052 = const 1 :: integer
        %t1053 = call core.sub(%rows_i_271, %t1052) :: integer
        %t1054 = const 0 :: integer
        %t1055 = call core.gte(%t1053, %t1054) :: boolean
        %t1056 = call core.lt(%t1053, %t1051) :: boolean
        %t1057 = call core.and(%t1055, %t1056) :: boolean
        %t1058 = const 1 :: integer
        %t1059 = call core.sub(%t1051, %t1058) :: integer
        %t1060 = const 0 :: integer
        %t1061 = call core.clamp(%t1053, %t1060, %t1059) :: integer
        %t1062 = gather %t1050, %t1061 :: any
        %t1063 = length %t1062 :: integer
        %t1064 = const -1 :: integer
        %t1065 = call core.sub(%col_i_273, %t1064) :: integer
        %t1066 = const 0 :: integer
        %t1067 = call core.gte(%t1065, %t1066) :: boolean
        %t1068 = call core.lt(%t1065, %t1063) :: boolean
        %t1069 = call core.and(%t1067, %t1068) :: boolean
        %t1070 = call core.and(%t1057, %t1069) :: boolean
        %t1071 = const 1 :: integer
        %t1072 = call core.sub(%t1063, %t1071) :: integer
        %t1073 = const 0 :: integer
        %t1074 = call core.clamp(%t1065, %t1073, %t1072) :: integer
        %t1075 = gather %t1062, %t1074 :: integer
        %t1076 = const 0 :: integer
        %t1077 = select %t1070, %t1075, %t1076 :: integer
        %t1078 = load_input "rows" :: array
        %t1079 = length %t1078 :: integer
        %t1080 = const 1 :: integer
        %t1081 = call core.sub(%rows_i_271, %t1080) :: integer
        %t1082 = const 0 :: integer
        %t1083 = call core.gte(%t1081, %t1082) :: boolean
        %t1084 = call core.lt(%t1081, %t1079) :: boolean
        %t1085 = call core.and(%t1083, %t1084) :: boolean
        %t1086 = const 1 :: integer
        %t1087 = call core.sub(%t1079, %t1086) :: integer
        %t1088 = const 0 :: integer
        %t1089 = call core.clamp(%t1081, %t1088, %t1087) :: integer
        %t1090 = gather %t1078, %t1089 :: any
        %t1091 = length %t1090 :: integer
        %t1092 = const 1 :: integer
        %t1093 = call core.sub(%col_i_273, %t1092) :: integer
        %t1094 = const 0 :: integer
        %t1095 = call core.gte(%t1093, %t1094) :: boolean
        %t1096 = call core.lt(%t1093, %t1091) :: boolean
        %t1097 = call core.and(%t1095, %t1096) :: boolean
        %t1098 = call core.and(%t1085, %t1097) :: boolean
        %t1099 = const 1 :: integer
        %t1100 = call core.sub(%t1091, %t1099) :: integer
        %t1101 = const 0 :: integer
        %t1102 = call core.clamp(%t1093, %t1101, %t1100) :: integer
        %t1103 = gather %t1090, %t1102 :: integer
        %t1104 = const 0 :: integer
        %t1105 = select %t1098, %t1103, %t1104 :: integer
        %t1106 = make_tuple(%t933, %t953, %t973, %t993, %t1021, %t1049, %t1077, %t1105) :: tuple<integer>
        %t1107 = fold %t1106 fn="agg.sum" :: 
        %t511 = const 2 :: integer
        %t512 = call core.eq(%t1107, %t511) :: boolean
        %t513 = load_input "rows" :: array
        %t1108 = load_input "rows" :: array
        %t515 = const 0 :: integer
        %t516 = call core.gt(%col_el_272, %t515) :: boolean
        %t276 = call core.and(%t512, %t516) :: boolean
        yield %t276
      end_loop
    end_loop
  )
  (Declaration next_alive
    %t277 = load_input "rows" :: array
    loop rows id=L29 in %t277 as el=%rows_el_278, idx=%rows_i_279
      loop col id=L30 in %rows_el_278 as el=%col_el_280, idx=%col_i_281
        %t517 = load_input "rows" :: array
        %t1109 = load_input "rows" :: array
        %t1110 = load_input "rows" :: array
        %t1111 = length %t1110 :: integer
        %t1112 = const -1 :: integer
        %t1113 = call core.sub(%rows_i_279, %t1112) :: integer
        %t1114 = const 0 :: integer
        %t1115 = call core.gte(%t1113, %t1114) :: boolean
        %t1116 = call core.lt(%t1113, %t1111) :: boolean
        %t1117 = call core.and(%t1115, %t1116) :: boolean
        %t1118 = const 1 :: integer
        %t1119 = call core.sub(%t1111, %t1118) :: integer
        %t1120 = const 0 :: integer
        %t1121 = call core.clamp(%t1113, %t1120, %t1119) :: integer
        %t1122 = gather %t1110, %t1121 :: any
        %t1123 = length %t1122 :: integer
        %t1124 = call core.mod(%col_i_281, %t1123) :: integer
        %t1125 = call core.add(%t1124, %t1123) :: integer
        %t1126 = call core.mod(%t1125, %t1123) :: integer
        %t1127 = gather %t1122, %t1126 :: integer
        %t1128 = const 0 :: integer
        %t1129 = select %t1117, %t1127, %t1128 :: integer
        %t1130 = load_input "rows" :: array
        %t1131 = length %t1130 :: integer
        %t1132 = const 1 :: integer
        %t1133 = call core.sub(%rows_i_279, %t1132) :: integer
        %t1134 = const 0 :: integer
        %t1135 = call core.gte(%t1133, %t1134) :: boolean
        %t1136 = call core.lt(%t1133, %t1131) :: boolean
        %t1137 = call core.and(%t1135, %t1136) :: boolean
        %t1138 = const 1 :: integer
        %t1139 = call core.sub(%t1131, %t1138) :: integer
        %t1140 = const 0 :: integer
        %t1141 = call core.clamp(%t1133, %t1140, %t1139) :: integer
        %t1142 = gather %t1130, %t1141 :: any
        %t1143 = length %t1142 :: integer
        %t1144 = call core.mod(%col_i_281, %t1143) :: integer
        %t1145 = call core.add(%t1144, %t1143) :: integer
        %t1146 = call core.mod(%t1145, %t1143) :: integer
        %t1147 = gather %t1142, %t1146 :: integer
        %t1148 = const 0 :: integer
        %t1149 = select %t1137, %t1147, %t1148 :: integer
        %t1150 = load_input "rows" :: array
        %t1151 = length %t1150 :: integer
        %t1152 = call core.mod(%rows_i_279, %t1151) :: integer
        %t1153 = call core.add(%t1152, %t1151) :: integer
        %t1154 = call core.mod(%t1153, %t1151) :: integer
        %t1155 = gather %t1150, %t1154 :: any
        %t1156 = length %t1155 :: integer
        %t1157 = const -1 :: integer
        %t1158 = call core.sub(%col_i_281, %t1157) :: integer
        %t1159 = const 0 :: integer
        %t1160 = call core.gte(%t1158, %t1159) :: boolean
        %t1161 = call core.lt(%t1158, %t1156) :: boolean
        %t1162 = call core.and(%t1160, %t1161) :: boolean
        %t1163 = const 1 :: integer
        %t1164 = call core.sub(%t1156, %t1163) :: integer
        %t1165 = const 0 :: integer
        %t1166 = call core.clamp(%t1158, %t1165, %t1164) :: integer
        %t1167 = gather %t1155, %t1166 :: integer
        %t1168 = const 0 :: integer
        %t1169 = select %t1162, %t1167, %t1168 :: integer
        %t1170 = load_input "rows" :: array
        %t1171 = length %t1170 :: integer
        %t1172 = call core.mod(%rows_i_279, %t1171) :: integer
        %t1173 = call core.add(%t1172, %t1171) :: integer
        %t1174 = call core.mod(%t1173, %t1171) :: integer
        %t1175 = gather %t1170, %t1174 :: any
        %t1176 = length %t1175 :: integer
        %t1177 = const 1 :: integer
        %t1178 = call core.sub(%col_i_281, %t1177) :: integer
        %t1179 = const 0 :: integer
        %t1180 = call core.gte(%t1178, %t1179) :: boolean
        %t1181 = call core.lt(%t1178, %t1176) :: boolean
        %t1182 = call core.and(%t1180, %t1181) :: boolean
        %t1183 = const 1 :: integer
        %t1184 = call core.sub(%t1176, %t1183) :: integer
        %t1185 = const 0 :: integer
        %t1186 = call core.clamp(%t1178, %t1185, %t1184) :: integer
        %t1187 = gather %t1175, %t1186 :: integer
        %t1188 = const 0 :: integer
        %t1189 = select %t1182, %t1187, %t1188 :: integer
        %t1190 = load_input "rows" :: array
        %t1191 = length %t1190 :: integer
        %t1192 = const -1 :: integer
        %t1193 = call core.sub(%rows_i_279, %t1192) :: integer
        %t1194 = const 0 :: integer
        %t1195 = call core.gte(%t1193, %t1194) :: boolean
        %t1196 = call core.lt(%t1193, %t1191) :: boolean
        %t1197 = call core.and(%t1195, %t1196) :: boolean
        %t1198 = const 1 :: integer
        %t1199 = call core.sub(%t1191, %t1198) :: integer
        %t1200 = const 0 :: integer
        %t1201 = call core.clamp(%t1193, %t1200, %t1199) :: integer
        %t1202 = gather %t1190, %t1201 :: any
        %t1203 = length %t1202 :: integer
        %t1204 = const -1 :: integer
        %t1205 = call core.sub(%col_i_281, %t1204) :: integer
        %t1206 = const 0 :: integer
        %t1207 = call core.gte(%t1205, %t1206) :: boolean
        %t1208 = call core.lt(%t1205, %t1203) :: boolean
        %t1209 = call core.and(%t1207, %t1208) :: boolean
        %t1210 = call core.and(%t1197, %t1209) :: boolean
        %t1211 = const 1 :: integer
        %t1212 = call core.sub(%t1203, %t1211) :: integer
        %t1213 = const 0 :: integer
        %t1214 = call core.clamp(%t1205, %t1213, %t1212) :: integer
        %t1215 = gather %t1202, %t1214 :: integer
        %t1216 = const 0 :: integer
        %t1217 = select %t1210, %t1215, %t1216 :: integer
        %t1218 = load_input "rows" :: array
        %t1219 = length %t1218 :: integer
        %t1220 = const -1 :: integer
        %t1221 = call core.sub(%rows_i_279, %t1220) :: integer
        %t1222 = const 0 :: integer
        %t1223 = call core.gte(%t1221, %t1222) :: boolean
        %t1224 = call core.lt(%t1221, %t1219) :: boolean
        %t1225 = call core.and(%t1223, %t1224) :: boolean
        %t1226 = const 1 :: integer
        %t1227 = call core.sub(%t1219, %t1226) :: integer
        %t1228 = const 0 :: integer
        %t1229 = call core.clamp(%t1221, %t1228, %t1227) :: integer
        %t1230 = gather %t1218, %t1229 :: any
        %t1231 = length %t1230 :: integer
        %t1232 = const 1 :: integer
        %t1233 = call core.sub(%col_i_281, %t1232) :: integer
        %t1234 = const 0 :: integer
        %t1235 = call core.gte(%t1233, %t1234) :: boolean
        %t1236 = call core.lt(%t1233, %t1231) :: boolean
        %t1237 = call core.and(%t1235, %t1236) :: boolean
        %t1238 = call core.and(%t1225, %t1237) :: boolean
        %t1239 = const 1 :: integer
        %t1240 = call core.sub(%t1231, %t1239) :: integer
        %t1241 = const 0 :: integer
        %t1242 = call core.clamp(%t1233, %t1241, %t1240) :: integer
        %t1243 = gather %t1230, %t1242 :: integer
        %t1244 = const 0 :: integer
        %t1245 = select %t1238, %t1243, %t1244 :: integer
        %t1246 = load_input "rows" :: array
        %t1247 = length %t1246 :: integer
        %t1248 = const 1 :: integer
        %t1249 = call core.sub(%rows_i_279, %t1248) :: integer
        %t1250 = const 0 :: integer
        %t1251 = call core.gte(%t1249, %t1250) :: boolean
        %t1252 = call core.lt(%t1249, %t1247) :: boolean
        %t1253 = call core.and(%t1251, %t1252) :: boolean
        %t1254 = const 1 :: integer
        %t1255 = call core.sub(%t1247, %t1254) :: integer
        %t1256 = const 0 :: integer
        %t1257 = call core.clamp(%t1249, %t1256, %t1255) :: integer
        %t1258 = gather %t1246, %t1257 :: any
        %t1259 = length %t1258 :: integer
        %t1260 = const -1 :: integer
        %t1261 = call core.sub(%col_i_281, %t1260) :: integer
        %t1262 = const 0 :: integer
        %t1263 = call core.gte(%t1261, %t1262) :: boolean
        %t1264 = call core.lt(%t1261, %t1259) :: boolean
        %t1265 = call core.and(%t1263, %t1264) :: boolean
        %t1266 = call core.and(%t1253, %t1265) :: boolean
        %t1267 = const 1 :: integer
        %t1268 = call core.sub(%t1259, %t1267) :: integer
        %t1269 = const 0 :: integer
        %t1270 = call core.clamp(%t1261, %t1269, %t1268) :: integer
        %t1271 = gather %t1258, %t1270 :: integer
        %t1272 = const 0 :: integer
        %t1273 = select %t1266, %t1271, %t1272 :: integer
        %t1274 = load_input "rows" :: array
        %t1275 = length %t1274 :: integer
        %t1276 = const 1 :: integer
        %t1277 = call core.sub(%rows_i_279, %t1276) :: integer
        %t1278 = const 0 :: integer
        %t1279 = call core.gte(%t1277, %t1278) :: boolean
        %t1280 = call core.lt(%t1277, %t1275) :: boolean
        %t1281 = call core.and(%t1279, %t1280) :: boolean
        %t1282 = const 1 :: integer
        %t1283 = call core.sub(%t1275, %t1282) :: integer
        %t1284 = const 0 :: integer
        %t1285 = call core.clamp(%t1277, %t1284, %t1283) :: integer
        %t1286 = gather %t1274, %t1285 :: any
        %t1287 = length %t1286 :: integer
        %t1288 = const 1 :: integer
        %t1289 = call core.sub(%col_i_281, %t1288) :: integer
        %t1290 = const 0 :: integer
        %t1291 = call core.gte(%t1289, %t1290) :: boolean
        %t1292 = call core.lt(%t1289, %t1287) :: boolean
        %t1293 = call core.and(%t1291, %t1292) :: boolean
        %t1294 = call core.and(%t1281, %t1293) :: boolean
        %t1295 = const 1 :: integer
        %t1296 = call core.sub(%t1287, %t1295) :: integer
        %t1297 = const 0 :: integer
        %t1298 = call core.clamp(%t1289, %t1297, %t1296) :: integer
        %t1299 = gather %t1286, %t1298 :: integer
        %t1300 = const 0 :: integer
        %t1301 = select %t1294, %t1299, %t1300 :: integer
        %t1302 = make_tuple(%t1129, %t1149, %t1169, %t1189, %t1217, %t1245, %t1273, %t1301) :: tuple<integer>
        %t1303 = fold %t1302 fn="agg.sum" :: 
        %t519 = const 3 :: integer
        %t520 = call core.eq(%t1303, %t519) :: boolean
        %t521 = load_input "rows" :: array
        %t1304 = load_input "rows" :: array
        %t1305 = load_input "rows" :: array
        %t1346 = load_input "rows" :: array
        %t1347 = length %t1346 :: integer
        %t1348 = const -1 :: integer
        %t1349 = call core.sub(%rows_i_279, %t1348) :: integer
        %t1350 = const 0 :: integer
        %t1351 = call core.gte(%t1349, %t1350) :: boolean
        %t1352 = call core.lt(%t1349, %t1347) :: boolean
        %t1353 = call core.and(%t1351, %t1352) :: boolean
        %t1354 = const 1 :: integer
        %t1355 = call core.sub(%t1347, %t1354) :: integer
        %t1356 = const 0 :: integer
        %t1357 = call core.clamp(%t1349, %t1356, %t1355) :: integer
        %t1358 = gather %t1346, %t1357 :: any
        %t1359 = length %t1358 :: integer
        %t1360 = call core.mod(%col_i_281, %t1359) :: integer
        %t1361 = call core.add(%t1360, %t1359) :: integer
        %t1362 = call core.mod(%t1361, %t1359) :: integer
        %t1363 = gather %t1358, %t1362 :: integer
        %t1364 = const 0 :: integer
        %t1365 = select %t1353, %t1363, %t1364 :: integer
        %t1366 = load_input "rows" :: array
        %t1367 = length %t1366 :: integer
        %t1368 = const 1 :: integer
        %t1369 = call core.sub(%rows_i_279, %t1368) :: integer
        %t1370 = const 0 :: integer
        %t1371 = call core.gte(%t1369, %t1370) :: boolean
        %t1372 = call core.lt(%t1369, %t1367) :: boolean
        %t1373 = call core.and(%t1371, %t1372) :: boolean
        %t1374 = const 1 :: integer
        %t1375 = call core.sub(%t1367, %t1374) :: integer
        %t1376 = const 0 :: integer
        %t1377 = call core.clamp(%t1369, %t1376, %t1375) :: integer
        %t1378 = gather %t1366, %t1377 :: any
        %t1379 = length %t1378 :: integer
        %t1380 = call core.mod(%col_i_281, %t1379) :: integer
        %t1381 = call core.add(%t1380, %t1379) :: integer
        %t1382 = call core.mod(%t1381, %t1379) :: integer
        %t1383 = gather %t1378, %t1382 :: integer
        %t1384 = const 0 :: integer
        %t1385 = select %t1373, %t1383, %t1384 :: integer
        %t1386 = load_input "rows" :: array
        %t1387 = length %t1386 :: integer
        %t1388 = call core.mod(%rows_i_279, %t1387) :: integer
        %t1389 = call core.add(%t1388, %t1387) :: integer
        %t1390 = call core.mod(%t1389, %t1387) :: integer
        %t1391 = gather %t1386, %t1390 :: any
        %t1392 = length %t1391 :: integer
        %t1393 = const -1 :: integer
        %t1394 = call core.sub(%col_i_281, %t1393) :: integer
        %t1395 = const 0 :: integer
        %t1396 = call core.gte(%t1394, %t1395) :: boolean
        %t1397 = call core.lt(%t1394, %t1392) :: boolean
        %t1398 = call core.and(%t1396, %t1397) :: boolean
        %t1399 = const 1 :: integer
        %t1400 = call core.sub(%t1392, %t1399) :: integer
        %t1401 = const 0 :: integer
        %t1402 = call core.clamp(%t1394, %t1401, %t1400) :: integer
        %t1403 = gather %t1391, %t1402 :: integer
        %t1404 = const 0 :: integer
        %t1405 = select %t1398, %t1403, %t1404 :: integer
        %t1406 = load_input "rows" :: array
        %t1407 = length %t1406 :: integer
        %t1408 = call core.mod(%rows_i_279, %t1407) :: integer
        %t1409 = call core.add(%t1408, %t1407) :: integer
        %t1410 = call core.mod(%t1409, %t1407) :: integer
        %t1411 = gather %t1406, %t1410 :: any
        %t1412 = length %t1411 :: integer
        %t1413 = const 1 :: integer
        %t1414 = call core.sub(%col_i_281, %t1413) :: integer
        %t1415 = const 0 :: integer
        %t1416 = call core.gte(%t1414, %t1415) :: boolean
        %t1417 = call core.lt(%t1414, %t1412) :: boolean
        %t1418 = call core.and(%t1416, %t1417) :: boolean
        %t1419 = const 1 :: integer
        %t1420 = call core.sub(%t1412, %t1419) :: integer
        %t1421 = const 0 :: integer
        %t1422 = call core.clamp(%t1414, %t1421, %t1420) :: integer
        %t1423 = gather %t1411, %t1422 :: integer
        %t1424 = const 0 :: integer
        %t1425 = select %t1418, %t1423, %t1424 :: integer
        %t1426 = load_input "rows" :: array
        %t1427 = length %t1426 :: integer
        %t1428 = const -1 :: integer
        %t1429 = call core.sub(%rows_i_279, %t1428) :: integer
        %t1430 = const 0 :: integer
        %t1431 = call core.gte(%t1429, %t1430) :: boolean
        %t1432 = call core.lt(%t1429, %t1427) :: boolean
        %t1433 = call core.and(%t1431, %t1432) :: boolean
        %t1434 = const 1 :: integer
        %t1435 = call core.sub(%t1427, %t1434) :: integer
        %t1436 = const 0 :: integer
        %t1437 = call core.clamp(%t1429, %t1436, %t1435) :: integer
        %t1438 = gather %t1426, %t1437 :: any
        %t1439 = length %t1438 :: integer
        %t1440 = const -1 :: integer
        %t1441 = call core.sub(%col_i_281, %t1440) :: integer
        %t1442 = const 0 :: integer
        %t1443 = call core.gte(%t1441, %t1442) :: boolean
        %t1444 = call core.lt(%t1441, %t1439) :: boolean
        %t1445 = call core.and(%t1443, %t1444) :: boolean
        %t1446 = call core.and(%t1433, %t1445) :: boolean
        %t1447 = const 1 :: integer
        %t1448 = call core.sub(%t1439, %t1447) :: integer
        %t1449 = const 0 :: integer
        %t1450 = call core.clamp(%t1441, %t1449, %t1448) :: integer
        %t1451 = gather %t1438, %t1450 :: integer
        %t1452 = const 0 :: integer
        %t1453 = select %t1446, %t1451, %t1452 :: integer
        %t1454 = load_input "rows" :: array
        %t1455 = length %t1454 :: integer
        %t1456 = const -1 :: integer
        %t1457 = call core.sub(%rows_i_279, %t1456) :: integer
        %t1458 = const 0 :: integer
        %t1459 = call core.gte(%t1457, %t1458) :: boolean
        %t1460 = call core.lt(%t1457, %t1455) :: boolean
        %t1461 = call core.and(%t1459, %t1460) :: boolean
        %t1462 = const 1 :: integer
        %t1463 = call core.sub(%t1455, %t1462) :: integer
        %t1464 = const 0 :: integer
        %t1465 = call core.clamp(%t1457, %t1464, %t1463) :: integer
        %t1466 = gather %t1454, %t1465 :: any
        %t1467 = length %t1466 :: integer
        %t1468 = const 1 :: integer
        %t1469 = call core.sub(%col_i_281, %t1468) :: integer
        %t1470 = const 0 :: integer
        %t1471 = call core.gte(%t1469, %t1470) :: boolean
        %t1472 = call core.lt(%t1469, %t1467) :: boolean
        %t1473 = call core.and(%t1471, %t1472) :: boolean
        %t1474 = call core.and(%t1461, %t1473) :: boolean
        %t1475 = const 1 :: integer
        %t1476 = call core.sub(%t1467, %t1475) :: integer
        %t1477 = const 0 :: integer
        %t1478 = call core.clamp(%t1469, %t1477, %t1476) :: integer
        %t1479 = gather %t1466, %t1478 :: integer
        %t1480 = const 0 :: integer
        %t1481 = select %t1474, %t1479, %t1480 :: integer
        %t1482 = load_input "rows" :: array
        %t1483 = length %t1482 :: integer
        %t1484 = const 1 :: integer
        %t1485 = call core.sub(%rows_i_279, %t1484) :: integer
        %t1486 = const 0 :: integer
        %t1487 = call core.gte(%t1485, %t1486) :: boolean
        %t1488 = call core.lt(%t1485, %t1483) :: boolean
        %t1489 = call core.and(%t1487, %t1488) :: boolean
        %t1490 = const 1 :: integer
        %t1491 = call core.sub(%t1483, %t1490) :: integer
        %t1492 = const 0 :: integer
        %t1493 = call core.clamp(%t1485, %t1492, %t1491) :: integer
        %t1494 = gather %t1482, %t1493 :: any
        %t1495 = length %t1494 :: integer
        %t1496 = const -1 :: integer
        %t1497 = call core.sub(%col_i_281, %t1496) :: integer
        %t1498 = const 0 :: integer
        %t1499 = call core.gte(%t1497, %t1498) :: boolean
        %t1500 = call core.lt(%t1497, %t1495) :: boolean
        %t1501 = call core.and(%t1499, %t1500) :: boolean
        %t1502 = call core.and(%t1489, %t1501) :: boolean
        %t1503 = const 1 :: integer
        %t1504 = call core.sub(%t1495, %t1503) :: integer
        %t1505 = const 0 :: integer
        %t1506 = call core.clamp(%t1497, %t1505, %t1504) :: integer
        %t1507 = gather %t1494, %t1506 :: integer
        %t1508 = const 0 :: integer
        %t1509 = select %t1502, %t1507, %t1508 :: integer
        %t1510 = load_input "rows" :: array
        %t1511 = length %t1510 :: integer
        %t1512 = const 1 :: integer
        %t1513 = call core.sub(%rows_i_279, %t1512) :: integer
        %t1514 = const 0 :: integer
        %t1515 = call core.gte(%t1513, %t1514) :: boolean
        %t1516 = call core.lt(%t1513, %t1511) :: boolean
        %t1517 = call core.and(%t1515, %t1516) :: boolean
        %t1518 = const 1 :: integer
        %t1519 = call core.sub(%t1511, %t1518) :: integer
        %t1520 = const 0 :: integer
        %t1521 = call core.clamp(%t1513, %t1520, %t1519) :: integer
        %t1522 = gather %t1510, %t1521 :: any
        %t1523 = length %t1522 :: integer
        %t1524 = const 1 :: integer
        %t1525 = call core.sub(%col_i_281, %t1524) :: integer
        %t1526 = const 0 :: integer
        %t1527 = call core.gte(%t1525, %t1526) :: boolean
        %t1528 = call core.lt(%t1525, %t1523) :: boolean
        %t1529 = call core.and(%t1527, %t1528) :: boolean
        %t1530 = call core.and(%t1517, %t1529) :: boolean
        %t1531 = const 1 :: integer
        %t1532 = call core.sub(%t1523, %t1531) :: integer
        %t1533 = const 0 :: integer
        %t1534 = call core.clamp(%t1525, %t1533, %t1532) :: integer
        %t1535 = gather %t1522, %t1534 :: integer
        %t1536 = const 0 :: integer
        %t1537 = select %t1530, %t1535, %t1536 :: integer
        %t1314 = make_tuple(%t1365, %t1385, %t1405, %t1425, %t1453, %t1481, %t1509, %t1537) :: tuple<integer>
        %t1315 = fold %t1314 fn="agg.sum" :: 
        %t1316 = const 2 :: integer
        %t1317 = call core.eq(%t1315, %t1316) :: boolean
        %t1318 = load_input "rows" :: array
        %t1319 = load_input "rows" :: array
        %t1320 = const 0 :: integer
        %t1321 = call core.gt(%col_el_280, %t1320) :: boolean
        %t524 = call core.and(%t1317, %t1321) :: boolean
        %t284 = call core.or(%t520, %t524) :: boolean
        yield %t284
      end_loop
    end_loop
  )
  (Declaration next_state
    %t285 = load_input "rows" :: array
    loop rows id=L31 in %t285 as el=%rows_el_286, idx=%rows_i_287
      loop col id=L32 in %rows_el_286 as el=%col_el_288, idx=%col_i_289
        %t525 = load_input "rows" :: array
        %t1322 = load_input "rows" :: array
        %t1323 = load_input "rows" :: array
        %t1538 = load_input "rows" :: array
        %t1539 = length %t1538 :: integer
        %t1540 = const -1 :: integer
        %t1541 = call core.sub(%rows_i_287, %t1540) :: integer
        %t1542 = const 0 :: integer
        %t1543 = call core.gte(%t1541, %t1542) :: boolean
        %t1544 = call core.lt(%t1541, %t1539) :: boolean
        %t1545 = call core.and(%t1543, %t1544) :: boolean
        %t1546 = const 1 :: integer
        %t1547 = call core.sub(%t1539, %t1546) :: integer
        %t1548 = const 0 :: integer
        %t1549 = call core.clamp(%t1541, %t1548, %t1547) :: integer
        %t1550 = gather %t1538, %t1549 :: any
        %t1551 = length %t1550 :: integer
        %t1552 = call core.mod(%col_i_289, %t1551) :: integer
        %t1553 = call core.add(%t1552, %t1551) :: integer
        %t1554 = call core.mod(%t1553, %t1551) :: integer
        %t1555 = gather %t1550, %t1554 :: integer
        %t1556 = const 0 :: integer
        %t1557 = select %t1545, %t1555, %t1556 :: integer
        %t1558 = load_input "rows" :: array
        %t1559 = length %t1558 :: integer
        %t1560 = const 1 :: integer
        %t1561 = call core.sub(%rows_i_287, %t1560) :: integer
        %t1562 = const 0 :: integer
        %t1563 = call core.gte(%t1561, %t1562) :: boolean
        %t1564 = call core.lt(%t1561, %t1559) :: boolean
        %t1565 = call core.and(%t1563, %t1564) :: boolean
        %t1566 = const 1 :: integer
        %t1567 = call core.sub(%t1559, %t1566) :: integer
        %t1568 = const 0 :: integer
        %t1569 = call core.clamp(%t1561, %t1568, %t1567) :: integer
        %t1570 = gather %t1558, %t1569 :: any
        %t1571 = length %t1570 :: integer
        %t1572 = call core.mod(%col_i_289, %t1571) :: integer
        %t1573 = call core.add(%t1572, %t1571) :: integer
        %t1574 = call core.mod(%t1573, %t1571) :: integer
        %t1575 = gather %t1570, %t1574 :: integer
        %t1576 = const 0 :: integer
        %t1577 = select %t1565, %t1575, %t1576 :: integer
        %t1578 = load_input "rows" :: array
        %t1579 = length %t1578 :: integer
        %t1580 = call core.mod(%rows_i_287, %t1579) :: integer
        %t1581 = call core.add(%t1580, %t1579) :: integer
        %t1582 = call core.mod(%t1581, %t1579) :: integer
        %t1583 = gather %t1578, %t1582 :: any
        %t1584 = length %t1583 :: integer
        %t1585 = const -1 :: integer
        %t1586 = call core.sub(%col_i_289, %t1585) :: integer
        %t1587 = const 0 :: integer
        %t1588 = call core.gte(%t1586, %t1587) :: boolean
        %t1589 = call core.lt(%t1586, %t1584) :: boolean
        %t1590 = call core.and(%t1588, %t1589) :: boolean
        %t1591 = const 1 :: integer
        %t1592 = call core.sub(%t1584, %t1591) :: integer
        %t1593 = const 0 :: integer
        %t1594 = call core.clamp(%t1586, %t1593, %t1592) :: integer
        %t1595 = gather %t1583, %t1594 :: integer
        %t1596 = const 0 :: integer
        %t1597 = select %t1590, %t1595, %t1596 :: integer
        %t1598 = load_input "rows" :: array
        %t1599 = length %t1598 :: integer
        %t1600 = call core.mod(%rows_i_287, %t1599) :: integer
        %t1601 = call core.add(%t1600, %t1599) :: integer
        %t1602 = call core.mod(%t1601, %t1599) :: integer
        %t1603 = gather %t1598, %t1602 :: any
        %t1604 = length %t1603 :: integer
        %t1605 = const 1 :: integer
        %t1606 = call core.sub(%col_i_289, %t1605) :: integer
        %t1607 = const 0 :: integer
        %t1608 = call core.gte(%t1606, %t1607) :: boolean
        %t1609 = call core.lt(%t1606, %t1604) :: boolean
        %t1610 = call core.and(%t1608, %t1609) :: boolean
        %t1611 = const 1 :: integer
        %t1612 = call core.sub(%t1604, %t1611) :: integer
        %t1613 = const 0 :: integer
        %t1614 = call core.clamp(%t1606, %t1613, %t1612) :: integer
        %t1615 = gather %t1603, %t1614 :: integer
        %t1616 = const 0 :: integer
        %t1617 = select %t1610, %t1615, %t1616 :: integer
        %t1618 = load_input "rows" :: array
        %t1619 = length %t1618 :: integer
        %t1620 = const -1 :: integer
        %t1621 = call core.sub(%rows_i_287, %t1620) :: integer
        %t1622 = const 0 :: integer
        %t1623 = call core.gte(%t1621, %t1622) :: boolean
        %t1624 = call core.lt(%t1621, %t1619) :: boolean
        %t1625 = call core.and(%t1623, %t1624) :: boolean
        %t1626 = const 1 :: integer
        %t1627 = call core.sub(%t1619, %t1626) :: integer
        %t1628 = const 0 :: integer
        %t1629 = call core.clamp(%t1621, %t1628, %t1627) :: integer
        %t1630 = gather %t1618, %t1629 :: any
        %t1631 = length %t1630 :: integer
        %t1632 = const -1 :: integer
        %t1633 = call core.sub(%col_i_289, %t1632) :: integer
        %t1634 = const 0 :: integer
        %t1635 = call core.gte(%t1633, %t1634) :: boolean
        %t1636 = call core.lt(%t1633, %t1631) :: boolean
        %t1637 = call core.and(%t1635, %t1636) :: boolean
        %t1638 = call core.and(%t1625, %t1637) :: boolean
        %t1639 = const 1 :: integer
        %t1640 = call core.sub(%t1631, %t1639) :: integer
        %t1641 = const 0 :: integer
        %t1642 = call core.clamp(%t1633, %t1641, %t1640) :: integer
        %t1643 = gather %t1630, %t1642 :: integer
        %t1644 = const 0 :: integer
        %t1645 = select %t1638, %t1643, %t1644 :: integer
        %t1646 = load_input "rows" :: array
        %t1647 = length %t1646 :: integer
        %t1648 = const -1 :: integer
        %t1649 = call core.sub(%rows_i_287, %t1648) :: integer
        %t1650 = const 0 :: integer
        %t1651 = call core.gte(%t1649, %t1650) :: boolean
        %t1652 = call core.lt(%t1649, %t1647) :: boolean
        %t1653 = call core.and(%t1651, %t1652) :: boolean
        %t1654 = const 1 :: integer
        %t1655 = call core.sub(%t1647, %t1654) :: integer
        %t1656 = const 0 :: integer
        %t1657 = call core.clamp(%t1649, %t1656, %t1655) :: integer
        %t1658 = gather %t1646, %t1657 :: any
        %t1659 = length %t1658 :: integer
        %t1660 = const 1 :: integer
        %t1661 = call core.sub(%col_i_289, %t1660) :: integer
        %t1662 = const 0 :: integer
        %t1663 = call core.gte(%t1661, %t1662) :: boolean
        %t1664 = call core.lt(%t1661, %t1659) :: boolean
        %t1665 = call core.and(%t1663, %t1664) :: boolean
        %t1666 = call core.and(%t1653, %t1665) :: boolean
        %t1667 = const 1 :: integer
        %t1668 = call core.sub(%t1659, %t1667) :: integer
        %t1669 = const 0 :: integer
        %t1670 = call core.clamp(%t1661, %t1669, %t1668) :: integer
        %t1671 = gather %t1658, %t1670 :: integer
        %t1672 = const 0 :: integer
        %t1673 = select %t1666, %t1671, %t1672 :: integer
        %t1674 = load_input "rows" :: array
        %t1675 = length %t1674 :: integer
        %t1676 = const 1 :: integer
        %t1677 = call core.sub(%rows_i_287, %t1676) :: integer
        %t1678 = const 0 :: integer
        %t1679 = call core.gte(%t1677, %t1678) :: boolean
        %t1680 = call core.lt(%t1677, %t1675) :: boolean
        %t1681 = call core.and(%t1679, %t1680) :: boolean
        %t1682 = const 1 :: integer
        %t1683 = call core.sub(%t1675, %t1682) :: integer
        %t1684 = const 0 :: integer
        %t1685 = call core.clamp(%t1677, %t1684, %t1683) :: integer
        %t1686 = gather %t1674, %t1685 :: any
        %t1687 = length %t1686 :: integer
        %t1688 = const -1 :: integer
        %t1689 = call core.sub(%col_i_289, %t1688) :: integer
        %t1690 = const 0 :: integer
        %t1691 = call core.gte(%t1689, %t1690) :: boolean
        %t1692 = call core.lt(%t1689, %t1687) :: boolean
        %t1693 = call core.and(%t1691, %t1692) :: boolean
        %t1694 = call core.and(%t1681, %t1693) :: boolean
        %t1695 = const 1 :: integer
        %t1696 = call core.sub(%t1687, %t1695) :: integer
        %t1697 = const 0 :: integer
        %t1698 = call core.clamp(%t1689, %t1697, %t1696) :: integer
        %t1699 = gather %t1686, %t1698 :: integer
        %t1700 = const 0 :: integer
        %t1701 = select %t1694, %t1699, %t1700 :: integer
        %t1702 = load_input "rows" :: array
        %t1703 = length %t1702 :: integer
        %t1704 = const 1 :: integer
        %t1705 = call core.sub(%rows_i_287, %t1704) :: integer
        %t1706 = const 0 :: integer
        %t1707 = call core.gte(%t1705, %t1706) :: boolean
        %t1708 = call core.lt(%t1705, %t1703) :: boolean
        %t1709 = call core.and(%t1707, %t1708) :: boolean
        %t1710 = const 1 :: integer
        %t1711 = call core.sub(%t1703, %t1710) :: integer
        %t1712 = const 0 :: integer
        %t1713 = call core.clamp(%t1705, %t1712, %t1711) :: integer
        %t1714 = gather %t1702, %t1713 :: any
        %t1715 = length %t1714 :: integer
        %t1716 = const 1 :: integer
        %t1717 = call core.sub(%col_i_289, %t1716) :: integer
        %t1718 = const 0 :: integer
        %t1719 = call core.gte(%t1717, %t1718) :: boolean
        %t1720 = call core.lt(%t1717, %t1715) :: boolean
        %t1721 = call core.and(%t1719, %t1720) :: boolean
        %t1722 = call core.and(%t1709, %t1721) :: boolean
        %t1723 = const 1 :: integer
        %t1724 = call core.sub(%t1715, %t1723) :: integer
        %t1725 = const 0 :: integer
        %t1726 = call core.clamp(%t1717, %t1725, %t1724) :: integer
        %t1727 = gather %t1714, %t1726 :: integer
        %t1728 = const 0 :: integer
        %t1729 = select %t1722, %t1727, %t1728 :: integer
        %t1332 = make_tuple(%t1557, %t1577, %t1597, %t1617, %t1645, %t1673, %t1701, %t1729) :: tuple<integer>
        %t1333 = fold %t1332 fn="agg.sum" :: 
        %t1334 = const 3 :: integer
        %t1335 = call core.eq(%t1333, %t1334) :: boolean
        %t1336 = load_input "rows" :: array
        %t1337 = load_input "rows" :: array
        %t1730 = load_input "rows" :: array
        %t1731 = load_input "rows" :: array
        %t1732 = length %t1731 :: integer
        %t1733 = const -1 :: integer
        %t1734 = call core.sub(%rows_i_287, %t1733) :: integer
        %t1735 = const 0 :: integer
        %t1736 = call core.gte(%t1734, %t1735) :: boolean
        %t1737 = call core.lt(%t1734, %t1732) :: boolean
        %t1738 = call core.and(%t1736, %t1737) :: boolean
        %t1739 = const 1 :: integer
        %t1740 = call core.sub(%t1732, %t1739) :: integer
        %t1741 = const 0 :: integer
        %t1742 = call core.clamp(%t1734, %t1741, %t1740) :: integer
        %t1743 = gather %t1731, %t1742 :: any
        %t1744 = length %t1743 :: integer
        %t1745 = call core.mod(%col_i_289, %t1744) :: integer
        %t1746 = call core.add(%t1745, %t1744) :: integer
        %t1747 = call core.mod(%t1746, %t1744) :: integer
        %t1748 = gather %t1743, %t1747 :: integer
        %t1749 = const 0 :: integer
        %t1750 = select %t1738, %t1748, %t1749 :: integer
        %t1751 = load_input "rows" :: array
        %t1752 = length %t1751 :: integer
        %t1753 = const 1 :: integer
        %t1754 = call core.sub(%rows_i_287, %t1753) :: integer
        %t1755 = const 0 :: integer
        %t1756 = call core.gte(%t1754, %t1755) :: boolean
        %t1757 = call core.lt(%t1754, %t1752) :: boolean
        %t1758 = call core.and(%t1756, %t1757) :: boolean
        %t1759 = const 1 :: integer
        %t1760 = call core.sub(%t1752, %t1759) :: integer
        %t1761 = const 0 :: integer
        %t1762 = call core.clamp(%t1754, %t1761, %t1760) :: integer
        %t1763 = gather %t1751, %t1762 :: any
        %t1764 = length %t1763 :: integer
        %t1765 = call core.mod(%col_i_289, %t1764) :: integer
        %t1766 = call core.add(%t1765, %t1764) :: integer
        %t1767 = call core.mod(%t1766, %t1764) :: integer
        %t1768 = gather %t1763, %t1767 :: integer
        %t1769 = const 0 :: integer
        %t1770 = select %t1758, %t1768, %t1769 :: integer
        %t1771 = load_input "rows" :: array
        %t1772 = length %t1771 :: integer
        %t1773 = call core.mod(%rows_i_287, %t1772) :: integer
        %t1774 = call core.add(%t1773, %t1772) :: integer
        %t1775 = call core.mod(%t1774, %t1772) :: integer
        %t1776 = gather %t1771, %t1775 :: any
        %t1777 = length %t1776 :: integer
        %t1778 = const -1 :: integer
        %t1779 = call core.sub(%col_i_289, %t1778) :: integer
        %t1780 = const 0 :: integer
        %t1781 = call core.gte(%t1779, %t1780) :: boolean
        %t1782 = call core.lt(%t1779, %t1777) :: boolean
        %t1783 = call core.and(%t1781, %t1782) :: boolean
        %t1784 = const 1 :: integer
        %t1785 = call core.sub(%t1777, %t1784) :: integer
        %t1786 = const 0 :: integer
        %t1787 = call core.clamp(%t1779, %t1786, %t1785) :: integer
        %t1788 = gather %t1776, %t1787 :: integer
        %t1789 = const 0 :: integer
        %t1790 = select %t1783, %t1788, %t1789 :: integer
        %t1791 = load_input "rows" :: array
        %t1792 = length %t1791 :: integer
        %t1793 = call core.mod(%rows_i_287, %t1792) :: integer
        %t1794 = call core.add(%t1793, %t1792) :: integer
        %t1795 = call core.mod(%t1794, %t1792) :: integer
        %t1796 = gather %t1791, %t1795 :: any
        %t1797 = length %t1796 :: integer
        %t1798 = const 1 :: integer
        %t1799 = call core.sub(%col_i_289, %t1798) :: integer
        %t1800 = const 0 :: integer
        %t1801 = call core.gte(%t1799, %t1800) :: boolean
        %t1802 = call core.lt(%t1799, %t1797) :: boolean
        %t1803 = call core.and(%t1801, %t1802) :: boolean
        %t1804 = const 1 :: integer
        %t1805 = call core.sub(%t1797, %t1804) :: integer
        %t1806 = const 0 :: integer
        %t1807 = call core.clamp(%t1799, %t1806, %t1805) :: integer
        %t1808 = gather %t1796, %t1807 :: integer
        %t1809 = const 0 :: integer
        %t1810 = select %t1803, %t1808, %t1809 :: integer
        %t1811 = load_input "rows" :: array
        %t1812 = length %t1811 :: integer
        %t1813 = const -1 :: integer
        %t1814 = call core.sub(%rows_i_287, %t1813) :: integer
        %t1815 = const 0 :: integer
        %t1816 = call core.gte(%t1814, %t1815) :: boolean
        %t1817 = call core.lt(%t1814, %t1812) :: boolean
        %t1818 = call core.and(%t1816, %t1817) :: boolean
        %t1819 = const 1 :: integer
        %t1820 = call core.sub(%t1812, %t1819) :: integer
        %t1821 = const 0 :: integer
        %t1822 = call core.clamp(%t1814, %t1821, %t1820) :: integer
        %t1823 = gather %t1811, %t1822 :: any
        %t1824 = length %t1823 :: integer
        %t1825 = const -1 :: integer
        %t1826 = call core.sub(%col_i_289, %t1825) :: integer
        %t1827 = const 0 :: integer
        %t1828 = call core.gte(%t1826, %t1827) :: boolean
        %t1829 = call core.lt(%t1826, %t1824) :: boolean
        %t1830 = call core.and(%t1828, %t1829) :: boolean
        %t1831 = call core.and(%t1818, %t1830) :: boolean
        %t1832 = const 1 :: integer
        %t1833 = call core.sub(%t1824, %t1832) :: integer
        %t1834 = const 0 :: integer
        %t1835 = call core.clamp(%t1826, %t1834, %t1833) :: integer
        %t1836 = gather %t1823, %t1835 :: integer
        %t1837 = const 0 :: integer
        %t1838 = select %t1831, %t1836, %t1837 :: integer
        %t1839 = load_input "rows" :: array
        %t1840 = length %t1839 :: integer
        %t1841 = const -1 :: integer
        %t1842 = call core.sub(%rows_i_287, %t1841) :: integer
        %t1843 = const 0 :: integer
        %t1844 = call core.gte(%t1842, %t1843) :: boolean
        %t1845 = call core.lt(%t1842, %t1840) :: boolean
        %t1846 = call core.and(%t1844, %t1845) :: boolean
        %t1847 = const 1 :: integer
        %t1848 = call core.sub(%t1840, %t1847) :: integer
        %t1849 = const 0 :: integer
        %t1850 = call core.clamp(%t1842, %t1849, %t1848) :: integer
        %t1851 = gather %t1839, %t1850 :: any
        %t1852 = length %t1851 :: integer
        %t1853 = const 1 :: integer
        %t1854 = call core.sub(%col_i_289, %t1853) :: integer
        %t1855 = const 0 :: integer
        %t1856 = call core.gte(%t1854, %t1855) :: boolean
        %t1857 = call core.lt(%t1854, %t1852) :: boolean
        %t1858 = call core.and(%t1856, %t1857) :: boolean
        %t1859 = call core.and(%t1846, %t1858) :: boolean
        %t1860 = const 1 :: integer
        %t1861 = call core.sub(%t1852, %t1860) :: integer
        %t1862 = const 0 :: integer
        %t1863 = call core.clamp(%t1854, %t1862, %t1861) :: integer
        %t1864 = gather %t1851, %t1863 :: integer
        %t1865 = const 0 :: integer
        %t1866 = select %t1859, %t1864, %t1865 :: integer
        %t1867 = load_input "rows" :: array
        %t1868 = length %t1867 :: integer
        %t1869 = const 1 :: integer
        %t1870 = call core.sub(%rows_i_287, %t1869) :: integer
        %t1871 = const 0 :: integer
        %t1872 = call core.gte(%t1870, %t1871) :: boolean
        %t1873 = call core.lt(%t1870, %t1868) :: boolean
        %t1874 = call core.and(%t1872, %t1873) :: boolean
        %t1875 = const 1 :: integer
        %t1876 = call core.sub(%t1868, %t1875) :: integer
        %t1877 = const 0 :: integer
        %t1878 = call core.clamp(%t1870, %t1877, %t1876) :: integer
        %t1879 = gather %t1867, %t1878 :: any
        %t1880 = length %t1879 :: integer
        %t1881 = const -1 :: integer
        %t1882 = call core.sub(%col_i_289, %t1881) :: integer
        %t1883 = const 0 :: integer
        %t1884 = call core.gte(%t1882, %t1883) :: boolean
        %t1885 = call core.lt(%t1882, %t1880) :: boolean
        %t1886 = call core.and(%t1884, %t1885) :: boolean
        %t1887 = call core.and(%t1874, %t1886) :: boolean
        %t1888 = const 1 :: integer
        %t1889 = call core.sub(%t1880, %t1888) :: integer
        %t1890 = const 0 :: integer
        %t1891 = call core.clamp(%t1882, %t1890, %t1889) :: integer
        %t1892 = gather %t1879, %t1891 :: integer
        %t1893 = const 0 :: integer
        %t1894 = select %t1887, %t1892, %t1893 :: integer
        %t1895 = load_input "rows" :: array
        %t1896 = length %t1895 :: integer
        %t1897 = const 1 :: integer
        %t1898 = call core.sub(%rows_i_287, %t1897) :: integer
        %t1899 = const 0 :: integer
        %t1900 = call core.gte(%t1898, %t1899) :: boolean
        %t1901 = call core.lt(%t1898, %t1896) :: boolean
        %t1902 = call core.and(%t1900, %t1901) :: boolean
        %t1903 = const 1 :: integer
        %t1904 = call core.sub(%t1896, %t1903) :: integer
        %t1905 = const 0 :: integer
        %t1906 = call core.clamp(%t1898, %t1905, %t1904) :: integer
        %t1907 = gather %t1895, %t1906 :: any
        %t1908 = length %t1907 :: integer
        %t1909 = const 1 :: integer
        %t1910 = call core.sub(%col_i_289, %t1909) :: integer
        %t1911 = const 0 :: integer
        %t1912 = call core.gte(%t1910, %t1911) :: boolean
        %t1913 = call core.lt(%t1910, %t1908) :: boolean
        %t1914 = call core.and(%t1912, %t1913) :: boolean
        %t1915 = call core.and(%t1902, %t1914) :: boolean
        %t1916 = const 1 :: integer
        %t1917 = call core.sub(%t1908, %t1916) :: integer
        %t1918 = const 0 :: integer
        %t1919 = call core.clamp(%t1910, %t1918, %t1917) :: integer
        %t1920 = gather %t1907, %t1919 :: integer
        %t1921 = const 0 :: integer
        %t1922 = select %t1915, %t1920, %t1921 :: integer
        %t1923 = make_tuple(%t1750, %t1770, %t1790, %t1810, %t1838, %t1866, %t1894, %t1922) :: tuple<integer>
        %t1924 = fold %t1923 fn="agg.sum" :: 
        %t1339 = const 2 :: integer
        %t1340 = call core.eq(%t1924, %t1339) :: boolean
        %t1341 = load_input "rows" :: array
        %t1925 = load_input "rows" :: array
        %t1343 = const 0 :: integer
        %t1344 = call core.gt(%col_el_288, %t1343) :: boolean
        %t1345 = call core.and(%t1340, %t1344) :: boolean
        %t528 = call core.or(%t1335, %t1345) :: boolean
        %t291 = const 1 :: integer
        %t292 = const 0 :: integer
        %t293 = select %t528, %t291, %t292 :: integer
        yield %t293
      end_loop
    end_loop
  )
)
