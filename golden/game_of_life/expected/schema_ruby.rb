# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_7f8da9f72da44456b53831adb45862195177b23a6de44ddaeb2f4548d3a03763
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :next_state then _next_state
    else raise KeyError, "Unknown declaration"
    end
  end

  def _next_state(input = @input)
    out = []
    t285 = input["rows"] || input[:rows]
    t1539 = t285.length
    t1540 = -1
    t1542 = 0
    t1546 = 1
    t1334 = 3
    t1339 = 2
    t1547 = t1539 - t1546
    t285.each_with_index do |rows_el_286, rows_i_287|
      out_1 = []
      t1541 = rows_i_287 - t1540
      t1561 = rows_i_287 - t1546
      t1580 = rows_i_287 % t1539
      t1543 = t1541 >= t1542
      t1544 = t1541 < t1539
      t1549 = [[ t1541, t1542 ].max, t1547 ].min
      t1563 = t1561 >= t1542
      t1564 = t1561 < t1539
      t1569 = [[ t1561, t1542 ].max, t1547 ].min
      t1581 = t1580 + t1539
      t1545 = t1543 && t1544
      t1550 = t285[t1549]
      t1565 = t1563 && t1564
      t1570 = t285[t1569]
      t1582 = t1581 % t1539
      t1551 = t1550.length
      t1571 = t1570.length
      t1583 = t285[t1582]
      t1584 = t1583.length
      t1640 = t1551 - t1546
      t1696 = t1571 - t1546
      t1592 = t1584 - t1546
      rows_el_286.each_with_index do |col_el_288, col_i_289|
        t1552 = col_i_289 % t1551
        t1553 = t1552 + t1551
        t1554 = t1553 % t1551
        t1555 = t1550[t1554]
        t1557 = t1545 ? t1555 : t1542
        t1572 = col_i_289 % t1571
        t1573 = t1572 + t1571
        t1574 = t1573 % t1571
        t1575 = t1570[t1574]
        t1577 = t1565 ? t1575 : t1542
        t1586 = col_i_289 - t1540
        t1588 = t1586 >= t1542
        t1589 = t1586 < t1584
        t1590 = t1588 && t1589
        t1594 = [[ t1586, t1542 ].max, t1592 ].min
        t1595 = t1583[t1594]
        t1597 = t1590 ? t1595 : t1542
        t1606 = col_i_289 - t1546
        t1608 = t1606 >= t1542
        t1609 = t1606 < t1584
        t1610 = t1608 && t1609
        t1614 = [[ t1606, t1542 ].max, t1592 ].min
        t1615 = t1583[t1614]
        t1617 = t1610 ? t1615 : t1542
        t1636 = t1586 < t1551
        t1637 = t1588 && t1636
        t1638 = t1545 && t1637
        t1642 = [[ t1586, t1542 ].max, t1640 ].min
        t1643 = t1550[t1642]
        t1645 = t1638 ? t1643 : t1542
        t1664 = t1606 < t1551
        t1665 = t1608 && t1664
        t1666 = t1545 && t1665
        t1670 = [[ t1606, t1542 ].max, t1640 ].min
        t1671 = t1550[t1670]
        t1673 = t1666 ? t1671 : t1542
        t1692 = t1586 < t1571
        t1693 = t1588 && t1692
        t1694 = t1565 && t1693
        t1698 = [[ t1586, t1542 ].max, t1696 ].min
        t1699 = t1570[t1698]
        t1701 = t1694 ? t1699 : t1542
        t1720 = t1606 < t1571
        t1721 = t1608 && t1720
        t1722 = t1565 && t1721
        t1726 = [[ t1606, t1542 ].max, t1696 ].min
        t1727 = t1570[t1726]
        t1729 = t1722 ? t1727 : t1542
        t1332 = [t1557, t1577, t1597, t1617, t1645, t1673, t1701, t1729]
        t1333 = t1332.sum
        t1335 = t1333 == t1334
        t1340 = t1333 == t1339
        t1344 = col_el_288 > t1542
        t1345 = t1340 && t1344
        t528 = t1335 || t1345
        t293 = t528 ? t1546 : t1542
        out_1 << t293
      end
      out << out_1
    end
    out
  end
end
