// Autogenerated by Kumi Codegen for schema KUMI_c2a7571149caec6c718cac3dc0b29e8cd743dd5cb9fa9703f2a3f1e5f647dccd
export class KumiCompiledModule {
  _next_state(input) {
    let out = [];
    let t205 = input["rows"];
    let t979 = t205.length
    const t980 = -1;
    const t993 = 1;
    const t854 = 3;
    const t859 = 2;
    const t863 = 0;
    t205.forEach((rows_el_206, rows_i_207) => {
      let out_1 = [];
      let t981 = rows_i_207 - t980;
      let t994 = rows_i_207 - t993;
      let t1006 = rows_i_207 % t979;
      let t982 = t981 % t979;
      let t995 = t994 % t979;
      let t1007 = t1006 + t979;
      let t983 = t982 + t979;
      let t996 = t995 + t979;
      let t1008 = t1007 % t979;
      let t984 = t983 % t979;
      let t997 = t996 % t979;
      let t1009 = t205[t1008]
      let t985 = t205[t984]
      let t998 = t205[t997]
      let t1010 = t1009.length
      let t986 = t985.length
      let t999 = t998.length
      rows_el_206.forEach((col_el_208, col_i_209) => {
        let t987 = col_i_209 % t986;
        let t988 = t987 + t986;
        let t989 = t988 % t986;
        let t990 = t985[t989]
        let t1000 = col_i_209 % t999;
        let t1001 = t1000 + t999;
        let t1002 = t1001 % t999;
        let t1003 = t998[t1002]
        let t1012 = col_i_209 - t980;
        let t1013 = t1012 % t1010;
        let t1014 = t1013 + t1010;
        let t1015 = t1014 % t1010;
        let t1016 = t1009[t1015]
        let t1025 = col_i_209 - t993;
        let t1026 = t1025 % t1010;
        let t1027 = t1026 + t1010;
        let t1028 = t1027 % t1010;
        let t1029 = t1009[t1028]
        let t1041 = t1012 % t986;
        let t1042 = t1041 + t986;
        let t1043 = t1042 % t986;
        let t1044 = t985[t1043]
        let t1056 = t1025 % t986;
        let t1057 = t1056 + t986;
        let t1058 = t1057 % t986;
        let t1059 = t985[t1058]
        let t1071 = t1012 % t999;
        let t1072 = t1071 + t999;
        let t1073 = t1072 % t999;
        let t1074 = t998[t1073]
        let t1086 = t1025 % t999;
        let t1087 = t1086 + t999;
        let t1088 = t1087 % t999;
        let t1089 = t998[t1088]
        let t852 = [t990, t1003, t1016, t1029, t1044, t1059, t1074, t1089];
        let t853 = t852.reduce((a, b) => a + b, 0);
        let t855 = t853 == t854;
        let t860 = t853 == t859;
        let t864 = col_el_208 > t863;
        let t865 = t860 && t864;
        let t368 = t855 || t865;
        let t213 = t368 ? t993 : t863;
        out_1.push(t213);
      });
      out.push(out_1);
    });
    return out;
  }

}
