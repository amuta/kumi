(SNAST
  (VALUE cube
    (InputRef [:cube]) :: [] -> array
  ) :: [] -> array
  (VALUE layer
    (InputRef [:cube, :layer]) :: [cube] -> array
  ) :: [cube] -> array
  (VALUE row
    (InputRef [:cube, :layer, :row]) :: [cube, layer] -> array
  ) :: [cube, layer] -> array
  (VALUE cell
    (InputRef [:cube, :layer, :row, :cell]) :: [cube, layer, row] -> integer
  ) :: [cube, layer, row] -> integer
  (TRAIT cell_over_limit
    (Call :core.gt
      (InputRef [:cube, :layer, :row, :cell]) :: [cube, layer, row] -> integer
      (Const 100) :: [] -> integer
    ) :: [cube, layer, row] -> boolean
  ) :: [cube, layer, row] -> boolean
  (VALUE cell_sum
    (Call :agg.sum
      (Call :__select__
        (Ref cell_over_limit) :: [cube, layer, row] -> boolean
        (InputRef [:cube, :layer, :row, :cell]) :: [cube, layer, row] -> integer
        (Const 0) :: [] -> integer
      ) :: [cube, layer, row] -> integer
    ) :: [cube, layer] -> integer
  ) :: [cube, layer] -> integer
  (VALUE count_over_limit
    (Call :agg.sum
      (Call :agg.sum
        (Call :agg.sum
          (Call :__select__
            (Ref cell_over_limit) :: [cube, layer, row] -> boolean
            (Const 1) :: [] -> integer
            (Const 0) :: [] -> integer
          ) :: [cube, layer, row] -> integer
        ) :: [cube, layer] -> integer
      ) :: [cube] -> integer
    ) :: [] -> integer
  ) :: [] -> integer
)