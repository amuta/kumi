(LIR
  (Declaration cube
    %t1 = load_input "cube" :: array
    loop cube id=L1 in %t1 as el=%cube_el_2, idx=%cube_i_3
      yield %cube_el_2
    end_loop
  )
  (Declaration layer
    %t4 = load_input "cube" :: array
    loop cube id=L2 in %t4 as el=%cube_el_5, idx=%cube_i_6
      yield %cube_el_5
    end_loop
  )
  (Declaration row
    %t7 = load_input "cube" :: array
    loop cube id=L3 in %t7 as el=%cube_el_8, idx=%cube_i_9
      loop layer id=L4 in %cube_el_8 as el=%layer_el_10, idx=%layer_i_11
        yield %layer_el_10
      end_loop
    end_loop
  )
  (Declaration cell
    %t12 = load_input "cube" :: array
    loop cube id=L5 in %t12 as el=%cube_el_13, idx=%cube_i_14
      loop layer id=L6 in %cube_el_13 as el=%layer_el_15, idx=%layer_i_16
        loop row id=L7 in %layer_el_15 as el=%row_el_17, idx=%row_i_18
          yield %row_el_17
        end_loop
      end_loop
    end_loop
  )
  (Declaration cell_over_limit
    %t19 = load_input "cube" :: array
    %t26 = const 100 :: integer
    loop cube id=L8 in %t19 as el=%cube_el_20, idx=%cube_i_21
      loop layer id=L9 in %cube_el_20 as el=%layer_el_22, idx=%layer_i_23
        loop row id=L10 in %layer_el_22 as el=%row_el_24, idx=%row_i_25
          %t27 = call core.gt(%row_el_24, %t26) :: boolean
          yield %t27
        end_loop
      end_loop
    end_loop
  )
  (Declaration cell_sum
    %t28 = load_input "cube" :: array
    %t58 = const 100 :: integer
    %t37 = const 0 :: integer
    loop cube id=L11 in %t28 as el=%cube_el_29, idx=%cube_i_30
      loop layer id=L12 in %cube_el_29 as el=%layer_el_31, idx=%layer_i_32
        %acc_33 = decl_acc :: integer
        loop row id=L13 in %layer_el_31 as el=%row_el_34, idx=%row_i_35
          %t59 = call core.gt(%row_el_34, %t58) :: boolean
          %t38 = select %t59, %row_el_34, %t37 :: integer
          %acc_33 = acc_add agg.sum(%acc_33, %t38) :: integer
        end_loop
        %t39 = acc_load %acc_33 :: integer
        yield %t39
      end_loop
    end_loop
  )
  (Declaration count_over_limit
    %acc_40 = decl_acc :: integer
    %t41 = load_input "cube" :: array
    %t61 = const 100 :: integer
    %t51 = const 1 :: integer
    %t52 = const 0 :: integer
    loop cube id=L14 in %t41 as el=%cube_el_42, idx=%cube_i_43
      %acc_44 = decl_acc :: integer
      loop layer id=L15 in %cube_el_42 as el=%layer_el_45, idx=%layer_i_46
        %acc_47 = decl_acc :: integer
        loop row id=L16 in %layer_el_45 as el=%row_el_48, idx=%row_i_49
          %t62 = call core.gt(%row_el_48, %t61) :: boolean
          %t53 = select %t62, %t51, %t52 :: integer
          %acc_47 = acc_add agg.sum(%acc_47, %t53) :: integer
        end_loop
        %t54 = acc_load %acc_47 :: integer
        %acc_44 = acc_add agg.sum(%acc_44, %t54) :: integer
      end_loop
      %t55 = acc_load %acc_44 :: integer
      %acc_40 = acc_add agg.sum(%acc_40, %t55) :: integer
    end_loop
    %t56 = acc_load %acc_40 :: integer
    yield %t56
  )
)
