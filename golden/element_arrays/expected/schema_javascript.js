// Autogenerated by Kumi Codegen for schema KUMI_0c5896f495c673cb497152d5ccde9d5efbe406d23829b4528bf6a512e3401de8
export class KumiCompiledModule {
  _cube(input) {
    let out = [];
    let t1 = input["cube"];
    t1.forEach((cube_el_2, cube_i_3) => {
      out.push(cube_el_2);
    });
    return out;
  }

  _layer(input) {
    let out = [];
    let t4 = input["cube"];
    t4.forEach((cube_el_5, cube_i_6) => {
      out.push(cube_el_5);
    });
    return out;
  }

  _row(input) {
    let out = [];
    let t7 = input["cube"];
    t7.forEach((cube_el_8, cube_i_9) => {
      let out_1 = [];
      cube_el_8.forEach((layer_el_10, layer_i_11) => {
        out_1.push(layer_el_10);
      });
      out.push(out_1);
    });
    return out;
  }

  _cell(input) {
    let out = [];
    let t12 = input["cube"];
    t12.forEach((cube_el_13, cube_i_14) => {
      let out_1 = [];
      cube_el_13.forEach((layer_el_15, layer_i_16) => {
        let out_2 = [];
        layer_el_15.forEach((row_el_17, row_i_18) => {
          out_2.push(row_el_17);
        });
        out_1.push(out_2);
      });
      out.push(out_1);
    });
    return out;
  }

  _cell_over_limit(input) {
    let out = [];
    let t19 = input["cube"];
    const t26 = 100;
    t19.forEach((cube_el_20, cube_i_21) => {
      let out_1 = [];
      cube_el_20.forEach((layer_el_22, layer_i_23) => {
        let out_2 = [];
        layer_el_22.forEach((row_el_24, row_i_25) => {
          let t27 = row_el_24 > t26;
          out_2.push(t27);
        });
        out_1.push(out_2);
      });
      out.push(out_1);
    });
    return out;
  }

  _cell_sum(input) {
    let out = [];
    let t28 = input["cube"];
    const t58 = 100;
    const t37 = 0;
    t28.forEach((cube_el_29, cube_i_30) => {
      let out_1 = [];
      cube_el_29.forEach((layer_el_31, layer_i_32) => {
        let acc_33 = 0;
        layer_el_31.forEach((row_el_34, row_i_35) => {
          let t59 = row_el_34 > t58;
          let t38 = t59 ? row_el_34 : t37;
          acc_33 += t38;
        });
        out_1.push(acc_33);
      });
      out.push(out_1);
    });
    return out;
  }

  _count_over_limit(input) {
    let acc_40 = 0;
    let t41 = input["cube"];
    const t61 = 100;
    const t51 = 1;
    const t52 = 0;
    t41.forEach((cube_el_42, cube_i_43) => {
      let acc_44 = 0;
      cube_el_42.forEach((layer_el_45, layer_i_46) => {
        let acc_47 = 0;
        layer_el_45.forEach((row_el_48, row_i_49) => {
          let t62 = row_el_48 > t61;
          let t53 = t62 ? t51 : t52;
          acc_47 += t53;
        });
        acc_44 += acc_47;
      });
      acc_40 += acc_44;
    });
    return acc_40;
  }

}
