// Autogenerated by Kumi Codegen for schema KUMI_0c5896f495c673cb497152d5ccde9d5efbe406d23829b4528bf6a512e3401de8
export class KumiCompiledModule {
  _cube(input) {
    let out = [];
    let t1 = input["cube"];
    t1.forEach((cube_el_2, cube_i_3) => {
      out.push(cube_el_2);
    });
    return out;
  }

  _layer(input) {
    let out = [];
    let t4 = input["cube"];
    t4.forEach((cube_el_5, cube_i_6) => {
      let out_1 = [];
      cube_el_5.forEach((layer_el_7, layer_i_8) => {
        out_1.push(layer_el_7);
      });
      out.push(out_1);
    });
    return out;
  }

  _row(input) {
    let out = [];
    let t9 = input["cube"];
    t9.forEach((cube_el_10, cube_i_11) => {
      let out_1 = [];
      cube_el_10.forEach((layer_el_12, layer_i_13) => {
        let out_2 = [];
        layer_el_12.forEach((row_el_14, row_i_15) => {
          out_2.push(row_el_14);
        });
        out_1.push(out_2);
      });
      out.push(out_1);
    });
    return out;
  }

  _cell(input) {
    let out = [];
    let t16 = input["cube"];
    t16.forEach((cube_el_17, cube_i_18) => {
      let out_1 = [];
      cube_el_17.forEach((layer_el_19, layer_i_20) => {
        let out_2 = [];
        layer_el_19.forEach((row_el_21, row_i_22) => {
          out_2.push(row_el_21);
        });
        out_1.push(out_2);
      });
      out.push(out_1);
    });
    return out;
  }

  _cell_over_limit(input) {
    let out = [];
    let t23 = input["cube"];
    const t30 = 100;
    t23.forEach((cube_el_24, cube_i_25) => {
      let out_1 = [];
      cube_el_24.forEach((layer_el_26, layer_i_27) => {
        let out_2 = [];
        layer_el_26.forEach((row_el_28, row_i_29) => {
          let t31 = row_el_28 > t30;
          out_2.push(t31);
        });
        out_1.push(out_2);
      });
      out.push(out_1);
    });
    return out;
  }

  _cell_sum(input) {
    let out = [];
    let t32 = input["cube"];
    const t62 = 100;
    const t41 = 0;
    t32.forEach((cube_el_33, cube_i_34) => {
      let out_1 = [];
      cube_el_33.forEach((layer_el_35, layer_i_36) => {
        let acc_37 = 0;
        layer_el_35.forEach((row_el_38, row_i_39) => {
          let t63 = row_el_38 > t62;
          let t42 = t63 ? row_el_38 : t41;
          acc_37 += t42;
        });
        out_1.push(acc_37);
      });
      out.push(out_1);
    });
    return out;
  }

  _count_over_limit(input) {
    let acc_44 = 0;
    let t45 = input["cube"];
    const t65 = 100;
    const t55 = 1;
    const t56 = 0;
    t45.forEach((cube_el_46, cube_i_47) => {
      let acc_48 = 0;
      cube_el_46.forEach((layer_el_49, layer_i_50) => {
        let acc_51 = 0;
        layer_el_49.forEach((row_el_52, row_i_53) => {
          let t66 = row_el_52 > t65;
          let t57 = t66 ? t55 : t56;
          acc_51 += t57;
        });
        acc_48 += acc_51;
      });
      acc_44 += acc_48;
    });
    return acc_44;
  }

}
