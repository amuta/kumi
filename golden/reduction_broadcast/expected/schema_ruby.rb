# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_621112a9f96fd9df9274375684d4aad116dd930db67521f72ec03d1f911fd1ca
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :dept_headcount then _dept_headcount
    when :teams_per_dept then _teams_per_dept
    when :avg_headcount_per_dept then _avg_headcount_per_dept
    when :is_above_average_team then _is_above_average_team
    else raise KeyError, "Unknown declaration"
    end
  end

  def _dept_headcount(input = @input)
    out = []
    t1 = input["departments"] || input[:departments]
    t1.each_with_index do |departments_el_2, departments_i_3|
      acc_4 = 0
      t5 = departments_el_2["teams"] || departments_el_2[:teams]
      t5.each_with_index do |teams_el_6, teams_i_7|
        t8 = teams_el_6["headcount"] || teams_el_6[:headcount]
        acc_4 += t8
      end
      t9 = acc_4
      out << t9
    end
    out
  end

  def _teams_per_dept(input = @input)
    out = []
    t10 = input["departments"] || input[:departments]
    t10.each_with_index do |departments_el_11, departments_i_12|
      acc_13 = 0
      t14 = departments_el_11["teams"] || departments_el_11[:teams]
      t14.each_with_index do |teams_el_15, teams_i_16|
        t17 = teams_el_15["team_name"] || teams_el_15[:team_name]
        acc_13 += 1
      end
      t18 = acc_13
      out << t18
    end
    out
  end

  def _avg_headcount_per_dept(input = @input)
    out = []
    t19 = input["departments"] || input[:departments]
    t19.each_with_index do |departments_el_20, departments_i_21|
      acc36 = 0
      t37 = departments_el_20["teams"] || departments_el_20[:teams]
      acc42 = 0
      t37.each_with_index do |teams_el_6, teams_i_7|
        t38 = teams_el_6["headcount"] || teams_el_6[:headcount]
        acc36 += t38
        t44 = teams_el_6["team_name"] || teams_el_6[:team_name]
        acc42 += 1
      end
      t39 = acc36
      t45 = acc42
      t24 = t39 / t45.to_f
      out << t24
    end
    out
  end

  def _is_above_average_team(input = @input)
    out = []
    t25 = input["departments"] || input[:departments]
    t25.each_with_index do |departments_el_26, departments_i_27|
      out_1 = []
      t28 = departments_el_26["teams"] || departments_el_26[:teams]
      acc52 = 0
      acc58 = 0
      t28.each_with_index do |teams_el_6, teams_i_7|
        t54 = teams_el_6["headcount"] || teams_el_6[:headcount]
        acc52 += t54
        t60 = teams_el_6["team_name"] || teams_el_6[:team_name]
        acc58 += 1
      end
      t55 = acc52
      t61 = acc58
      t49 = t55 / t61.to_f
      t28.each_with_index do |teams_el_29, teams_i_30|
        t31 = teams_el_29["headcount"] || teams_el_29[:headcount]
        t33 = t31 > t49
        out_1 << t33
      end
      out << out_1
    end
    out
  end
end
