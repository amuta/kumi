// Autogenerated by Kumi Codegen for schema KUMI_a239dbe769d99c86ee15cb2da17fc4f4fdb07d6486e4f555c6118a9330c06f90
export class KumiCompiledModule {
  constructor(inputData = {}) {
    this.input = inputData;
  }

  static from(inputData = {}) {
    return new KumiCompiledModule(inputData);
  }

  update(inputData) {
    this.input = { ...this.input, ...inputData };
    return this;
  }

  get(name) {
    switch (name) {
      case 'high_performer': return this._high_performer();
      case 'senior_level': return this._senior_level();
      case 'top_team': return this._top_team();
      case 'employee_bonus': return this._employee_bonus();
      default: throw new Error(`Unknown declaration: ${name}`);
    }
  }

  _high_performer(input = this.input) {
    let out = [];
    let t1 = input["regions"];
    t1?.forEach((regions_el_2, regions_i_3) => {
      let out_1 = [];
      let t4 = regions_el_2?.offices;
      t4?.forEach((offices_el_5, offices_i_6) => {
        let out_2 = [];
        let t7 = offices_el_5?.teams;
        t7?.forEach((teams_el_8, teams_i_9) => {
          let out_3 = [];
          let t10 = teams_el_8?.employees;
          t10?.forEach((employees_el_11, employees_i_12) => {
            let t13 = employees_el_11?.rating;
            let t15 = t13 >= 4.5;
            out_3.push(t15);
          });
          out_2.push(out_3);
        });
        out_1.push(out_2);
      });
      out.push(out_1);
    });
    return out;
  }

  _senior_level(input = this.input) {
    let out = [];
    let t16 = input["regions"];
    t16?.forEach((regions_el_17, regions_i_18) => {
      let out_1 = [];
      let t19 = regions_el_17?.offices;
      t19?.forEach((offices_el_20, offices_i_21) => {
        let out_2 = [];
        let t22 = offices_el_20?.teams;
        t22?.forEach((teams_el_23, teams_i_24) => {
          let out_3 = [];
          let t25 = teams_el_23?.employees;
          t25?.forEach((employees_el_26, employees_i_27) => {
            let t28 = employees_el_26?.level;
            let t30 = t28 == "senior";
            out_3.push(t30);
          });
          out_2.push(out_3);
        });
        out_1.push(out_2);
      });
      out.push(out_1);
    });
    return out;
  }

  _top_team(input = this.input) {
    let out = [];
    let t31 = input["regions"];
    t31?.forEach((regions_el_32, regions_i_33) => {
      let out_1 = [];
      let t34 = regions_el_32?.offices;
      t34?.forEach((offices_el_35, offices_i_36) => {
        let out_2 = [];
        let t37 = offices_el_35?.teams;
        t37?.forEach((teams_el_38, teams_i_39) => {
          let t40 = teams_el_38?.performance_score;
          let t42 = t40 >= 0.9;
          out_2.push(t42);
        });
        out_1.push(out_2);
      });
      out.push(out_1);
    });
    return out;
  }

  _employee_bonus(input = this.input) {
    let out = [];
    let t43 = input["regions"];
    t43?.forEach((regions_el_44, regions_i_45) => {
      let out_1 = [];
      let t46 = regions_el_44?.offices;
      t46?.forEach((offices_el_47, offices_i_48) => {
        let out_2 = [];
        let t49 = offices_el_47?.teams;
        t49?.forEach((teams_el_50, teams_i_51) => {
          let out_3 = [];
          let t52 = teams_el_50?.employees;
          let t91 = teams_el_50?.performance_score;
          let t93 = t91 >= 0.9;
          t52?.forEach((employees_el_53, employees_i_54) => {
            let t78 = employees_el_53?.rating;
            let t80 = t78 >= 4.5;
            let t85 = employees_el_53?.level;
            let t87 = t85 == "senior";
            let t58 = t87 && t93;
            let t59 = t80 && t58;
            let t60 = employees_el_53?.salary;
            let t62 = t60 * 0.3;
            let t65 = t80 && t93;
            let t68 = t60 * 0.2;
            let t71 = t60 * 0.05;
            let t72 = t65 ? t68 : t71;
            let t73 = t59 ? t62 : t72;
            out_3.push(t73);
          });
          out_2.push(out_3);
        });
        out_1.push(out_2);
      });
      out.push(out_1);
    });
    return out;
  }

}
