(LIR
  (Declaration high_performer
    %t1 = load_input "regions" :: array
    %t14 = const 4.5 :: float
    loop regions id=L1 in %t1 as el=%regions_el_2, idx=%regions_i_3
      %t4 = load_field regions_el_2["offices"] :: array
      loop offices id=L2 in %t4 as el=%offices_el_5, idx=%offices_i_6
        %t7 = load_field offices_el_5["teams"] :: array
        loop teams id=L3 in %t7 as el=%teams_el_8, idx=%teams_i_9
          %t10 = load_field teams_el_8["employees"] :: array
          loop employees id=L4 in %t10 as el=%employees_el_11, idx=%employees_i_12
            %t13 = load_field employees_el_11["rating"] :: float
            %t15 = call core.gte(%t13, %__immediate_placeholder__) :: boolean
            yield %t15
          end_loop
        end_loop
      end_loop
    end_loop
  )
  (Declaration senior_level
    %t16 = load_input "regions" :: array
    %t29 = const "senior" :: string
    loop regions id=L5 in %t16 as el=%regions_el_17, idx=%regions_i_18
      %t19 = load_field regions_el_17["offices"] :: array
      loop offices id=L6 in %t19 as el=%offices_el_20, idx=%offices_i_21
        %t22 = load_field offices_el_20["teams"] :: array
        loop teams id=L7 in %t22 as el=%teams_el_23, idx=%teams_i_24
          %t25 = load_field teams_el_23["employees"] :: array
          loop employees id=L8 in %t25 as el=%employees_el_26, idx=%employees_i_27
            %t28 = load_field employees_el_26["level"] :: string
            %t30 = call core.eq(%t28, %__immediate_placeholder__) :: boolean
            yield %t30
          end_loop
        end_loop
      end_loop
    end_loop
  )
  (Declaration top_team
    %t31 = load_input "regions" :: array
    %t41 = const 0.9 :: float
    loop regions id=L9 in %t31 as el=%regions_el_32, idx=%regions_i_33
      %t34 = load_field regions_el_32["offices"] :: array
      loop offices id=L10 in %t34 as el=%offices_el_35, idx=%offices_i_36
        %t37 = load_field offices_el_35["teams"] :: array
        loop teams id=L11 in %t37 as el=%teams_el_38, idx=%teams_i_39
          %t40 = load_field teams_el_38["performance_score"] :: float
          %t42 = call core.gte(%t40, %__immediate_placeholder__) :: boolean
          yield %t42
        end_loop
      end_loop
    end_loop
  )
  (Declaration employee_bonus
    %t43 = load_input "regions" :: array
    %t79 = const 4.5 :: float
    %t86 = const "senior" :: string
    %t92 = const 0.9 :: float
    %t61 = const 0.3 :: float
    %t67 = const 0.2 :: float
    %t70 = const 0.05 :: float
    loop regions id=L12 in %t43 as el=%regions_el_44, idx=%regions_i_45
      %t46 = load_field regions_el_44["offices"] :: array
      loop offices id=L13 in %t46 as el=%offices_el_47, idx=%offices_i_48
        %t49 = load_field offices_el_47["teams"] :: array
        loop teams id=L14 in %t49 as el=%teams_el_50, idx=%teams_i_51
          %t52 = load_field teams_el_50["employees"] :: array
          %t91 = load_field teams_el_50["performance_score"] :: float
          %t93 = call core.gte(%t91, %__immediate_placeholder__) :: boolean
          loop employees id=L15 in %t52 as el=%employees_el_53, idx=%employees_i_54
            %t78 = load_field employees_el_53["rating"] :: float
            %t80 = call core.gte(%t78, %__immediate_placeholder__) :: boolean
            %t85 = load_field employees_el_53["level"] :: string
            %t87 = call core.eq(%t85, %__immediate_placeholder__) :: boolean
            %t58 = call core.and(%t87, %t93) :: boolean
            %t59 = call core.and(%t80, %t58) :: boolean
            %t60 = load_field employees_el_53["salary"] :: float
            %t62 = call core.mul(%t60, %__immediate_placeholder__) :: float
            %t65 = call core.and(%t80, %t93) :: boolean
            %t68 = call core.mul(%t60, %__immediate_placeholder__) :: float
            %t71 = call core.mul(%t60, %__immediate_placeholder__) :: float
            %t72 = select %t65, %t68, %t71 :: float
            %t73 = select %t59, %t62, %t72 :: float
            yield %t73
          end_loop
        end_loop
      end_loop
    end_loop
  )
)
