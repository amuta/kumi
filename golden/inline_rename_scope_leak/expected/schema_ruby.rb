# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_3032bccd1b0376f309ad8f6a4df1386cd3c2b527c2af7e28c4ad37f3ba9955c0
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :sum_x then _sum_x
    when :sum_y then _sum_y
    when :tail then _tail
    when :out then _out
    else raise KeyError, "Unknown declaration"
    end
  end

  def _sum_x(input = @input)
    acc_1 = 0.0
    t2 = input["xs"] || input[:xs]
    t2.each_with_index do |xs_el_3, xs_i_4|
      t5 = xs_el_3["v"] || xs_el_3[:v]
      acc_1 += t5
    end
    acc_1
  end

  def _sum_y(input = @input)
    acc_7 = 0.0
    t8 = input["ys"] || input[:ys]
    t8.each_with_index do |ys_el_9, ys_i_10|
      t11 = ys_el_9["v"] || ys_el_9[:v]
      acc_7 += t11
    end
    acc_7
  end

  def _tail(input = @input)
    t13 = 7.0
    t14 = 5.0
    t13 + t14
  end

  def _out(input = @input)
    acc21 = 0.0
    t22 = input["xs"] || input[:xs]
    t22.each_with_index do |t23, t24|
      t25 = t23["v"] || t23[:v]
      acc21 += t25
    end
    t26 = acc21
    acc28 = 0.0
    t29 = input["ys"] || input[:ys]
    t29.each_with_index do |t30, t31|
      t32 = t30["v"] || t30[:v]
      acc28 += t32
    end
    t33 = acc28
    t34 = 7.0
    t35 = 5.0
    t36 = t34 + t35
    t19 = {
      "x" => t26,
      "y" => t33,
      "t" => t36
    }
    t19
  end
end
