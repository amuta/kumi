(LIR
  (Declaration tuple
    %t1 = const 1 :: integer
    %t2 = const 2 :: integer
    %t3 = const 3 :: integer
    %t4 = load_input "x" :: integer
    %t5 = make_tuple(%t1, %t2, %t3, %t4) :: tuple<integer>
    yield %t5
  )
  (Declaration max_1
    %t6 = load_decl tuple :: tuple<integer>
    %t7 = fold %t6 fn="agg.max" :: integer
    yield %t7
  )
  (Declaration max_2
    %t8 = const 1 :: integer
    %t9 = const 2 :: integer
    %t10 = const 3 :: integer
    %t11 = load_input "x" :: integer
    %t12 = const 1000 :: integer
    %t13 = make_tuple(%t8, %t9, %t10, %t11, %t12) :: tuple<integer>
    %t14 = fold %t13 fn="agg.max" :: integer
    yield %t14
  )
  (Declaration min_1
    %t15 = load_decl tuple :: tuple<integer>
    %t16 = fold %t15 fn="agg.min" :: integer
    yield %t16
  )
  (Declaration min_2
    %t17 = const 1 :: integer
    %t18 = const 2 :: integer
    %t19 = const 3 :: integer
    %t20 = load_input "x" :: integer
    %t21 = const -100 :: integer
    %t22 = make_tuple(%t17, %t18, %t19, %t20, %t21) :: tuple<integer>
    %t23 = fold %t22 fn="agg.min" :: integer
    yield %t23
  )
)
