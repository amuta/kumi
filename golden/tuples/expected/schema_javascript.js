// Autogenerated by Kumi Codegen for schema KUMI_b97ef69bbba66255a1a6ffb9d0d22840f7efc99354fec5ccbfa37561d9c4be51
export class KumiCompiledModule {
  constructor(inputData = {}) {
    this.input = inputData;
  }

  static from(inputData = {}) {
    return new KumiCompiledModule(inputData);
  }

  update(inputData) {
    this.input = { ...this.input, ...inputData };
    return this;
  }

  get(name) {
    switch (name) {
      case 'tuple': return this._tuple();
      case 'max_1': return this._max_1();
      case 'max_2': return this._max_2();
      case 'min_1': return this._min_1();
      case 'min_2': return this._min_2();
      default: throw new Error(`Unknown declaration: ${name}`);
    }
  }

  _tuple(input = this.input) {
    const t1 = 1;
    const t2 = 2;
    const t3 = 3;
    let t4 = input["x"];
    let t5 = [t1, t2, t3, t4];
    return t5;
  }

  _max_1(input = this.input) {
    const t24 = 1;
    const t25 = 2;
    const t26 = 3;
    let t27 = input["x"];
    let t28 = [t24, t25, t26, t27];
    let t7 = Math.max(...t28);
    return t7;
  }

  _max_2(input = this.input) {
    const t8 = 1;
    const t9 = 2;
    const t10 = 3;
    let t11 = input["x"];
    const t12 = 1000;
    let t13 = [t8, t9, t10, t11, t12];
    let t14 = Math.max(...t13);
    return t14;
  }

  _min_1(input = this.input) {
    const t29 = 1;
    const t30 = 2;
    const t31 = 3;
    let t32 = input["x"];
    let t33 = [t29, t30, t31, t32];
    let t16 = Math.min(...t33);
    return t16;
  }

  _min_2(input = this.input) {
    const t17 = 1;
    const t18 = 2;
    const t19 = 3;
    let t20 = input["x"];
    const t21 = -100;
    let t22 = [t17, t18, t19, t20, t21];
    let t23 = Math.min(...t22);
    return t23;
  }

}
