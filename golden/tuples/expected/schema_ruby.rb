# Autogenerated by Kumi Codegen
module Kumi::Compiled::KUMI_b97ef69bbba66255a1a6ffb9d0d22840f7efc99354fec5ccbfa37561d9c4be51
  def self.from(input_data = nil)
    instance = Object.new
    instance.extend(self)
    instance.instance_variable_set(:@input, input_data)
    instance
  end

  def self.__kumi_executable__
    instance = Object.new
    instance.extend(self)
    instance
  end

  def update(input_data)
    @input = @input.merge(input_data)
    self
  end

  def [](name)
    case name
    when :tuple then _tuple
    when :max_1 then _max_1
    when :max_2 then _max_2
    when :min_1 then _min_1
    when :min_2 then _min_2
    else raise KeyError, "Unknown declaration"
    end
  end

  def _tuple(input = @input)
    t1 = 1
    t2 = 2
    t3 = 3
    t4 = input["x"] || input[:x]
    [t1, t2, t3, t4]
  end

  def _max_1(input = @input)
    t24 = 1
    t25 = 2
    t26 = 3
    t27 = input["x"] || input[:x]
    t28 = [t24, t25, t26, t27]
    t28.max
  end

  def _max_2(input = @input)
    t8 = 1
    t9 = 2
    t10 = 3
    t11 = input["x"] || input[:x]
    t12 = 1000
    t13 = [t8, t9, t10, t11, t12]
    t13.max
  end

  def _min_1(input = @input)
    t29 = 1
    t30 = 2
    t31 = 3
    t32 = input["x"] || input[:x]
    t33 = [t29, t30, t31, t32]
    t33.min
  end

  def _min_2(input = @input)
    t17 = 1
    t18 = 2
    t19 = 3
    t20 = input["x"] || input[:x]
    t21 = -100
    t22 = [t17, t18, t19, t20, t21]
    t22.min
  end
end
